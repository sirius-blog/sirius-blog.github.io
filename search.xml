<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>NodePPT Demo</title>
      <link href="/posts/2404377996.html"/>
      <url>/posts/2404377996.html</url>
      
        <content type="html"><![CDATA[<blockquote><ul><li>说明：本文仅为应用备份，各章节内容均来源于<a href="https://github.com/ksky521/nodeppt">nodeppt</a> ,源件查看推荐访问<a href="https://github.com/ksky521/nodeppt">nodeppt</a> ，感谢大佬开源。</li></ul></blockquote><h2 id="index"><a class="markdownIt-Anchor" href="#index"></a> index</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><iframe src="../../../../nodeppt/index/dist/index.html" width="100%" height="800px" name="topFrame" scrolling="yes" noresize="noresize" frameborder="0" id="topFrame"></iframe></div></details><h2 id="classes"><a class="markdownIt-Anchor" href="#classes"></a> classes</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><iframe src="../../../../nodeppt/classes/dist/classes.html" width="100%" height="800px" name="topFrame" scrolling="yes" noresize="noresize" frameborder="0" id="topFrame"></iframe></div></details><h2 id="background"><a class="markdownIt-Anchor" href="#background"></a> background</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><iframe src="../../../../nodeppt/background/dist/background.html" width="100%" height="800px" name="topFrame" scrolling="yes" noresize="noresize" frameborder="0" id="topFrame"></iframe></div></details><h2 id="component"><a class="markdownIt-Anchor" href="#component"></a> component</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><iframe src="../../../../nodeppt/component/dist/component.html" width="100%" height="800px" name="topFrame" scrolling="yes" noresize="noresize" frameborder="0" id="topFrame"></iframe></div></details><h2 id="animation"><a class="markdownIt-Anchor" href="#animation"></a> animation</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><iframe src="../../../../nodeppt/animation/dist/animation.html" width="100%" height="800px" name="topFrame" scrolling="yes" noresize="noresize" frameborder="0" id="topFrame"></iframe></div></details><h2 id="layout"><a class="markdownIt-Anchor" href="#layout"></a> layout</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><iframe src="../../../../nodeppt/layout/dist/layout.html" width="100%" height="800px" name="topFrame" scrolling="yes" noresize="noresize" frameborder="0" id="topFrame"></iframe></div></details><h2 id="echarts"><a class="markdownIt-Anchor" href="#echarts"></a> echarts</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><iframe src="../../../../nodeppt/echarts/dist/echarts.html" width="100%" height="800px" name="topFrame" scrolling="yes" noresize="noresize" frameborder="0" id="topFrame"></iframe></div></details><h2 id="mermaid"><a class="markdownIt-Anchor" href="#mermaid"></a> mermaid</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><iframe src="../../../../nodeppt/mermaid/dist/mermaid.html" width="100%" height="800px" name="topFrame" scrolling="yes" noresize="noresize" frameborder="0" id="topFrame"></iframe></div></details><h2 id="media"><a class="markdownIt-Anchor" href="#media"></a> media</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><iframe src="../../../../nodeppt/media/dist/media.html" width="100%" height="800px" name="topFrame" scrolling="yes" noresize="noresize" frameborder="0" id="topFrame"></iframe></div></details>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/posts/4a17b156.html"/>
      <url>/posts/4a17b156.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="quick-start"><a class="markdownIt-Anchor" href="#quick-start"></a> Quick Start</h2><h3 id="create-a-new-post"><a class="markdownIt-Anchor" href="#create-a-new-post"></a> Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="run-server"><a class="markdownIt-Anchor" href="#run-server"></a> Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="generate-static-files"><a class="markdownIt-Anchor" href="#generate-static-files"></a> Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="deploy-to-remote-sites"><a class="markdownIt-Anchor" href="#deploy-to-remote-sites"></a> Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>小知识(1) 什么是通道增益</title>
      <link href="/posts/3211157357.html"/>
      <url>/posts/3211157357.html</url>
      
        <content type="html"><![CDATA[<blockquote><ul><li>说明：知识拓展。</li></ul></blockquote><h2 id="什么是通道增益"><a class="markdownIt-Anchor" href="#什么是通道增益"></a> 什么是通道增益？</h2><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">个人理解    </button><div class="hide-content"><p>我的理解：<br />某信号经设备后由小变大，这个信号的大小之间的差异就是增益，信号是经由通道输入、输出的，因此叫通道增益。<br />计算公式：通道增益 = 输出功率-输入功率。</p></div></div><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">科学芝士    </button><div class="hide-content"><p>官方解析：<br />暂无。</p></div></div>]]></content>
      
      
      <categories>
          
          <category> IC小知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 微波认知 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小知识(2) 什么是通道增益平坦度</title>
      <link href="/posts/3202538405.html"/>
      <url>/posts/3202538405.html</url>
      
        <content type="html"><![CDATA[<blockquote><ul><li>说明：知识拓展。</li></ul></blockquote><h2 id="什么是通道增益平坦度"><a class="markdownIt-Anchor" href="#什么是通道增益平坦度"></a> 什么是通道增益平坦度？</h2><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">个人理解    </button><div class="hide-content"><p>我的理解：<br />不同频点的同等大小信号经设备通道增益后可能会出现不同的增益效果，最大最小的增益之间的差值就代表了增益的落差程度，也就是增益的起伏程度，起伏越小就表示设备通道增益越平稳，这就叫通道增益平坦度。<br />计算公式：增益差=增益最大值-增益最小值。</p></div></div><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">科学芝士    </button><div class="hide-content"><p>官方解析：<br />增益平坦度是指工作频带内功率增益的起伏，常用最高增益和最低增益之差，即DG来表示。</p></div></div>]]></content>
      
      
      <categories>
          
          <category> IC小知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 微波认知 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PCB拓展(2) 常见器件封装及焊接曲线</title>
      <link href="/posts/425272644.html"/>
      <url>/posts/425272644.html</url>
      
        <content type="html"><![CDATA[<blockquote><ul><li>说明：本文章旨在记录器件封装的相关认知信息。</li></ul></blockquote><h2 id="mt41j256m16m"><a class="markdownIt-Anchor" href="#mt41j256m16m"></a> MT41J256M16M</h2><p>BGA器件。其焊接温度见Micron BGA焊接温度曲线。</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看曲线    </button><div class="hide-content"><img src="" alt="曲线" style="zoom:50%;" /></div></div><h2 id="xc7vx690tffg1927"><a class="markdownIt-Anchor" href="#xc7vx690tffg1927"></a> XC7VX690TFFG1927</h2><p>BGA器件。其焊接温度见XILINX BGA焊接温度曲线。</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看曲线    </button><div class="hide-content"><img src="" alt="曲线" style="zoom:50%;" /></div></div><h2 id="ltm4630iv"><a class="markdownIt-Anchor" href="#ltm4630iv"></a> LTM4630IV</h2><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看曲线    </button><div class="hide-content"><img src="" alt="曲线" style="zoom:50%;" /></div></div><h2 id="ltm4630iv-2"><a class="markdownIt-Anchor" href="#ltm4630iv-2"></a> LTM4630IV</h2><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看曲线    </button><div class="hide-content"><img src="" alt="曲线" style="zoom:50%;" /></div></div><h2 id="闲谈"><a class="markdownIt-Anchor" href="#闲谈"></a> 闲谈</h2>]]></content>
      
      
      <categories>
          
          <category> PCB 拓展 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PCB </tag>
            
            <tag> 应用拓展 </tag>
            
            <tag> 器件封装及焊接曲线 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小知识(3) 什么是中频杂散</title>
      <link href="/posts/1657519875.html"/>
      <url>/posts/1657519875.html</url>
      
        <content type="html"><![CDATA[<blockquote><ul><li>说明：知识拓展。</li></ul></blockquote><h2 id="什么是中频杂散"><a class="markdownIt-Anchor" href="#什么是中频杂散"></a> 什么是中频杂散？</h2><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">个人理解    </button><div class="hide-content"><p>我的理解：<br />不同频点的同等大小信号经设备通道增益后可能会出现不同的增益效果，最大最小的增益之间的差值就代表了增益的落差程度，也就是增益的起伏程度，起伏越小就表示设备通道增益越平稳，这就叫通道增益平坦度。<br />计算公式：增益差=增益最大值-增益最小值。</p></div></div><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">科学芝士    </button><div class="hide-content"><p>官方解析：<br />暂无。</p></div></div>]]></content>
      
      
      <categories>
          
          <category> IC小知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 微波认知 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文档格式(1) 生产文档</title>
      <link href="/posts/2708347695.html"/>
      <url>/posts/2708347695.html</url>
      
        <content type="html"><![CDATA[<blockquote><ul><li>说明：采购计划样板。</li></ul></blockquote><table border="1" style="border-collapse: collapse;">        <!-- 标题 -->        <caption> XXXXXX设备 2000年01月采购计划</caption>        <!-- 头部 -->        <thead>            <tr>                <th rowspan="2">序号</th>                <th colspan="2">项目名称：XXXXXX设备 </th>                <th colspan="2">项目代号：MH370 </th>                <th colspan="4">设备编号：MH370-2000010001 </th>            </tr>            <tr>                <th>采购物品名称</th>                <th>型号规格</th>                <th>生产厂家</th>                <th>计划数量</th>                <th>库存量</th>                <th>采购数量</th>                <th>计划到货期</th>                <th>备注</th>            </tr>        </thead>        <!-- 主体 --><tbody>            <tr>                <td size=5>1</td>                <td>集成电路</td>                <td>集成电路TPS74401KTW</td>                <td>Texas Instruments</td>                <td>200</td>                <td>50</td>                <td>150</td>                <td>2000.05.20</td>                <td> </td>            </tr>            <tr>                <td>2</td>                <td>   </td>                <td>   </td>                <td>   </td>                <td>   </td>                <td>   </td>                <td>   </td>                <td>   </td>                <td>   </td>            </tr></tbody>        <!-- 底部 --><tfoot>            <tr>                <td colspan="2"> 编制/日期 </td>                <td colspan="1">  </td>                <td colspan="2"> 审核/日期 </td>                <td colspan="1">  </td>                <td colspan="2"> 批准/日期 </td>                <td colspan="1">  </td>            </tr></tfoot></table>]]></content>
      
      
      <categories>
          
          <category> PCB 拓展 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 应用拓展 </tag>
            
            <tag> 文档格式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文档格式(2) 进货检验记录</title>
      <link href="/posts/3713435763.html"/>
      <url>/posts/3713435763.html</url>
      
        <content type="html"><![CDATA[<blockquote><ul><li>说明：进货检验记录样板。</li></ul></blockquote><table style="border-collapse: collapse; ">        <!-- 标题 -->            <tr>                <td style="border: 0px;" align="left">XXXXXX公司</td>                <td style="border: 0px;font-size: large;" align="center">进货检验记录表</td>                <td style="border: 0px;" align="right" colspan="2">表单编号：XX-XX-XX</td>            </tr>            <tr>                <td style="border: 0px;" colspan="2"> </td>                <td style="border: 0px;" align="right">NO：</td>                <td style="border: 0px;"> </td>            </tr></table><table border="0px" style="border-collapse: collapse;">        <!-- 标题 -->     <!--    <caption> 进货检验记录表 </caption>        头部 -->        <thead>            <tr>                <th rowspan="2">日期</th>                <th rowspan="2">供方名称</th>                <th rowspan="2">产品</th>                <th rowspan="2">送检<br>数量</th>                <th rowspan="2">抽检<br>数量</th>                <th colspan="6">质量检验情况</th>                <th colspan="2">验证结果</th>                <th rowspan="2">备注</th>            </tr>            <tr>                <th>A</th>                <th>B</th>                <th>C</th>                <th>D</th>                <th>E</th>                <th>其它</th>                <th>合格</th>                <th>不合格</th>            </tr>        </thead>        <!-- 主体 --><tbody>            <tr>                <td>2000.01.01</td>                <td>AMD</td>                <td>CPU</td>                <td>52</td>                <td>2</td>                <td> </td>                <td> </td>                <td> </td>                <td> </td>                <td> </td>                <td> </td>                <td> </td>                <td> </td>                <td> </td>            </tr>            <tr>                <td> </td>                <td> </td>                <td> </td>                <td> </td>                <td> </td>                <td> </td>                <td> </td>                <td> </td>                <td> </td>                <td> </td>                <td> </td>                <td> </td>                <td> </td>                <td> </td>            </tr>            <tr>                <td> </td>                <td> </td>                <td> </td>                <td> </td>                <td> </td>                <td> </td>                <td> </td>                <td> </td>                <td> </td>                <td> </td>                <td> </td>                <td> </td>                <td> </td>                <td> </td>            </tr></tbody>        <!-- 底部 --><tfoot>            <tr>                <td style="border: 0px;font-size: smaller;" align="left" colspan="14"> 注：A 供货单位应符合要求；B 包装完好；C具有合格证明或相应的测试证明；D 规格、生产单位、数量要与入库单相符； E外型封装牢固、整齐，无裂缝、无气孔，引脚的镀层应平整，无氧化、锈蚀、断裂。符合要求用“√”表示，不符合要求用“×”表示。 </td>            </tr>            <tr>                <td style="border: 0px;" colspan="10"> </td>                <td style="border: 0px;" align="right" colspan="2">质检人员</td>                <td style="border: 0px;" align="left" colspan="2">  </td>            </tr></tfoot></table>]]></content>
      
      
      <categories>
          
          <category> PCB 拓展 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 应用拓展 </tag>
            
            <tag> 文档格式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PCB拓展(1) 器件封装认知</title>
      <link href="/posts/3661460522.html"/>
      <url>/posts/3661460522.html</url>
      
        <content type="html"><![CDATA[<blockquote><ul><li>说明：本文章旨在记录器件封装的相关认知信息。</li></ul></blockquote><h2 id="agp封装"><a class="markdownIt-Anchor" href="#agp封装"></a> AGP封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="amr封装"><a class="markdownIt-Anchor" href="#amr封装"></a> AMR封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="ax14封装"><a class="markdownIt-Anchor" href="#ax14封装"></a> AX14封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="ax078封装"><a class="markdownIt-Anchor" href="#ax078封装"></a> AX078封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="bga封装ball-grid-array-package"><a class="markdownIt-Anchor" href="#bga封装ball-grid-array-package"></a> BGA封装(Ball Grid Array Package)</h2><p>球栅阵列封装，简称BGA(Ball Grid Array Package)。</p><p>BGA封装的I/O端子以圆形或柱状焊点按阵列形式分布在封装下面，BGA技术的优点是I/O引脚数虽然增加了，但引脚间距并没有减小反而增加了，从而提高了组装成品率。</p><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="c-bend-lead封装"><a class="markdownIt-Anchor" href="#c-bend-lead封装"></a> C-Bend Lead封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="ceramic封装"><a class="markdownIt-Anchor" href="#ceramic封装"></a> CERAMIC封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="cerpack封装"><a class="markdownIt-Anchor" href="#cerpack封装"></a> CERPACK封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="cerquad封装"><a class="markdownIt-Anchor" href="#cerquad封装"></a> CERQUAD封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="clcc封装"><a class="markdownIt-Anchor" href="#clcc封装"></a> CLCC封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="cnr封装"><a class="markdownIt-Anchor" href="#cnr封装"></a> CNR封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="die封装"><a class="markdownIt-Anchor" href="#die封装"></a> DIE封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="dimm封装"><a class="markdownIt-Anchor" href="#dimm封装"></a> DIMM封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="dip封装dual-in-line-package"><a class="markdownIt-Anchor" href="#dip封装dual-in-line-package"></a> DIP封装(dual in-line package)</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>双列直插封装（英语：dual in-line package） 也称为DIP封装或DIP包装，简称为DIP或DIL，是一种集成电路的封装方式，集成电路的外形为长方形，在其两侧则有两排平行的金属引脚，称为排针。DIP包装的元件可以焊接在印刷电路板电镀的贯穿孔中，或是插入在DIP插座（socket）上。</p><p>DIP包装的元件一般会简称为DIPn，其中n是引脚的个数，例如十四针的集成电路即称为DIP14。</p><p>DIP的引脚节距较大（为2.54mm），占用PCB板较多的控件，为此出现了SHDIP和SKDIP等改进形式，减小引脚节距和缩小体积上做了改进。但DIP的最大引脚数难以提高，最大64。</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="do-4封装"><a class="markdownIt-Anchor" href="#do-4封装"></a> DO-4封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="do-5封装"><a class="markdownIt-Anchor" href="#do-5封装"></a> DO-5封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="do-8封装"><a class="markdownIt-Anchor" href="#do-8封装"></a> DO-8封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="do-9封装"><a class="markdownIt-Anchor" href="#do-9封装"></a> DO-9封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="eisa封装"><a class="markdownIt-Anchor" href="#eisa封装"></a> EISA封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="fbga封装"><a class="markdownIt-Anchor" href="#fbga封装"></a> FBGA封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="flat-pack封装"><a class="markdownIt-Anchor" href="#flat-pack封装"></a> Flat Pack封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="fto封装"><a class="markdownIt-Anchor" href="#fto封装"></a> FTO封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="gull-wing-leads封装"><a class="markdownIt-Anchor" href="#gull-wing-leads封装"></a> Gull Wing Leads封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="hr-16封装"><a class="markdownIt-Anchor" href="#hr-16封装"></a> HR-16封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="hr-23封装"><a class="markdownIt-Anchor" href="#hr-23封装"></a> HR-23封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="hsop封装"><a class="markdownIt-Anchor" href="#hsop封装"></a> HSOP封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="ht16封装"><a class="markdownIt-Anchor" href="#ht16封装"></a> HT16封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="ht23封装"><a class="markdownIt-Anchor" href="#ht23封装"></a> HT23封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="ht29封装"><a class="markdownIt-Anchor" href="#ht29封装"></a> HT29封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="isa封装"><a class="markdownIt-Anchor" href="#isa封装"></a> ISA封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="isolated封装"><a class="markdownIt-Anchor" href="#isolated封装"></a> ISOLATED封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="ito封装"><a class="markdownIt-Anchor" href="#ito封装"></a> ITO封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="jlcc封装"><a class="markdownIt-Anchor" href="#jlcc封装"></a> JLCC封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="laminate封装"><a class="markdownIt-Anchor" href="#laminate封装"></a> LAMINATE封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="lcc封装"><a class="markdownIt-Anchor" href="#lcc封装"></a> LCC封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="lccc封装"><a class="markdownIt-Anchor" href="#lccc封装"></a> LCCC封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="ldcc封装"><a class="markdownIt-Anchor" href="#ldcc封装"></a> LDCC封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="lga封装"><a class="markdownIt-Anchor" href="#lga封装"></a> LGA封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="llp封装"><a class="markdownIt-Anchor" href="#llp封装"></a> LLP封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="lqfp封装"><a class="markdownIt-Anchor" href="#lqfp封装"></a> LQFP封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="mdip封装"><a class="markdownIt-Anchor" href="#mdip封装"></a> MDIP封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="metal-quad-101l封装"><a class="markdownIt-Anchor" href="#metal-quad-101l封装"></a> METAL QUAD 101L封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="micro-array封装"><a class="markdownIt-Anchor" href="#micro-array封装"></a> MICRO ARRAY封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="micro-smd封装"><a class="markdownIt-Anchor" href="#micro-smd封装"></a> MICRO SMD封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="micro-smdxt封装"><a class="markdownIt-Anchor" href="#micro-smdxt封装"></a> MICRO SMDXT封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="mini-soic封装"><a class="markdownIt-Anchor" href="#mini-soic封装"></a> MINI SOIC封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="pci封装"><a class="markdownIt-Anchor" href="#pci封装"></a> PCI封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="pcmcia封装"><a class="markdownIt-Anchor" href="#pcmcia封装"></a> PCMCIA封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="pga封装pin-grid-array-package"><a class="markdownIt-Anchor" href="#pga封装pin-grid-array-package"></a> PGA封装(Pin Grid Array Package)</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>PGA封装，英文全称为(Pin Grid Array Package)，中文含义叫插针网格阵列封装技术，由这种技术封装的芯片内外有多个方阵形的插针，每个方阵形插针沿芯片的四周间隔一定距离排列，根据管脚数目的多少，可以围成2～5圈。安装时，将芯片插入专门的PGA插座。</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="plcc封装"><a class="markdownIt-Anchor" href="#plcc封装"></a> PLCC封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="pos封装"><a class="markdownIt-Anchor" href="#pos封装"></a> POS封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="pqfp封装plastic-quad-flat-package"><a class="markdownIt-Anchor" href="#pqfp封装plastic-quad-flat-package"></a> PQFP封装(Plastic Quad Flat Package)</h2><p>PQFP封装(Plastic Quad Flat Package，塑料方块平面封装)是一种芯片封装形式。PQFP封装的芯片的四周均有引脚，其引脚总数一般都在100以上，而且引脚之间距离很小，管脚也很细，一般大规模或超大规模集成电路采用这种封装形式。</p><p>用这种形式封装的芯片必须采用SMT(Surface Mount Technology，表面组装技术)将芯片边上的引脚与主板焊接起来。采用SMT安装的芯片不必在主板上打孔，一般在主板表面上有设计好的相应管脚的焊点。将芯片各脚对准相应的焊点，即可实现与主板的焊接。PQFP封装适用于SMT表面安装技术在PCB上安装布线，适合高频使用，它具有操作方便、可靠性高、工艺成熟、价格低廉等优点。</p><p>但是，PQFP封装的缺点也很明显，由于芯片边长有限，使得PQFP封装方式的引脚数量无法增加，从而限制了图形加速芯片的发展。平行针脚也是阻碍PQFP封装继续发展的绊脚石，由于平行针脚在传输高频信号时会产生一定的电容，进而产生高频的噪声信号，再加上长长的针脚很容易吸收这种干扰噪音，就如同收音机的天线一样，几百根“天线”之间互相干扰，使得PQFP封装的芯片很难工作在较高频率下。此外，PQFP封装的芯片面积/封装面积比过小，也限制了PQFP封装的发展。90年代后期，随着BGA技术的不断成熟，PQFP终于被市场淘汰。</p><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="psdip封装"><a class="markdownIt-Anchor" href="#psdip封装"></a> PSDIP封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="psop封装"><a class="markdownIt-Anchor" href="#psop封装"></a> PSOP封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="qfn封装quad-flat-no-leads-package"><a class="markdownIt-Anchor" href="#qfn封装quad-flat-no-leads-package"></a> QFN封装(Quad Flat No-leads Package)</h2><p>QFN（Quad Flat No-leads Package，方形扁平无引脚封装），表面贴装型封装之一。QFN 是日本电子机械工业 会规定的名称。封装四侧配置有电极触点，由于无引脚，贴装占有面积比QFP 小，高度 比QFP 低。但是，当印刷基板与封装之间产生应力时，在电极接触处就不能得到缓解。因此电 极触点 难于做到QFP 的引脚那样多，一般从14 到100 左右。 材料有陶瓷和塑料两种。</p><p>QFN是一种无引脚封装，呈正方形或矩形，封装底部中央位置有一个大面积裸露焊盘用来导热，围绕大焊盘的封装外围四周有实现电气连结的导电焊盘。</p><p>XQFN16, plastic, extremely thin quad flat package; no leads; 16 terminals; 0.4 mm pitch, 2.6 mm x 1.8 mm x 0.5 mm body.</p><p>Pitch纯粹是指板面两“单元”其中心间之距离，PCB业美式表达常用mil-pitch，即指两焊垫中心线跨距mil而言。中距Pitch与间距Spacing不同，后者通常是指两导体间“隔离板面”。</p><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="qfp封装"><a class="markdownIt-Anchor" href="#qfp封装"></a> QFP封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="qgp封装"><a class="markdownIt-Anchor" href="#qgp封装"></a> QGP封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="rimm封装"><a class="markdownIt-Anchor" href="#rimm封装"></a> RIMM封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="sbga封装"><a class="markdownIt-Anchor" href="#sbga封装"></a> SBGA封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="sc-70封装"><a class="markdownIt-Anchor" href="#sc-70封装"></a> SC-70封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="sc-71封装"><a class="markdownIt-Anchor" href="#sc-71封装"></a> SC-71封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="simm封装"><a class="markdownIt-Anchor" href="#simm封装"></a> SIMM封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="sip封装"><a class="markdownIt-Anchor" href="#sip封装"></a> SIP封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="slot封装"><a class="markdownIt-Anchor" href="#slot封装"></a> SLOT封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="snaptk封装"><a class="markdownIt-Anchor" href="#snaptk封装"></a> SNAPTK封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="snapzp封装"><a class="markdownIt-Anchor" href="#snapzp封装"></a> SNAPZP封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="so封装"><a class="markdownIt-Anchor" href="#so封装"></a> SO封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="socket封装"><a class="markdownIt-Anchor" href="#socket封装"></a> SOCKET封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="soh封装"><a class="markdownIt-Anchor" href="#soh封装"></a> SOH封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="soic封装"><a class="markdownIt-Anchor" href="#soic封装"></a> SOIC封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="soj封装"><a class="markdownIt-Anchor" href="#soj封装"></a> SOJ封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="sop封装"><a class="markdownIt-Anchor" href="#sop封装"></a> SOP封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="sot-220封装"><a class="markdownIt-Anchor" href="#sot-220封装"></a> SOT-220封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="sot-89封装"><a class="markdownIt-Anchor" href="#sot-89封装"></a> SOT-89封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="sot封装"><a class="markdownIt-Anchor" href="#sot封装"></a> SOT封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="sot-223封装"><a class="markdownIt-Anchor" href="#sot-223封装"></a> SOT-223封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="sot-23封装"><a class="markdownIt-Anchor" href="#sot-23封装"></a> SOT-23封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="ssop封装"><a class="markdownIt-Anchor" href="#ssop封装"></a> SSOP封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="tepbga封装"><a class="markdownIt-Anchor" href="#tepbga封装"></a> TEPBGA封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="to-252封装"><a class="markdownIt-Anchor" href="#to-252封装"></a> TO-252封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="to-263封装"><a class="markdownIt-Anchor" href="#to-263封装"></a> TO-263封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="to-268封装"><a class="markdownIt-Anchor" href="#to-268封装"></a> TO-268封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="to-100封装"><a class="markdownIt-Anchor" href="#to-100封装"></a> TO-100封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="to-126封装"><a class="markdownIt-Anchor" href="#to-126封装"></a> TO-126封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="to-127封装"><a class="markdownIt-Anchor" href="#to-127封装"></a> TO-127封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="to-18封装"><a class="markdownIt-Anchor" href="#to-18封装"></a> TO-18封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="to-202封装"><a class="markdownIt-Anchor" href="#to-202封装"></a> TO-202封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="to-218封装"><a class="markdownIt-Anchor" href="#to-218封装"></a> TO-218封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="to-220封装"><a class="markdownIt-Anchor" href="#to-220封装"></a> TO-220封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="to-247封装"><a class="markdownIt-Anchor" href="#to-247封装"></a> TO-247封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="to-264封装"><a class="markdownIt-Anchor" href="#to-264封装"></a> TO-264封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="to-3封装"><a class="markdownIt-Anchor" href="#to-3封装"></a> TO-3封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="to-46封装"><a class="markdownIt-Anchor" href="#to-46封装"></a> TO-46封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="to-48封装"><a class="markdownIt-Anchor" href="#to-48封装"></a> TO-48封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="to-5封装"><a class="markdownIt-Anchor" href="#to-5封装"></a> TO-5封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="to-52封装"><a class="markdownIt-Anchor" href="#to-52封装"></a> TO-52封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="to-55封装"><a class="markdownIt-Anchor" href="#to-55封装"></a> TO-55封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="to-65封装"><a class="markdownIt-Anchor" href="#to-65封装"></a> TO-65封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="to-71封装"><a class="markdownIt-Anchor" href="#to-71封装"></a> TO-71封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="to-72封装"><a class="markdownIt-Anchor" href="#to-72封装"></a> TO-72封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="to-78封装"><a class="markdownIt-Anchor" href="#to-78封装"></a> TO-78封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="to-8封装"><a class="markdownIt-Anchor" href="#to-8封装"></a> TO-8封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="to-83封装"><a class="markdownIt-Anchor" href="#to-83封装"></a> TO-83封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="to-92封装"><a class="markdownIt-Anchor" href="#to-92封装"></a> TO-92封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="to-93封装"><a class="markdownIt-Anchor" href="#to-93封装"></a> TO-93封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="to-94封装"><a class="markdownIt-Anchor" href="#to-94封装"></a> TO-94封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="to-99封装"><a class="markdownIt-Anchor" href="#to-99封装"></a> TO-99封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="tqfp封装"><a class="markdownIt-Anchor" href="#tqfp封装"></a> TQFP封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="tsop封装"><a class="markdownIt-Anchor" href="#tsop封装"></a> TSOP封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="tssop封装"><a class="markdownIt-Anchor" href="#tssop封装"></a> TSSOP封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="tvsop封装"><a class="markdownIt-Anchor" href="#tvsop封装"></a> TVSOP封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="vl-bus封装"><a class="markdownIt-Anchor" href="#vl-bus封装"></a> VL Bus封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="wafer封装"><a class="markdownIt-Anchor" href="#wafer封装"></a> WAFER封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="xt-bus封装"><a class="markdownIt-Anchor" href="#xt-bus封装"></a> XT Bus封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="zip封装"><a class="markdownIt-Anchor" href="#zip封装"></a> ZIP封装</h2><details class="toggle" ><summary class="toggle-button" style="">详情</summary><div class="toggle-content"><p>器件</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸    </button><div class="hide-content"><img src="" alt="器件" style="zoom:50%;" /></div></div></div></details><h2 id="闲谈"><a class="markdownIt-Anchor" href="#闲谈"></a> 闲谈</h2>]]></content>
      
      
      <categories>
          
          <category> PCB 拓展 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PCB </tag>
            
            <tag> 应用拓展 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GD32F30x 库函数实践（1）新建工程模板</title>
      <link href="/posts/101669955.html"/>
      <url>/posts/101669955.html</url>
      
        <content type="html"><![CDATA[<blockquote><ul><li>国产器件，实践过程参考STM32F系列例程。</li></ul></blockquote><h2 id="器件"><a class="markdownIt-Anchor" href="#器件"></a> 器件</h2><p>主芯片：GigaDevice GD32F303VET6 。</p><h2 id="目的"><a class="markdownIt-Anchor" href="#目的"></a> 目的</h2><p>新建以官方标准固件库为基础的工程模板。</p><h2 id="创建步骤"><a class="markdownIt-Anchor" href="#创建步骤"></a> 创建步骤</h2><h3 id="布局工程结构"><a class="markdownIt-Anchor" href="#布局工程结构"></a> 布局工程结构</h3><p><img src="/assets/article/gd32f30x-vlibrary/practices_a001b03c01.jpg" alt="" title="文件结构布局" /></p><p>文件夹名称及作用：</p><table><thead><tr><th>序号</th><th>名称</th><th>说明</th><th>备注</th></tr></thead><tbody><tr><td>1</td><td>CMSIS</td><td>放置内核驱动程序文件</td><td></td></tr><tr><td>2</td><td>LIB</td><td>放置官方固件库源码文件</td><td></td></tr><tr><td>3</td><td>PROJECT</td><td>放置工程文件</td><td></td></tr><tr><td>4</td><td>STARTUP</td><td>放置启动引导文件</td><td></td></tr><tr><td>5</td><td>USER</td><td>放置应用程序文件</td><td></td></tr></tbody></table><h3 id="导入相关官方文件"><a class="markdownIt-Anchor" href="#导入相关官方文件"></a> 导入相关官方文件</h3><p>导入内核驱动程序文件：</p><p><img src="/assets/article/gd32f30x-vlibrary/practices_a001b03c02.jpg" alt="" title="导入内核驱动程序文件" /></p><p>导入引导程序文件：</p><p><img src="/assets/article/gd32f30x-vlibrary/practices_a001b03c03.jpg" alt="" title="导入引导程序文件" /></p><p>导入官方固件库文件：</p><p><img src="/assets/article/gd32f30x-vlibrary/practices_a001b03c04.jpg" alt="" title="导入官方固件库文件" /><br /><img src="/assets/article/gd32f30x-vlibrary/practices_a001b03c05.jpg" alt="" title="导入官方固件库文件-1" /><br /><img src="/assets/article/gd32f30x-vlibrary/practices_a001b03c06.jpg" alt="" title="导入官方固件库文件-2" /></p><p>导入应用函数文件：</p><p><img src="/assets/article/gd32f30x-vlibrary/practices_a001b03c07.jpg" alt="" title="导入应用函数文件" /></p><h3 id="新建工程文件"><a class="markdownIt-Anchor" href="#新建工程文件"></a> 新建工程文件</h3><p>新建工程并存放在PROJECT文件夹中：</p><p><img src="/assets/article/gd32f30x-vlibrary/practices_a001b03c08.jpg" alt="" title="新建工程文件1" /><br /><img src="/assets/article/gd32f30x-vlibrary/practices_a001b03c09.jpg" alt="" title="新建工程文件2" /></p><p>选择目标器件型号：</p><p><img src="/assets/article/gd32f30x-vlibrary/practices_a001b03c10.jpg" alt="" title="选择器件型号" /></p><p>取消该弹窗应用：</p><p><img src="/assets/article/gd32f30x-vlibrary/practices_a001b03c11.jpg" alt="" title="忽略该项设置" /></p><h3 id="源码关联"><a class="markdownIt-Anchor" href="#源码关联"></a> 源码关联</h3><p>将源文件关联到工程中：</p><p><img src="/assets/article/gd32f30x-vlibrary/practices_a001b03c12.jpg" alt="" title="源文件关联操作1" /></p><p><img src="/assets/article/gd32f30x-vlibrary/practices_a001b03c13.jpg" alt="" title="源文件关联操作2" /></p><p><img src="/assets/article/gd32f30x-vlibrary/practices_a001b03c14.jpg" alt="" title="源文件关联操作3" /></p><p><img src="/assets/article/gd32f30x-vlibrary/practices_a001b03c15.jpg" alt="" title="源文件关联操作4" /></p><h3 id="头文件关联"><a class="markdownIt-Anchor" href="#头文件关联"></a> 头文件关联</h3><p>将头文件关联到工程中：</p><p><img src="/assets/article/gd32f30x-vlibrary/practices_a001b03c16.jpg" alt="" title="头文件关联操作" /></p><h3 id="添加宏定义"><a class="markdownIt-Anchor" href="#添加宏定义"></a> 添加宏定义</h3><p>将相关宏定义添加到工程中：</p><p><img src="/assets/article/gd32f30x-vlibrary/practices_a001b03c17.jpg" alt="" title="添加宏定义" /></p><p>最终关联效果：</p><p><img src="/assets/article/gd32f30x-vlibrary/practices_a001b03c18.jpg" alt="" title="关联效果" /></p><h2 id="编译检查"><a class="markdownIt-Anchor" href="#编译检查"></a> 编译检查</h2><p>有错误：</p><p><img src="/assets/article/gd32f30x-vlibrary/practices_a001b03c19.jpg" alt="" title="编译错误效果" /></p><p>无错误：</p><p><img src="/assets/article/gd32f30x-vlibrary/practices_a001b03c20.jpg" alt="" title="编译正确效果" /></p><h2 id="闲谈"><a class="markdownIt-Anchor" href="#闲谈"></a> 闲谈</h2><h3 id="章节目的"><a class="markdownIt-Anchor" href="#章节目的"></a> 章节目的</h3><p>本章主要是熟悉库函数基础工程的创建过程。</p><h3 id="程序段分析"><a class="markdownIt-Anchor" href="#程序段分析"></a> 程序段分析</h3><p>无。</p><hr />]]></content>
      
      
      <categories>
          
          <category> MCU 实践 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GigaDevice (国产) </tag>
            
            <tag> MCU </tag>
            
            <tag> 库函数版实践 </tag>
            
            <tag> GD32F30x </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SCH应用拓展(6) LTM4633器件应用电路参考</title>
      <link href="/posts/2536084828.html"/>
      <url>/posts/2536084828.html</url>
      
        <content type="html"><![CDATA[<blockquote><ul><li>说明：原理图应用已经验证，本文章旨在记录并备忘相关细节。</li></ul></blockquote><h2 id="器件"><a class="markdownIt-Anchor" href="#器件"></a> 器件</h2><p>主芯片：LTM4633 。</p><h2 id="目的"><a class="markdownIt-Anchor" href="#目的"></a> 目的</h2><p>28V转12V。</p><h2 id="应用电路电路"><a class="markdownIt-Anchor" href="#应用电路电路"></a> 应用电路电路</h2><p>配置全局：</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸细节    </button><div class="hide-content"><img src="/assets/article/study-ic-schpcb/expansions-sch/006_a03_b01.png" alt="LTM4633器件" style="zoom:100%;" /></div></div><p>配置细节1：</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸细节    </button><div class="hide-content"><img src="/assets/article/study-ic-schpcb/practices-sch/006_a03_b0x.png" alt="器件" style="zoom:50%;" /><img src="/assets/article/study-ic-schpcb/practices-sch/006_a03_b0x.png" alt="相关" style="zoom:50%;" /><img src="/assets/article/study-ic-schpcb/practices-sch/006_a03_b0x.png" alt="相关" style="zoom:50%;" /><img src="/assets/article/study-ic-schpcb/practices-sch/006_a03_b0x.png" alt="相关" style="zoom:50%;" /></div></div><h2 id="特别说明"><a class="markdownIt-Anchor" href="#特别说明"></a> 特别说明</h2><p>运行结果：<br />略</p><h2 id="闲谈"><a class="markdownIt-Anchor" href="#闲谈"></a> 闲谈</h2>]]></content>
      
      
      <categories>
          
          <category> SCH 应用拓展 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 应用拓展 </tag>
            
            <tag> Schematic </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SCH应用拓展(5) LTM4613器件应用电路参考</title>
      <link href="/posts/1500395655.html"/>
      <url>/posts/1500395655.html</url>
      
        <content type="html"><![CDATA[<blockquote><ul><li>说明：原理图应用已经验证，本文章旨在记录并备忘相关细节。</li></ul></blockquote><h2 id="器件"><a class="markdownIt-Anchor" href="#器件"></a> 器件</h2><p>主芯片：LTM4613 。</p><h2 id="目的"><a class="markdownIt-Anchor" href="#目的"></a> 目的</h2><p>28V转12V。</p><h2 id="应用电路电路"><a class="markdownIt-Anchor" href="#应用电路电路"></a> 应用电路电路</h2><p>配置全局：</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸细节    </button><div class="hide-content"><img src="/assets/article/study-ic-schpcb/expansions-sch/005_a03_b01.png" alt="LTM4613器件" style="zoom:100%;" /></div></div><p>配置细节1：</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸细节    </button><div class="hide-content"><img src="/assets/article/study-ic-schpcb/practices-sch/005_a03_b0x.png" alt="器件" style="zoom:50%;" /><img src="/assets/article/study-ic-schpcb/practices-sch/005_a03_b0x.png" alt="相关" style="zoom:50%;" /><img src="/assets/article/study-ic-schpcb/practices-sch/005_a03_b0x.png" alt="相关" style="zoom:50%;" /><img src="/assets/article/study-ic-schpcb/practices-sch/005_a03_b0x.png" alt="相关" style="zoom:50%;" /></div></div><h2 id="特别说明"><a class="markdownIt-Anchor" href="#特别说明"></a> 特别说明</h2><p>运行结果：<br />略</p><h2 id="闲谈"><a class="markdownIt-Anchor" href="#闲谈"></a> 闲谈</h2>]]></content>
      
      
      <categories>
          
          <category> SCH 应用拓展 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 应用拓展 </tag>
            
            <tag> Schematic </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SCH应用拓展(4) LTM4630器件应用电路参考</title>
      <link href="/posts/1565234317.html"/>
      <url>/posts/1565234317.html</url>
      
        <content type="html"><![CDATA[<blockquote><ul><li>说明：原理图应用已经验证，本文章旨在记录并备忘相关细节。</li></ul></blockquote><h2 id="器件"><a class="markdownIt-Anchor" href="#器件"></a> 器件</h2><p>主芯片：LTM4630 。</p><h2 id="目的"><a class="markdownIt-Anchor" href="#目的"></a> 目的</h2><p>28V转12V。</p><h2 id="应用电路电路"><a class="markdownIt-Anchor" href="#应用电路电路"></a> 应用电路电路</h2><p>配置全局：</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸细节    </button><div class="hide-content"><img src="/assets/article/study-ic-schpcb/expansions-sch/004_a03_b01.png" alt="LTM4630器件" style="zoom:100%;" /></div></div><p>配置细节1：</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸细节    </button><div class="hide-content"><img src="/assets/article/study-ic-schpcb/expansions-sch/004_a03_b0x.png" alt="器件" style="zoom:50%;" /><img src="/assets/article/study-ic-schpcb/expansions-sch/004_a03_b0x.png" alt="相关" style="zoom:50%;" /><img src="/assets/article/study-ic-schpcb/expansions-sch/001_a03_b0x.png" alt="相关" style="zoom:50%;" /><img src="/assets/article/study-ic-schpcb/expansions-sch/001_a03_b0x.png" alt="相关" style="zoom:50%;" /></div></div><h2 id="特别说明"><a class="markdownIt-Anchor" href="#特别说明"></a> 特别说明</h2><p>运行结果：<br />略</p><h2 id="闲谈"><a class="markdownIt-Anchor" href="#闲谈"></a> 闲谈</h2>]]></content>
      
      
      <categories>
          
          <category> SCH 应用拓展 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 应用拓展 </tag>
            
            <tag> Schematic </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SCH应用拓展(3) TPS74401器件应用电路参考</title>
      <link href="/posts/3307741104.html"/>
      <url>/posts/3307741104.html</url>
      
        <content type="html"><![CDATA[<blockquote><ul><li>说明：原理图应用已经验证，本文章旨在记录并备忘相关细节。</li></ul></blockquote><h2 id="器件"><a class="markdownIt-Anchor" href="#器件"></a> 器件</h2><p>主芯片：TPS74401 。</p><h2 id="目的"><a class="markdownIt-Anchor" href="#目的"></a> 目的</h2><p>28V转12V。</p><h2 id="应用电路电路"><a class="markdownIt-Anchor" href="#应用电路电路"></a> 应用电路电路</h2><p>配置全局：</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸细节    </button><div class="hide-content"><img src="/assets/article/study-ic-schpcb/expansions-sch/003_a03_b01.png" alt="TPS74401器件" style="zoom:100%;" /></div></div><p>配置细节1：</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸细节    </button><div class="hide-content"><img src="/assets/article/study-ic-schpcb/expansions-sch/003_a03_b0x.png" alt="器件" style="zoom:50%;" /><img src="/assets/article/study-ic-schpcb/expansions-sch/003_a03_b0x.png" alt="相关" style="zoom:50%;" /><img src="/assets/article/study-ic-schpcb/expansions-sch/003_a03_b0x.png" alt="相关" style="zoom:50%;" /><img src="/assets/article/study-ic-schpcb/expansions-sch/003_a03_b0x.png" alt="相关" style="zoom:50%;" /></div></div><h2 id="特别说明"><a class="markdownIt-Anchor" href="#特别说明"></a> 特别说明</h2><p>运行结果：<br />略</p><h2 id="闲谈"><a class="markdownIt-Anchor" href="#闲谈"></a> 闲谈</h2>]]></content>
      
      
      <categories>
          
          <category> SCH 应用拓展 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 应用拓展 </tag>
            
            <tag> Schematic </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SCH应用拓展(2) TPS51200器件应用电路参考</title>
      <link href="/posts/3523837585.html"/>
      <url>/posts/3523837585.html</url>
      
        <content type="html"><![CDATA[<blockquote><ul><li>说明：原理图应用已经验证，本文章旨在记录并备忘相关细节。</li></ul></blockquote><h2 id="器件"><a class="markdownIt-Anchor" href="#器件"></a> 器件</h2><p>主芯片：TPS51200 。</p><h2 id="目的"><a class="markdownIt-Anchor" href="#目的"></a> 目的</h2><p>28V转12V。</p><h2 id="应用电路电路"><a class="markdownIt-Anchor" href="#应用电路电路"></a> 应用电路电路</h2><p>配置全局：</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸细节    </button><div class="hide-content"><img src="/assets/article/study-ic-schpcb/expansions-sch/002_a03_b01.png" alt="TPS51200器件" style="zoom:100%;" /></div></div><p>配置细节1：</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸细节    </button><div class="hide-content"><img src="/assets/article/study-ic-schpcb/expansions-sch/002_a03_b0x.png" alt="器件" style="zoom:50%;" /><img src="/assets/article/study-ic-schpcb/expansions-sch/002_a03_b0x.png" alt="相关" style="zoom:50%;" /><img src="/assets/article/study-ic-schpcb/expansions-sch/002_a03_b0x.png" alt="相关" style="zoom:50%;" /><img src="/assets/article/study-ic-schpcb/expansions-sch/002_a03_b0x.png" alt="相关" style="zoom:50%;" /></div></div><h2 id="特别说明"><a class="markdownIt-Anchor" href="#特别说明"></a> 特别说明</h2><p>运行结果：<br />略</p><h2 id="闲谈"><a class="markdownIt-Anchor" href="#闲谈"></a> 闲谈</h2>]]></content>
      
      
      <categories>
          
          <category> SCH 应用拓展 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 应用拓展 </tag>
            
            <tag> Schematic </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SCH应用拓展(1) LTM4644器件应用电路参考</title>
      <link href="/posts/3367940287.html"/>
      <url>/posts/3367940287.html</url>
      
        <content type="html"><![CDATA[<blockquote><ul><li>说明：原理图应用已经验证，本文章旨在记录并备忘相关细节。</li></ul></blockquote><h2 id="器件"><a class="markdownIt-Anchor" href="#器件"></a> 器件</h2><p>主芯片：LTM4644 。</p><h2 id="目的"><a class="markdownIt-Anchor" href="#目的"></a> 目的</h2><p>28V转12V。</p><h2 id="应用电路电路"><a class="markdownIt-Anchor" href="#应用电路电路"></a> 应用电路电路</h2><p>配置全局：</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸细节    </button><div class="hide-content"><img src="/assets/article/study-ic-schpcb/expansions-sch/001_a03_b01.png" alt="LTM4644器件" style="zoom:100%;" /></div></div><p>配置细节1：</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸细节    </button><div class="hide-content"><img src="/assets/article/study-ic-schpcb/expansions-sch/001_a03_b0x.png" alt="器件" style="zoom:50%;" /><img src="/assets/article/study-ic-schpcb/expansions-sch/001_a03_b0x.png" alt="相关" style="zoom:50%;" /><img src="/assets/article/study-ic-schpcb/expansions-sch/001_a03_b0x.png" alt="相关" style="zoom:50%;" /><img src="/assets/article/study-ic-schpcb/expansions-sch/001_a03_b0x.png" alt="相关" style="zoom:50%;" /></div></div><h2 id="特别说明"><a class="markdownIt-Anchor" href="#特别说明"></a> 特别说明</h2><p>运行结果：<br />略</p><h2 id="闲谈"><a class="markdownIt-Anchor" href="#闲谈"></a> 闲谈</h2>]]></content>
      
      
      <categories>
          
          <category> SCH 应用拓展 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 应用拓展 </tag>
            
            <tag> Schematic </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>STM32F1应用练习(7) 驱动HTG8518器件</title>
      <link href="/posts/3706745101.html"/>
      <url>/posts/3706745101.html</url>
      
        <content type="html"><![CDATA[<blockquote><ul><li>说明：应用代码段已经验证，本文章旨在移植及适配 STM32F1。</li></ul></blockquote><h2 id="器件"><a class="markdownIt-Anchor" href="#器件"></a> 器件</h2><p>主芯片：ST STM32F103 。<br />驱动器件：HTG8518 。</p><h2 id="目的"><a class="markdownIt-Anchor" href="#目的"></a> 目的</h2><p>驱动IIC接口器件HTG8518。</p><h2 id="电路"><a class="markdownIt-Anchor" href="#电路"></a> 电路</h2><p>硬件连接关系：</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸细节    </button><div class="hide-content"><img src="/assets/article/study-ic-arm/practices-mcu/stm32f1/007_a03_b01.png" alt="HTG8518器件" style="zoom:50%;" /></div></div><p>MCU管脚分配：</p><table><thead><tr><th>信号</th><th>方向</th><th>管脚</th><th>说明</th></tr></thead><tbody><tr><td>FIBER1_SCL</td><td>output</td><td>PB5</td><td>IIC接口时钟端</td></tr><tr><td>FIBER1_SDA</td><td>inout</td><td>PB6</td><td>IIC接口数据端</td></tr></tbody></table><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p>使用模拟IIC接口对HTG8518器件进行访问。</p><h2 id="驱动"><a class="markdownIt-Anchor" href="#驱动"></a> 驱动</h2><h3 id="htg8518c"><a class="markdownIt-Anchor" href="#htg8518c"></a> htg8518.c</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// htg8518.c</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/******************* END OF FILE *********/</span></span><br></pre></td></tr></table></figure><h3 id="htg8518h"><a class="markdownIt-Anchor" href="#htg8518h"></a> htg8518.h</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// htg8518.h</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/******************* END OF FILE *********/</span></span><br></pre></td></tr></table></figure><h3 id="user_spic"><a class="markdownIt-Anchor" href="#user_spic"></a> user_spi.c</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//user_spi.c</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/******************* END OF FILE *********/</span></span><br></pre></td></tr></table></figure><h3 id="user_spih"><a class="markdownIt-Anchor" href="#user_spih"></a> user_spi.h</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//user_spi.h</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/******************* END OF FILE *********/</span></span><br></pre></td></tr></table></figure><h3 id="mainc"><a class="markdownIt-Anchor" href="#mainc"></a> main.c</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//main.c</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/******************* END OF FILE *********/</span></span><br></pre></td></tr></table></figure><h2 id="上板"><a class="markdownIt-Anchor" href="#上板"></a> 上板</h2><p>运行结果：<br />略</p><h2 id="闲谈"><a class="markdownIt-Anchor" href="#闲谈"></a> 闲谈</h2>]]></content>
      
      
      <categories>
          
          <category> MCU 应用练习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MCU </tag>
            
            <tag> STMicroelectronics(ST) </tag>
            
            <tag> 库函数应用练习 </tag>
            
            <tag> STM32F1 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>STM32F1应用练习(6) 驱动HTG8538器件</title>
      <link href="/posts/2315063985.html"/>
      <url>/posts/2315063985.html</url>
      
        <content type="html"><![CDATA[<blockquote><ul><li>说明：应用代码段已经验证，本文章旨在移植及适配 STM32F1。</li></ul></blockquote><h2 id="器件"><a class="markdownIt-Anchor" href="#器件"></a> 器件</h2><p>主芯片：ST STM32F103 。<br />驱动器件：HTA8538 。</p><h2 id="目的"><a class="markdownIt-Anchor" href="#目的"></a> 目的</h2><p>驱动IIC接口器件HTA8538。</p><h2 id="电路"><a class="markdownIt-Anchor" href="#电路"></a> 电路</h2><p>硬件连接关系：</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸细节    </button><div class="hide-content"><img src="/assets/article/study-ic-arm/practices-mcu/stm32f1/006_a03_b01.png" alt="HTA8538器件" style="zoom:50%;" /></div></div><p>MCU管脚分配：</p><table><thead><tr><th>信号</th><th>方向</th><th>管脚</th><th>说明</th></tr></thead><tbody><tr><td>FIBER_TX_SCL</td><td>output</td><td>PB5</td><td>IIC接口时钟端</td></tr><tr><td>FIBER_TX_SDA</td><td>inout</td><td>PB6</td><td>IIC接口数据端</td></tr></tbody></table><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p>使用模拟IIC接口对HTA8538器件进行访问。</p><h2 id="驱动"><a class="markdownIt-Anchor" href="#驱动"></a> 驱动</h2><h3 id="hta8538c"><a class="markdownIt-Anchor" href="#hta8538c"></a> hta8538.c</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// hta8538.c</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;hta8538.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;user_iic.h&quot;</span></span></span><br><span class="line"></span><br><span class="line">FIBRE_PWR fibreRxReg;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">iicHTA8538RegInit</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">memset</span>(&amp;fibreRxReg, <span class="number">0</span>, <span class="keyword">sizeof</span>(FIBRE_PWR));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">iicHTA8538Write</span><span class="params">(<span class="type">uint8_t</span> Regaddr, <span class="type">uint8_t</span> Regdata)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> rc =  HTA8538_DECV_ADDR | IIC_WRITE;</span><br><span class="line"><span class="comment">//rc = IIC_Write1Byte( rc &amp; 0xFF, Regaddr, Regdata);</span></span><br><span class="line"><span class="keyword">return</span> rc;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">iicHTA8538Read</span><span class="params">( <span class="type">uint8_t</span> Regaddr)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> rc =  HTA8538_DECV_ADDR | IIC_WRITE;</span><br><span class="line"><span class="comment">//rc = IIC_Read1Byte( rc &amp; 0xFF, Regaddr, HTA8538_DECV_ADDR | IIC_READ, 0);</span></span><br><span class="line"><span class="keyword">return</span> rc;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span><span class="title function_">HTA8538_GetV</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">uint16_t</span> regdata;</span><br><span class="line">regdata = (iicHTA8538Read(HTA8538Vaddr0)) &lt;&lt; <span class="number">8</span>;</span><br><span class="line">regdata += iicHTA8538Read(HTA8538Vaddr1);</span><br><span class="line"><span class="keyword">return</span> regdata;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span><span class="title function_">HTA8538_GetT</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">uint8_t</span> regdata;</span><br><span class="line">regdata = iicHTA8538Read(HTA8538Taddr0);</span><br><span class="line"><span class="keyword">return</span> regdata;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">iicHTA8538powerRegs_READ</span><span class="params">(<span class="type">int</span> index)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> val,rc;</span><br><span class="line"><span class="type">int</span> regaddr = HTA8538LightPwr_addr0 + (index &lt;&lt; <span class="number">1</span>);<span class="comment">//跨度2byte</span></span><br><span class="line">val = iicHTA8538Read(regaddr);</span><br><span class="line">regaddr ++;</span><br><span class="line">rc = iicHTA8538Read(regaddr);</span><br><span class="line">fibreRxReg.reg[index] = (val &lt;&lt;<span class="number">8</span>) + (rc &amp; <span class="number">0xFF</span>);</span><br><span class="line"><span class="keyword">return</span> index;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">HTA8538_GetLightPower</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> i;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">12</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">    iicHTA8538powerRegs_READ(i);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">HTA8538_MONIT</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">HTA8538_GetV();</span><br><span class="line">HTA8538_GetT();</span><br><span class="line">  HTA8538_GetLightPower();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/******************* END OF FILE *********/</span></span><br></pre></td></tr></table></figure><h3 id="hta8538h"><a class="markdownIt-Anchor" href="#hta8538h"></a> hta8538.h</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// hta8538.h</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __HTA8538_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __HTA8538_H</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;sys.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;string.h&quot;</span> </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">fibre_reg_data_strcut</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="type">int16_t</span> channel1_power;</span><br><span class="line"><span class="type">int16_t</span> channel2_power;</span><br><span class="line"><span class="type">int16_t</span> channel3_power;</span><br><span class="line"><span class="type">int16_t</span> channel4_power;</span><br><span class="line"><span class="type">int16_t</span> channel5_power;</span><br><span class="line"><span class="type">int16_t</span> channel6_power;</span><br><span class="line"><span class="type">int16_t</span> channel7_power;</span><br><span class="line"><span class="type">int16_t</span> channel8_power;</span><br><span class="line"><span class="type">int16_t</span> channel9_power;</span><br><span class="line"><span class="type">int16_t</span> channel10_power;</span><br><span class="line"><span class="type">int16_t</span> channel11_power;</span><br><span class="line"><span class="type">int16_t</span> channel12_power;</span><br><span class="line">&#125;FIBRE_PWR_st;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">union</span> <span class="title">fibre_12channel_power_status_register_union_pkg</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">FIBRE_PWR_stpower;</span><br><span class="line"><span class="type">uint16_t</span>reg[<span class="number">12</span>];</span><br><span class="line">&#125;FIBRE_PWR;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> HTA8538_DECV_ADDR(0xa0)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> IIC_WRITE (0 &lt;&lt; 0)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> IIC_READ (1 &lt;&lt; 0)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> HTA8538Taddr0(0x11) <span class="comment">//&#x27;d17, MSB</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> HTA8538Taddr1(0x12) <span class="comment">//&#x27;d18, LSB</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> HTA8538Vaddr0(0x72) <span class="comment">//&#x27;d114, MSB</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> HTA8538Vaddr1(0x73) <span class="comment">//&#x27;d115, LSB</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> HTA8538LightPwr_addr0(0x42) <span class="comment">//&#x27;d66, MSB</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">extern</span> <span class="type">void</span> <span class="title function_">iicHTA8538RegInit</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span> <span class="title function_">iicHTA8538Write</span><span class="params">(<span class="type">uint8_t</span> Regaddr, <span class="type">uint8_t</span> Regdata)</span>;</span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span> <span class="title function_">iicHTA8538Read</span><span class="params">( <span class="type">uint8_t</span> Regaddr)</span>;</span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span><span class="title function_">HTA8538_GetT</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span><span class="title function_">HTA8538_GetV</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span> <span class="title function_">iicHTA8538powerRegs_READ</span><span class="params">(<span class="type">int</span> index)</span>;</span><br><span class="line"><span class="keyword">extern</span> <span class="type">void</span><span class="title function_">HTA8538_GetLightPower</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">extern</span> <span class="type">void</span> <span class="title function_">HTA8538_MONIT</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/******************* END OF FILE *********/</span></span><br></pre></td></tr></table></figure><h3 id="user_iicc"><a class="markdownIt-Anchor" href="#user_iicc"></a> user_iic.c</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//user_iic.c</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/******************* END OF FILE *********/</span></span><br></pre></td></tr></table></figure><h3 id="user_iich"><a class="markdownIt-Anchor" href="#user_iich"></a> user_iic.h</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//user_iic.h</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/******************* END OF FILE *********/</span></span><br></pre></td></tr></table></figure><h3 id="mainc"><a class="markdownIt-Anchor" href="#mainc"></a> main.c</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//main.c</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/******************* END OF FILE *********/</span></span><br></pre></td></tr></table></figure><h2 id="上板"><a class="markdownIt-Anchor" href="#上板"></a> 上板</h2><p>运行结果：<br />略</p><h2 id="闲谈"><a class="markdownIt-Anchor" href="#闲谈"></a> 闲谈</h2>]]></content>
      
      
      <categories>
          
          <category> MCU 应用练习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MCU </tag>
            
            <tag> STMicroelectronics(ST) </tag>
            
            <tag> 库函数应用练习 </tag>
            
            <tag> STM32F1 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>STM32F1应用练习(5) 驱动HTA8533器件</title>
      <link href="/posts/2540161730.html"/>
      <url>/posts/2540161730.html</url>
      
        <content type="html"><![CDATA[<blockquote><ul><li>说明：应用代码段已经验证，本文章旨在移植及适配 STM32F1。</li></ul></blockquote><h2 id="器件"><a class="markdownIt-Anchor" href="#器件"></a> 器件</h2><p>主芯片：ST STM32F103 。<br />驱动器件：HTA8533 。</p><h2 id="目的"><a class="markdownIt-Anchor" href="#目的"></a> 目的</h2><p>驱动IIC接口器件HTA8533。</p><h2 id="电路"><a class="markdownIt-Anchor" href="#电路"></a> 电路</h2><p>硬件连接关系：</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸细节    </button><div class="hide-content"><img src="/assets/article/study-ic-arm/practices-mcu/stm32f1/005_a03_b01.png" alt="HTA8533器件" style="zoom:50%;" /></div></div><p>MCU管脚分配：</p><table><thead><tr><th>信号</th><th>方向</th><th>管脚</th><th>说明</th></tr></thead><tbody><tr><td>FIBER_TX_SCL</td><td>output</td><td>PB5</td><td>IIC接口时钟端</td></tr><tr><td>FIBER_TX_SDA</td><td>inout</td><td>PB6</td><td>IIC接口数据端</td></tr></tbody></table><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p>使用模拟IIC接口对HTA8533器件进行访问。</p><h2 id="驱动"><a class="markdownIt-Anchor" href="#驱动"></a> 驱动</h2><h3 id="hta8533c"><a class="markdownIt-Anchor" href="#hta8533c"></a> hta8533.c</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// hta8533.c</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;hta8533.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;user_iic.h&quot;</span></span></span><br><span class="line"></span><br><span class="line">FIBRE_PWR fibreTxReg;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">iicHTA8533RegInit</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">memset</span>(&amp;fibreTxReg, <span class="number">0</span>, <span class="keyword">sizeof</span>(FIBRE_PWR));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">iicHTA8533Write</span><span class="params">(<span class="type">uint8_t</span> Regaddr, <span class="type">uint8_t</span> Regdata)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> rc =  HTA8533_DECV_ADDR | IIC_WRITE;</span><br><span class="line"><span class="comment">//rc = IIC_Write1Byte(rc &amp; 0xFF, Regaddr, Regdata);</span></span><br><span class="line"><span class="keyword">return</span> rc;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">iicHTA8533Read</span><span class="params">( <span class="type">uint8_t</span> Regaddr)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> rc =  HTA8533_DECV_ADDR | IIC_WRITE;</span><br><span class="line"><span class="comment">//rc = IIC_Read1Byte(rc &amp; 0xFF, Regaddr, HTA8533_DECV_ADDR | IIC_READ, 0);</span></span><br><span class="line"><span class="keyword">return</span> rc;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span><span class="title function_">HTA8533_GetV</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">uint16_t</span> regdata;</span><br><span class="line">regdata = (iicHTA8533Read(HTA8533Vaddr0)) &lt;&lt; <span class="number">8</span>;</span><br><span class="line">regdata += iicHTA8533Read(HTA8533Vaddr1);</span><br><span class="line"><span class="keyword">return</span> regdata;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span><span class="title function_">HTA8533_GetT</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">uint8_t</span> regdata;</span><br><span class="line">regdata = iicHTA8533Read(HTA8533Taddr0);</span><br><span class="line"><span class="keyword">return</span> regdata;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">HTA8533_MONIT</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">HTA8533_GetV();</span><br><span class="line">HTA8533_GetT();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/******************* END OF FILE *********/</span></span><br></pre></td></tr></table></figure><h3 id="hta8533h"><a class="markdownIt-Anchor" href="#hta8533h"></a> hta8533.h</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// hta8533.h</span></span><br><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __HTA8533_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __HTA8533_H</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;sys.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;string.h&quot;</span> </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">fibre_reg_data_strcut</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="type">int16_t</span> channel1_power;</span><br><span class="line"><span class="type">int16_t</span> channel2_power;</span><br><span class="line"><span class="type">int16_t</span> channel3_power;</span><br><span class="line"><span class="type">int16_t</span> channel4_power;</span><br><span class="line"><span class="type">int16_t</span> channel5_power;</span><br><span class="line"><span class="type">int16_t</span> channel6_power;</span><br><span class="line"><span class="type">int16_t</span> channel7_power;</span><br><span class="line"><span class="type">int16_t</span> channel8_power;</span><br><span class="line"><span class="type">int16_t</span> channel9_power;</span><br><span class="line"><span class="type">int16_t</span> channel10_power;</span><br><span class="line"><span class="type">int16_t</span> channel11_power;</span><br><span class="line"><span class="type">int16_t</span> channel12_power;</span><br><span class="line">&#125;FIBRE_PWR_st;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">union</span> <span class="title">fibre_12channel_power_status_register_union_pkg</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">FIBRE_PWR_stpower;</span><br><span class="line"><span class="type">uint16_t</span>reg[<span class="number">12</span>];</span><br><span class="line">&#125;FIBRE_PWR;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> HTA8533_DECV_ADDR(0xa0)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> IIC_WRITE (0 &lt;&lt; 0)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> IIC_READ (1 &lt;&lt; 0)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> HTA8533Vaddr0(0x72)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> HTA8533Vaddr1(0x73)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> HTA8533Taddr0(0x11)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> HTA8533Taddr1(0x12)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">extern</span> <span class="type">void</span> <span class="title function_">iicHTA8533RegInit</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span> <span class="title function_">iicHTA8533Write</span><span class="params">(<span class="type">uint8_t</span> Regaddr, <span class="type">uint8_t</span> Regdata)</span>;</span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span> <span class="title function_">iicHTA8533Read</span><span class="params">( <span class="type">uint8_t</span> Regaddr)</span>;</span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span><span class="title function_">HTA8533_GetT</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span><span class="title function_">HTA8533_GetV</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="keyword">extern</span> <span class="type">void</span> <span class="title function_">HTA8533_MONIT</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/******************* END OF FILE *********/</span></span><br></pre></td></tr></table></figure><h3 id="user_iicc"><a class="markdownIt-Anchor" href="#user_iicc"></a> user_iic.c</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//user_iic.c</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/******************* END OF FILE *********/</span></span><br></pre></td></tr></table></figure><h3 id="user_iich"><a class="markdownIt-Anchor" href="#user_iich"></a> user_iic.h</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//user_iic.h</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/******************* END OF FILE *********/</span></span><br></pre></td></tr></table></figure><h3 id="mainc"><a class="markdownIt-Anchor" href="#mainc"></a> main.c</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//main.c</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/******************* END OF FILE *********/</span></span><br></pre></td></tr></table></figure><h2 id="上板"><a class="markdownIt-Anchor" href="#上板"></a> 上板</h2><p>运行结果：<br />略</p><h2 id="闲谈"><a class="markdownIt-Anchor" href="#闲谈"></a> 闲谈</h2>]]></content>
      
      
      <categories>
          
          <category> MCU 应用练习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MCU </tag>
            
            <tag> STMicroelectronics(ST) </tag>
            
            <tag> 库函数应用练习 </tag>
            
            <tag> STM32F1 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>STM32F1应用练习(4) 驱动AT24C04器件</title>
      <link href="/posts/2540161729.html"/>
      <url>/posts/2540161729.html</url>
      
        <content type="html"><![CDATA[<blockquote><ul><li>说明：应用代码段已经验证，本文章旨在移植及适配 STM32F1。</li></ul></blockquote><h2 id="器件"><a class="markdownIt-Anchor" href="#器件"></a> 器件</h2><p>主芯片：ST STM32F103 。<br />驱动器件：AT24C04 。</p><h2 id="目的"><a class="markdownIt-Anchor" href="#目的"></a> 目的</h2><p>驱动IIC接口器件AT24C04。</p><h2 id="电路"><a class="markdownIt-Anchor" href="#电路"></a> 电路</h2><p>硬件连接关系：</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸细节    </button><div class="hide-content"><img src="/assets/article/study-ic-arm/practices-mcu/stm32f1/004_a03_b01.png" alt="AT24C04器件" style="zoom:50%;" /></div></div><p>MCU管脚分配：</p><table><thead><tr><th>信号</th><th>方向</th><th>管脚</th><th>说明</th></tr></thead><tbody><tr><td>TMP_I2C_SCL</td><td>output</td><td>PB5</td><td>IIC接口时钟端</td></tr><tr><td>TMP_I2C_SDA</td><td>inout</td><td>PB6</td><td>IIC接口数据端</td></tr></tbody></table><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p>使用模拟IIC接口对AT24C04器件进行访问。</p><h2 id="驱动"><a class="markdownIt-Anchor" href="#驱动"></a> 驱动</h2><h3 id="at24c04c"><a class="markdownIt-Anchor" href="#at24c04c"></a> at24c04.c</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// at24c04.c</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/******************* END OF FILE *********/</span></span><br></pre></td></tr></table></figure><h3 id="at24c04h"><a class="markdownIt-Anchor" href="#at24c04h"></a> at24c04.h</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// at24c04.h</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/******************* END OF FILE *********/</span></span><br></pre></td></tr></table></figure><h3 id="user_spic"><a class="markdownIt-Anchor" href="#user_spic"></a> user_spi.c</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//user_spi.c</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/******************* END OF FILE *********/</span></span><br></pre></td></tr></table></figure><h3 id="user_spih"><a class="markdownIt-Anchor" href="#user_spih"></a> user_spi.h</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//user_spi.h</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/******************* END OF FILE *********/</span></span><br></pre></td></tr></table></figure><h3 id="mainc"><a class="markdownIt-Anchor" href="#mainc"></a> main.c</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//main.c</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/******************* END OF FILE *********/</span></span><br></pre></td></tr></table></figure><h2 id="上板"><a class="markdownIt-Anchor" href="#上板"></a> 上板</h2><p>运行结果：<br />略</p><h2 id="闲谈"><a class="markdownIt-Anchor" href="#闲谈"></a> 闲谈</h2>]]></content>
      
      
      <categories>
          
          <category> MCU 应用练习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MCU </tag>
            
            <tag> STMicroelectronics(ST) </tag>
            
            <tag> 库函数应用练习 </tag>
            
            <tag> STM32F1 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>STM32F1应用练习(3) 驱动AD9516-3器件</title>
      <link href="/posts/2540161728.html"/>
      <url>/posts/2540161728.html</url>
      
        <content type="html"><![CDATA[<blockquote><ul><li>说明：应用代码段已经验证，本文章旨在移植及适配 STM32F1。</li></ul></blockquote><h2 id="器件"><a class="markdownIt-Anchor" href="#器件"></a> 器件</h2><p>主芯片：ST STM32F103 。<br />驱动器件：AD9516-3 。</p><h2 id="目的"><a class="markdownIt-Anchor" href="#目的"></a> 目的</h2><p>驱动SPI接口器件AD9516-3。</p><h2 id="电路"><a class="markdownIt-Anchor" href="#电路"></a> 电路</h2><p>硬件连接关系：</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸细节    </button><div class="hide-content"><img src="/assets/article/study-ic-arm/practices-mcu/stm32f1/003_a03_b01.png" alt="AD9516-3器件" style="zoom:50%;" /></div></div><p>MCU管脚分配：</p><table><thead><tr><th>信号</th><th>方向</th><th>管脚</th><th>说明</th></tr></thead><tbody><tr><td>CLK_CSN</td><td>output</td><td>PA4</td><td>SPI接口cs</td></tr><tr><td>CLK_SCLK</td><td>output</td><td>PA5</td><td>SPI接口sck</td></tr><tr><td>CLK_SDO</td><td>input</td><td>PA6</td><td>SPI接口miso</td></tr><tr><td>CLK_SDIO</td><td>output</td><td>PA7</td><td>SPI接口mosi</td></tr><tr><td>CLK_RESET</td><td>output</td><td>PA7</td><td>AD9516-3复位接口RESETN</td></tr><tr><td>CLK_REF_SEL</td><td>output</td><td>PA7</td><td>AD9516-3其它接口</td></tr><tr><td>CLK_SYNCN</td><td>output</td><td>PA7</td><td>AD9516-3其它接口</td></tr><tr><td>CLK_RMON</td><td>output</td><td>PA7</td><td>AD9516-3其它接口</td></tr><tr><td>CLK_LDT</td><td>output</td><td>PA7</td><td>AD9516-3其它接口</td></tr><tr><td>CLK_STAT</td><td>output</td><td>PA7</td><td>AD9516-3其它接口</td></tr></tbody></table><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p>使用模拟SPI接口对AD9516-3器件进行访问。</p><h2 id="驱动"><a class="markdownIt-Anchor" href="#驱动"></a> 驱动</h2><h3 id="ad9516_3c"><a class="markdownIt-Anchor" href="#ad9516_3c"></a> ad9516_3.c</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ad9516_3.c</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;delay.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;ad9516_3.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;user_spi.h&quot;</span></span></span><br><span class="line"></span><br><span class="line">AD9516REG ad9516reg;</span><br><span class="line">AD9516PIN_STATUS ad9516PinStatus;</span><br><span class="line">BDBITPKG bdBITPkg;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">AD9516Reg_init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">memset</span>(&amp;ad9516reg, <span class="number">0</span>, <span class="keyword">sizeof</span>(AD9516REG));</span><br><span class="line"><span class="built_in">memset</span>(&amp;bdBITPkg, <span class="number">0</span>, <span class="keyword">sizeof</span>(BDBITPKG));</span><br><span class="line"><span class="built_in">memset</span>(&amp;ad9516PinStatus,<span class="number">0</span>,<span class="keyword">sizeof</span>(ad9516PinStatus));</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">///////////////////</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//AD9516功能端口控制</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//AD9516的复位</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">ad9516_reset</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123; </span><br><span class="line">GPIO_ResetBits (GPIOD,GPIO_Pin_5);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//AD9516的复位释放</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">ad9516_release</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123; </span><br><span class="line">GPIO_SetBits(GPIOD,GPIO_Pin_5);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//AD9516的REF_SEL端拉低</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">ad9516_RefSel_Down</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123; </span><br><span class="line">GPIO_ResetBits (GPIOD,GPIO_Pin_3);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//AD9516的REF_SEL端拉高</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">ad9516_RefSel_Up</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123; </span><br><span class="line">GPIO_SetBits(GPIOD,GPIO_Pin_3);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//AD9516的SYNCN端拉低</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">ad9516_SYNCN_Down</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123; </span><br><span class="line">GPIO_ResetBits (GPIOD,GPIO_Pin_4);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//AD9516的SYNCN端拉高</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">ad9516_SYNCN_Up</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123; </span><br><span class="line">GPIO_SetBits(GPIOD,GPIO_Pin_4);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//AD9516的LD端状态</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">ad9516_LDT_State</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> (GPIO_ReadInputDataBit(GPIOD,GPIO_Pin_1));</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//AD9516的STAT端状态</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">ad9516_STAT_State</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> (GPIO_ReadInputDataBit(GPIOD,GPIO_Pin_2));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//AD9516的RMON端状态</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">ad9516_RMON_State</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123; </span><br><span class="line"><span class="keyword">return</span> (GPIO_ReadInputDataBit(GPIOD,GPIO_Pin_0));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//配置相关模式:</span></span><br><span class="line"><span class="comment">//配置为MSB_first;</span></span><br><span class="line"><span class="comment">//配置为SDO回读;</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">ad9516_init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">ad9516_config();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//ad9516-3配置</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">ad9516_config</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">if</span> 1<span class="comment">//2021.02.03_2 所有寄存器全部列出（含默认设置）陈*提供参考,//</span></span></span><br><span class="line"><span class="comment">//VCO = 2000 MHZ : R=3, A=12 ;B=18 ;P=16/17mode ;VCO_Div=2 ;Div0=8 ;OUT0=125Mhz(理论值) ;</span></span><br><span class="line"><span class="comment">//输出实测124.99Mhz,输出正确（国产板和进口板测试都可以输出125Mhz，但杂质可能有干扰）</span></span><br><span class="line"><span class="comment">//Serial Port Configuration</span></span><br><span class="line">ad9516_write(<span class="number">0x000</span>, <span class="number">0x99</span>);<span class="comment">//设置SDO为回读端，默认MSB_first方式</span></span><br><span class="line">ad9516_write(<span class="number">0x004</span>, <span class="number">0x01</span>);<span class="comment">//回读寄存器</span></span><br><span class="line"><span class="comment">//PLL</span></span><br><span class="line">ad9516_write(<span class="number">0x010</span>, <span class="number">0x7C</span>);<span class="comment">//PFD和CP设置</span></span><br><span class="line">ad9516_write(<span class="number">0x011</span>, <span class="number">0x03</span>);<span class="comment">//R的LSB值R[7:0]</span></span><br><span class="line">ad9516_write(<span class="number">0x012</span>, <span class="number">0x00</span>);<span class="comment">//R的MSB值R[13:8]</span></span><br><span class="line">ad9516_write(<span class="number">0x013</span>, <span class="number">0x0C</span>);<span class="comment">//A的值A[5:0]</span></span><br><span class="line">ad9516_write(<span class="number">0x014</span>, <span class="number">0x12</span>);<span class="comment">//B的LSB值R[7:0]</span></span><br><span class="line">ad9516_write(<span class="number">0x015</span>, <span class="number">0x00</span>);<span class="comment">//B的MSB值R[12:8]</span></span><br><span class="line">ad9516_write(<span class="number">0x016</span>, <span class="number">0x05</span>);<span class="comment">//PLL_Control_1中P的值P[2:0] ,DM 8/9mode</span></span><br><span class="line">ad9516_write(<span class="number">0x017</span>, <span class="number">0x00</span>);<span class="comment">//PLL_Control_2中STATUS pin control设为&quot;default (GND)&quot;;默认2.9ns</span></span><br><span class="line">ad9516_write(<span class="number">0x018</span>, <span class="number">0x06</span>);<span class="comment">//PLL_Control_3中VCO_cal_div为默认16; 重置校准</span></span><br><span class="line">ad9516_write(<span class="number">0x019</span>, <span class="number">0x00</span>);<span class="comment">//PLL_Control_3中默认</span></span><br><span class="line">ad9516_write(<span class="number">0x01A</span>, <span class="number">0x00</span>);<span class="comment">//PLL_Control_5中LD pin control设为&quot;默认DLD&quot;</span></span><br><span class="line">ad9516_write(<span class="number">0x01B</span>, <span class="number">0x60</span>);<span class="comment">//PLL_Control_6中REFMON pin control设为&quot;默认GND&quot;,启用REF1&amp;2频率监控</span></span><br><span class="line">ad9516_write(<span class="number">0x01C</span>, <span class="number">0x46</span>);<span class="comment">//PLL_Control_7中enable REF buffer；根据实际电路改选REF1；//原0x42//测试0x02也可以</span></span><br><span class="line">ad9516_write(<span class="number">0x01D</span>, <span class="number">0x00</span>);<span class="comment">//PLL_Control_8中默认全关闭</span></span><br><span class="line">ad9516_write(<span class="number">0x01E</span>, <span class="number">0x00</span>);<span class="comment">//PLL Control 9 ：Reserved</span></span><br><span class="line">ad9516_write(<span class="number">0x01F</span>, <span class="number">0x5B</span>);<span class="comment">//PLL readback：read-only</span></span><br><span class="line"></span><br><span class="line">ad9516_write(<span class="number">0x232</span>, <span class="number">0x01</span>);</span><br><span class="line">delay_us(<span class="number">10</span>);</span><br><span class="line"><span class="comment">//ad9516_write(0x018, 0x07);//PLL_Control_3中VCO_cal_div为默认16; 初始化校准</span></span><br><span class="line"><span class="comment">//ad9516_write(0x232, 0x01);</span></span><br><span class="line"><span class="comment">//delay_us(500000);</span></span><br><span class="line"><span class="comment">//===此处与本硬件设计部分无关</span></span><br><span class="line"><span class="comment">//===LVDS/CMOS输出通道设置</span></span><br><span class="line">ad9516_write(<span class="number">0x0A0</span>, <span class="number">0x01</span>);<span class="comment">//OUT6 delay bypass：设为跳过（bypass），OUT6在206B项目被悬空</span></span><br><span class="line">ad9516_write(<span class="number">0x0A1</span>, <span class="number">0x00</span>);<span class="comment">//OUT6 delay full-scale</span></span><br><span class="line">ad9516_write(<span class="number">0x0A2</span>, <span class="number">0x00</span>);<span class="comment">//OUT6 delay fraction</span></span><br><span class="line">ad9516_write(<span class="number">0x0A3</span>, <span class="number">0x01</span>);<span class="comment">//OUT7 delay bypass：设为跳过（bypass），OUT7在206B项目被悬空</span></span><br><span class="line">ad9516_write(<span class="number">0x0A4</span>, <span class="number">0x00</span>);<span class="comment">//OUT7 delay full-scale</span></span><br><span class="line">ad9516_write(<span class="number">0x0A5</span>, <span class="number">0x00</span>);<span class="comment">//OUT7 delay fraction</span></span><br><span class="line">ad9516_write(<span class="number">0x0A6</span>, <span class="number">0x01</span>);<span class="comment">//OUT8 delay bypass：设为跳过（bypass），OUT8在206B项目被悬空</span></span><br><span class="line">ad9516_write(<span class="number">0x0A7</span>, <span class="number">0x00</span>);<span class="comment">//OUT8 delay full-scale</span></span><br><span class="line">ad9516_write(<span class="number">0x0A8</span>, <span class="number">0x00</span>);<span class="comment">//OUT8 delay fraction</span></span><br><span class="line">ad9516_write(<span class="number">0x0A9</span>, <span class="number">0x01</span>);<span class="comment">//OUT9 delay bypass：设为跳过（bypass），OUT9在206B项目被悬空</span></span><br><span class="line">ad9516_write(<span class="number">0x0AA</span>, <span class="number">0x00</span>);<span class="comment">//OUT9 delay full-scale;</span></span><br><span class="line">ad9516_write(<span class="number">0x0AB</span>, <span class="number">0x00</span>);<span class="comment">//OUT9 delay fraction;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//===LVPECL输出通道设置</span></span><br><span class="line">ad9516_write(<span class="number">0x0F0</span>, <span class="number">0x08</span>);<span class="comment">//OUT0，不取反，LVPECL输出差分电压设为 780mV（默认）,并启用该输出;</span></span><br><span class="line">ad9516_write(<span class="number">0x0F1</span>, <span class="number">0x08</span>);<span class="comment">//OUT1，不取反，LVPECL输出差分电压设为 780mV（默认）,并启用该输出;</span></span><br><span class="line">ad9516_write(<span class="number">0x0F2</span>, <span class="number">0x18</span>);<span class="comment">//OUT2，取反，LVPECL输出差分电压设为 780mV（默认）,并启用该输出;</span></span><br><span class="line">ad9516_write(<span class="number">0x0F3</span>, <span class="number">0x03</span>);<span class="comment">//OUT3，不取反，LVPECL输出差分电压设为 400mV,并完全关闭该输出;</span></span><br><span class="line">ad9516_write(<span class="number">0x0F4</span>, <span class="number">0x1B</span>);<span class="comment">//OUT4，取反，LVPECL输出差分电压设为 780mV（默认）,并完全关闭该输出;</span></span><br><span class="line">ad9516_write(<span class="number">0x0F5</span>, <span class="number">0x0B</span>);<span class="comment">//OUT5，不取反，LVPECL输出差分电压设为 780mV（默认）,并完全关闭该输出;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//===此处与本硬件设计部分无关</span></span><br><span class="line"><span class="comment">//===LVDS/CMOS输出通道设置</span></span><br><span class="line">ad9516_write(<span class="number">0x140</span>, <span class="number">0x13</span>);<span class="comment">//OUT6，关闭该输出; 该端口信号的极性、电平类型、电流以及是否输出等设置;</span></span><br><span class="line">ad9516_write(<span class="number">0x141</span>, <span class="number">0x93</span>);<span class="comment">//OUT7，关闭该输出; 该端口信号的极性、电平类型、电流以及是否输出等设置;</span></span><br><span class="line">ad9516_write(<span class="number">0x142</span>, <span class="number">0x13</span>);<span class="comment">//OUT8，关闭该输出; 该端口信号的极性、电平类型、电流以及是否输出等设置;</span></span><br><span class="line">ad9516_write(<span class="number">0x143</span>, <span class="number">0x53</span>);<span class="comment">//OUT9，关闭该输出; 该端口信号的极性、电平类型、电流以及是否输出等设置;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//===LVPECL输出通道分频器设置//便于当前示波器观察，将输出调至100MHZ以内</span></span><br><span class="line"><span class="comment">//0x190寄存器：Dx=M+1+N+1，其中M,N为寄存器设置值</span></span><br><span class="line">ad9516_write(<span class="number">0x190</span>, <span class="number">0x33</span>);<span class="comment">//Divider 0(PECL)，Div_0分频系数（占空比）设置，（如设置的值0x33表示8分频，占空比50%）;</span></span><br><span class="line">ad9516_write(<span class="number">0x191</span>, <span class="number">0x00</span>);<span class="comment">//Divider 0(PECL)，Div_0分频器的启用与否、及相关输出配置等;</span></span><br><span class="line">ad9516_write(<span class="number">0x192</span>, <span class="number">0x00</span>);<span class="comment">//Divider 0(PECL)，选择输出是否经过Div_0分频器、是否启用Duty-cycle correction;</span></span><br><span class="line">ad9516_write(<span class="number">0x193</span>, <span class="number">0x33</span>);<span class="comment">//Divider 1(PECL)，Div_1分频系数（占空比）设置，（如设置的值0x22表示4分频，占空比50%）;//Dx=M+1+N+1，其中M,N为寄存器设置值</span></span><br><span class="line">ad9516_write(<span class="number">0x194</span>, <span class="number">0x10</span>);<span class="comment">//Divider 1(PECL)，Div_1分频器的启用与否、及相关输出配置等;</span></span><br><span class="line">ad9516_write(<span class="number">0x195</span>, <span class="number">0x00</span>);<span class="comment">//Divider 1(PECL)，选择输出是否经过Div_1分频器、是否启用Duty-cycle correction;</span></span><br><span class="line">ad9516_write(<span class="number">0x196</span>, <span class="number">0x10</span>);<span class="comment">//Divider 2(PECL)，Div_2分频系数（占空比）设置，（如设置的值0xAA表示20分频，占空比50%）;</span></span><br><span class="line">ad9516_write(<span class="number">0x197</span>, <span class="number">0x80</span>);<span class="comment">//Divider 2(PECL)，Div_2分频器的启用与否、及相关输出配置等;</span></span><br><span class="line">ad9516_write(<span class="number">0x198</span>, <span class="number">0x01</span>);<span class="comment">//Divider 2(PECL)，选择输出是否经过Div_2分频器、是否启用Duty-cycle correction;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//===此处与本硬件设计部分无关</span></span><br><span class="line"><span class="comment">//===LVDS/CMOS通道分频器设置</span></span><br><span class="line">ad9516_write(<span class="number">0x199</span>, <span class="number">0x22</span>);<span class="comment">//Divider 3(LVDS/CMOS)，Div_3一级分频系数（占空比）设置;</span></span><br><span class="line">ad9516_write(<span class="number">0x19A</span>, <span class="number">0x00</span>);<span class="comment">//Divider 3(LVDS/CMOS)，Div_3一&amp;二级分频相位偏移;</span></span><br><span class="line">ad9516_write(<span class="number">0x19B</span>, <span class="number">0x22</span>);<span class="comment">//Divider 3(LVDS/CMOS)，Div_3二级分频系数（占空比）设置;</span></span><br><span class="line">ad9516_write(<span class="number">0x19C</span>, <span class="number">0x20</span>);<span class="comment">//Divider 3(LVDS/CMOS)，Div_3分频器的启用与否、及相关输出配置等;</span></span><br><span class="line">ad9516_write(<span class="number">0x19D</span>, <span class="number">0x00</span>);<span class="comment">//Divider 3(LVDS/CMOS)，Div_3分频器是否启用Duty-cycle correction;</span></span><br><span class="line">ad9516_write(<span class="number">0x19E</span>, <span class="number">0x22</span>);<span class="comment">//Divider 4(LVDS/CMOS)，Div_4一级分频系数（占空比）设置;</span></span><br><span class="line">ad9516_write(<span class="number">0x19F</span>, <span class="number">0x00</span>);<span class="comment">//Divider 4(LVDS/CMOS)，Div_4一&amp;二级分频相位偏移;</span></span><br><span class="line">ad9516_write(<span class="number">0x1A0</span>, <span class="number">0x22</span>);<span class="comment">//Divider 4(LVDS/CMOS)，Div_4二级分频系数（占空比）设置;</span></span><br><span class="line">ad9516_write(<span class="number">0x1A1</span>, <span class="number">0x20</span>);<span class="comment">//Divider 4(LVDS/CMOS)，Div_4分频器的启用与否、及相关输出配置等;</span></span><br><span class="line">ad9516_write(<span class="number">0x1A2</span>, <span class="number">0x00</span>);<span class="comment">//Divider 4(LVDS/CMOS)，Div_4分频器是否启用Duty-cycle correction;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//===VCO分频器设置</span></span><br><span class="line">ad9516_write(<span class="number">0x1E0</span>, <span class="number">0x00</span>);<span class="comment">//VCO divider;有2、3、4、5、6、static共6种选择, 这里根据需要选择4;//0x01</span></span><br><span class="line">ad9516_write(<span class="number">0x1E1</span>, <span class="number">0x02</span>);<span class="comment">//Input CLKs:涉及CLK、VCO的选择与启用，这里设置为使用内部VCO</span></span><br><span class="line">ad9516_write(<span class="number">0x230</span>, <span class="number">0x00</span>);<span class="comment">//Power-down and sync：default; 这里设置为启用软件SYNC</span></span><br><span class="line">ad9516_write(<span class="number">0x231</span>, <span class="number">0x00</span>);<span class="comment">//valid</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//Update All Registers</span></span><br><span class="line">ad9516_write(<span class="number">0x232</span>, <span class="number">0x01</span>);</span><br><span class="line">delay_us(<span class="number">10</span>);</span><br><span class="line"><span class="comment">//ad9516_write(0x018, 0x06);//PLL_Control_3中VCO_cal_div为默认16; 重置校准</span></span><br><span class="line"><span class="comment">//ad9516_write(0x232, 0x01);</span></span><br><span class="line">delay_us(<span class="number">10</span>);</span><br><span class="line">ad9516_write(<span class="number">0x018</span>, <span class="number">0x07</span>);<span class="comment">//PLL_Control_3中VCO_cal_div为默认16; 初始化校准</span></span><br><span class="line">ad9516_write(<span class="number">0x232</span>, <span class="number">0x01</span>);</span><br><span class="line"><span class="comment">//delay_us(500000);</span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//ad9516-3内部寄存器读取</span></span><br><span class="line"><span class="comment">//单Byte,MSB_first方式读</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">ad9516_read</span><span class="params">(<span class="type">uint16_t</span> addr)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> rc = <span class="number">0</span>;</span><br><span class="line"><span class="type">uint16_t</span> cmd = <span class="number">0</span>;</span><br><span class="line"><span class="type">uint8_t</span> pdata = <span class="number">0</span>;</span><br><span class="line">cmd = AD9516_SPI_REG_READ | AD9516_MODE0_MASK|(addr &amp; AD9516_SPI_REG_ADDR_MASK);</span><br><span class="line">rc = spi1_oprate(cmd, <span class="number">0</span> , <span class="literal">NULL</span>, <span class="number">0</span>);</span><br><span class="line">    pdata = rc &amp; AD9516_SPI_REG_DATA_MASK;</span><br><span class="line"><span class="comment">//其它模式</span></span><br><span class="line"><span class="keyword">return</span> pdata;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//ad9516-3寄存器配值</span></span><br><span class="line"><span class="comment">//单Byte,MSB_first方式写</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">ad9516_write</span><span class="params">(<span class="type">uint16_t</span> addr, <span class="type">uint8_t</span> pdata)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> rc = <span class="number">0</span>;</span><br><span class="line"><span class="type">uint16_t</span> cmd = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">cmd = AD9516_SPI_REG_WRITE | (AD9516_MODE0_MASK)|(addr &amp; AD9516_SPI_REG_ADDR_MASK);</span><br><span class="line">rc = spi1_oprate(cmd, pdata , <span class="literal">NULL</span>, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">return</span> rc;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">ad9516_readReg</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">uint16_t</span> RegAddr[<span class="number">64</span>] = &#123;</span><br><span class="line"><span class="number">0x0000</span>,<span class="number">0x0003</span>,<span class="number">0x0004</span>,</span><br><span class="line"><span class="number">0x0010</span>,<span class="number">0x0011</span>,<span class="number">0x0012</span>,<span class="number">0x0013</span>,<span class="number">0x0014</span>,<span class="number">0x0015</span>,<span class="number">0x0016</span>,<span class="number">0x0017</span>,<span class="number">0x0018</span>,<span class="number">0x0019</span>,<span class="number">0x001A</span>,<span class="number">0x001B</span>,<span class="number">0x001C</span>,<span class="number">0x001D</span>,<span class="number">0x001E</span>,<span class="number">0x001F</span>,</span><br><span class="line"><span class="number">0x00A0</span>,<span class="number">0x00A1</span>,<span class="number">0x00A2</span>,<span class="number">0x00A3</span>,<span class="number">0x00A4</span>,<span class="number">0x00A5</span>,<span class="number">0x00A6</span>,<span class="number">0x00A7</span>,<span class="number">0x00A8</span>,<span class="number">0x00A9</span>,<span class="number">0x00AA</span>,<span class="number">0x00AB</span>,</span><br><span class="line"><span class="number">0x00F0</span>,<span class="number">0x00F1</span>,<span class="number">0x00F2</span>,<span class="number">0x00F3</span>,<span class="number">0x00F4</span>,<span class="number">0x00F5</span>,</span><br><span class="line"><span class="number">0x0140</span>,<span class="number">0x0141</span>,<span class="number">0x0142</span>,<span class="number">0x043</span>,</span><br><span class="line"><span class="number">0x0190</span>,<span class="number">0x0191</span>,<span class="number">0x0192</span>,<span class="number">0x0193</span>,<span class="number">0x0194</span>,<span class="number">0x0195</span>,<span class="number">0x0196</span>,<span class="number">0x0197</span>,<span class="number">0x0198</span>,<span class="number">0x0199</span>,<span class="number">0x019A</span>,<span class="number">0x019B</span>,<span class="number">0x019C</span>,<span class="number">0x019D</span>,<span class="number">0x019E</span>,<span class="number">0x09F</span>,</span><br><span class="line"><span class="number">0x01A0</span>,<span class="number">0x01A1</span>,<span class="number">0x01A2</span>,</span><br><span class="line"><span class="number">0x01E0</span>,<span class="number">0x01E1</span>,</span><br><span class="line"><span class="number">0x0230</span>,<span class="number">0x0232</span></span><br><span class="line">&#125;;<span class="comment">//16bit-addr</span></span><br><span class="line"><span class="type">uint8_t</span> *pReg = (<span class="type">uint8_t</span> *)(&amp;ad9516reg.h000__Serial_port_configuration);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;AD9516REG_LEN;i++)</span><br><span class="line">&#123;</span><br><span class="line">pReg[i] = ad9516_read(RegAddr[i]);<span class="comment">//执行读操作流程</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">ad9516_STATUS_PIN</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">uint8_t</span> signal_num = <span class="number">0x3F</span>;</span><br><span class="line"><span class="type">uint8_t</span> temp = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> i=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;=signal_num;i++)</span><br><span class="line">&#123;</span><br><span class="line">temp = <span class="number">0xFC</span>&amp;(i&lt;&lt;<span class="number">2</span>);<span class="comment">//0xBF表示寄存器0x17[1:0] = 00b</span></span><br><span class="line">ad9516_write(<span class="number">0x017</span>, temp);<span class="comment">//设置PLL_Control_2中STATUS pin control</span></span><br><span class="line"></span><br><span class="line">ad9516_write(<span class="number">0x232</span>, <span class="number">0x01</span>);<span class="comment">//更新寄存器</span></span><br><span class="line">delay_us(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">ad9516PinStatus.STAT_Status[i] = ad9516_STAT_State();<span class="comment">//获取STAT脚状态</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//ad9516PinStatus_TEST(STAT_TEST,i);</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">signal_num = <span class="number">0x3F</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;=signal_num;i++)</span><br><span class="line">&#123;</span><br><span class="line">temp = <span class="number">0x3F</span>&amp;i;<span class="comment">//0xBF表示寄存器0x1A[7:6] = 00b</span></span><br><span class="line">ad9516_write(<span class="number">0x01A</span>, temp);<span class="comment">//设置PLL_Control_2中LDT pin control</span></span><br><span class="line"></span><br><span class="line">ad9516_write(<span class="number">0x232</span>, <span class="number">0x01</span>);<span class="comment">//更新寄存器</span></span><br><span class="line">delay_us(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">ad9516PinStatus.LDT_Status[i] = ad9516_LDT_State();<span class="comment">//获取LDT脚状态</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//ad9516PinStatus_TEST(LDT_TEST,i);</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">signal_num = <span class="number">0x1F</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;=signal_num;i++)</span><br><span class="line">&#123;</span><br><span class="line">temp = <span class="number">0xFF</span>&amp;i;<span class="comment">//0xBF表示寄存器0x1B[7:5] = 111b</span></span><br><span class="line">ad9516_write(<span class="number">0x01B</span>, temp);<span class="comment">//设置PLL_Control_2中RMON pin control</span></span><br><span class="line"></span><br><span class="line">ad9516_write(<span class="number">0x232</span>, <span class="number">0x01</span>);<span class="comment">//更新寄存器</span></span><br><span class="line">delay_us(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">ad9516PinStatus.RMON_Status[i] = ad9516_RMON_State();<span class="comment">//获取RMON脚状态</span></span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">16</span>)<span class="comment">//VS (PLL supply).</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//ad9516PinStatus_TEST(RMON_TEST,i);</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//========================================</span></span><br><span class="line"><span class="comment">//访问AD9516-3的底层SPI</span></span><br><span class="line"><span class="comment">//CMD ：16bits ;    DATA : N*8bits ;</span></span><br><span class="line"><span class="comment">//前沿采样，后沿输出（SPI 0模式）</span></span><br><span class="line"><span class="comment">//     __                                                 ______ </span></span><br><span class="line"><span class="comment">// CS    \_______________________________________________/</span></span><br><span class="line"><span class="comment">//          _____       _____       _____       _____</span></span><br><span class="line"><span class="comment">// SCK  ____|     |_____|     |_____|     |_____|     |___       T(max)=25Mhz, t(HIGH)&gt;16ns, t(LOW)&gt;16ns, </span></span><br><span class="line"><span class="comment">//         ________ ___________ ___________ ___________ ________ </span></span><br><span class="line"><span class="comment">// SDIO --X________X___________X___________X___________X_______ </span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="type">uint32_t</span> <span class="title function_">spi1_oprate</span><span class="params">(<span class="type">uint16_t</span> data0, <span class="type">uint8_t</span> data1, <span class="type">void</span>* pbuf, <span class="type">int</span> len)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">uint32_t</span> readdata = <span class="number">0</span>;</span><br><span class="line">    <span class="type">uint8_t</span>* pdata = (<span class="type">uint8_t</span>*)(pbuf);</span><br><span class="line"></span><br><span class="line">spi1_mass_low ();</span><br><span class="line"></span><br><span class="line">readdata |= spi1_writeread ( (data0&gt;&gt;<span class="number">8</span>));</span><br><span class="line">readdata = readdata &lt;&lt; <span class="number">8</span>;</span><br><span class="line"> </span><br><span class="line">readdata |= spi1_writeread ( data0);</span><br><span class="line">readdata = readdata &lt;&lt; <span class="number">8</span>;</span><br><span class="line"></span><br><span class="line">readdata |= spi1_writeread ( data1);</span><br><span class="line"><span class="keyword">if</span>(len &gt; <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">readdata = readdata &lt;&lt; <span class="number">8</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt; len;i++)</span><br><span class="line">&#123;</span><br><span class="line">readdata |= spi1_writeread ( *pdata);</span><br><span class="line">readdata = readdata &lt;&lt; <span class="number">8</span>;</span><br><span class="line">pdata++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">delay_us(<span class="number">5</span>);</span><br><span class="line"></span><br><span class="line">spi1_mass_high ();</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> readdata;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">ad9516PinStatus_TEST</span><span class="params">(<span class="type">int</span> PinTest,<span class="type">int</span> i)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//LDT_PIN_TEST</span></span><br><span class="line"><span class="keyword">if</span>(PinTest == LDT_TEST)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">0</span>)<span class="comment">//Digital lock detect (high = lock, low = unlock) (default).</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">1</span>)<span class="comment">//P-channel, open-drain lock detect (analog lock detect).</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">2</span>)<span class="comment">//N-channel, open-drain lock detect (analog lock detect).</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">3</span>)<span class="comment">//High-Z LD pin.</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">4</span>)<span class="comment">//Current source lock detect (110 μA when DLD is true).</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">33</span>)<span class="comment">//REF1 clock (differential reference when in differential mode).</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">34</span>)<span class="comment">//REF2 clock (not available in differential mode).</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">35</span>)<span class="comment">//Selected reference to PLL (differential reference when indifferential mode).</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">36</span>)<span class="comment">//Unselected reference to PLL (not available in differential mode).</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">37</span>)<span class="comment">//Status of selected reference (status of differential reference); active high.</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">38</span>)<span class="comment">//Status of unselected reference (not available in differential mode); active high.</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">39</span>)<span class="comment">//Status REF1 frequency (active high).</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">40</span>)<span class="comment">//Status REF2 frequency (active high).</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">41</span>)<span class="comment">//(Status REF1 frequency) AND (status REF2 frequency).</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">42</span>)<span class="comment">//(DLD) AND (status of selected reference) AND (status of VCO).</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">43</span>)<span class="comment">//Status of VCO frequency (active high).</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">44</span>)<span class="comment">//Selected reference (low = REF1, high = REF2).</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">45</span>)<span class="comment">//Digital lock detect (DLD); active high.</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">46</span>)<span class="comment">//Holdover active (active high).</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">47</span>)<span class="comment">//Not available. Do not use.</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">48</span>)<span class="comment">//VS (PLL supply).</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">49</span>)<span class="comment">//(取反) ，REF1 clock (differential reference when in differential mode).</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">50</span>)<span class="comment">//(取反) ，REF2 clock (not available in differential mode).</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">51</span>)<span class="comment">//(取反) ，Selected reference to PLL (differential reference when in differential mode).</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">52</span>)<span class="comment">//(取反) ，Unselected reference to PLL (not available when in differential mode).</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">53</span>)<span class="comment">//Status of selected reference (status of differential reference); active low.</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">54</span>)<span class="comment">//Status of unselected reference (not available in differential mode); active low.</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">55</span>)<span class="comment">//Status of REF1 frequency (active low).</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">56</span>)<span class="comment">//Status of REF2 frequency (active low).</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">57</span>)<span class="comment">//(取反)， (Status of REF1 frequency) AND (status of REF2 frequency).</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">58</span>)<span class="comment">//(取反)， (DLD) AND (status of selected reference) AND (status of VCO).</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">59</span>)<span class="comment">//Status of VCO frequency (active low).</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">60</span>)<span class="comment">//Selected reference (low = REF2, high = REF1).</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">61</span>)<span class="comment">//Digital lock detect (DLD); active low.</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">62</span>)<span class="comment">//Holdover active (active low).</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">63</span>)<span class="comment">//Not available. Do not use.</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//RMON_PIN_TEST</span></span><br><span class="line"><span class="keyword">if</span>(PinTest == RMON_TEST)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">0</span>)<span class="comment">//Ground (dc) (default).</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">1</span>)<span class="comment">//REF1 clock (differential reference when in differential mode).</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">2</span>)<span class="comment">//REF2 clock (not available in differential mode).</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">3</span>)<span class="comment">//Selected reference to PLL (differential reference when in differential mode).</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">4</span>)<span class="comment">//Unselected reference to PLL (not available in differential mode).</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">5</span>)<span class="comment">//Status of selected reference (status of differential reference); active high.</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">6</span>)<span class="comment">//Status of unselected reference (not available in differential mode); active high.</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">7</span>)<span class="comment">//Status REF1 frequency (active high).</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">8</span>)<span class="comment">//Status REF2 frequency (active high).</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">9</span>)<span class="comment">//(Status REF1 frequency) AND (status REF2 frequency).</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">10</span>)<span class="comment">//(DLD) AND (status of selected reference) AND (status of VCO).</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">11</span>)<span class="comment">//Status of VCO frequency (active high).</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">12</span>)<span class="comment">//Selected reference (low = REF1, high = REF2).</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">13</span>)<span class="comment">//Digital lock detect (DLD); active low.</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">14</span>)<span class="comment">//Holdover active (active high).</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">15</span>)<span class="comment">//LD pin comparator output (active high).</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">16</span>)<span class="comment">//VS (PLL supply).</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">17</span>)<span class="comment">//(取反) ,REF1 clock (differential reference when in differential mode).</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">18</span>)<span class="comment">//(取反) ,REF2 clock (not available in differential mode).</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">19</span>)<span class="comment">//(取反) ,Selected reference to PLL (differential reference when in differential mode).</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">20</span>)<span class="comment">//(取反) ,Unselected reference to PLL (not available when in differential mode).</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">21</span>)<span class="comment">//Status of selected reference (status of differential reference); active low.</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">22</span>)<span class="comment">//Status of unselected reference (not available in differential mode); active low.</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">23</span>)<span class="comment">//Status of REF1 frequency (active low).</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">24</span>)<span class="comment">//Status of REF2 frequency (active low).</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">25</span>)<span class="comment">//(取反) ,(Status of REF1 frequency) AND (Status of REF2 frequency).</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">26</span>)<span class="comment">//(取反) ,(DLD) AND (Status of selected reference) AND (Status of VCO).</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">27</span>)<span class="comment">//Status of VCO frequency (active low).</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">28</span>)<span class="comment">//Selected reference (low = REF2, high = REF1).</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">29</span>)<span class="comment">//Digital lock detect (DLD); active low.</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">30</span>)<span class="comment">//Holdover active (active low).</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">31</span>)<span class="comment">//LD pin comparator output (active low).</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//STAT_PIN_TEST</span></span><br><span class="line"><span class="keyword">if</span>(PinTest == STAT_TEST)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">0</span>)<span class="comment">//Ground (dc) (default).</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">1</span>)<span class="comment">//N divider output (after the delay).</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">2</span>)<span class="comment">//R divider output (after the delay).</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">3</span>)<span class="comment">//A divider output.</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">4</span>)<span class="comment">//Prescaler output.</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">5</span>)<span class="comment">//PFD up pulse.</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">6</span>)<span class="comment">//PFD down pulse.</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">32</span>)<span class="comment">//Ground (dc).</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">33</span>)<span class="comment">//REF1 clock (differential reference when in differential mode).</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">34</span>)<span class="comment">//REF2 clock (not available in differential mode).</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">35</span>)<span class="comment">//Selected reference to PLL (differential reference when in differential mode).</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">36</span>)<span class="comment">//Unselected reference to PLL (not available in differential mode).</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">37</span>)<span class="comment">//Status of selected reference (status of differential reference); active high.</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">38</span>)<span class="comment">//Status of unselected reference (not available in differential mode); active high.</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">39</span>)<span class="comment">//Status REF1 frequency (active high).</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">40</span>)<span class="comment">//Status REF2 frequency (active high).</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">41</span>)<span class="comment">//(Status REF1 frequency) AND (status REF2 frequency).</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">42</span>)<span class="comment">//(DLD) AND (status of selected reference) AND (status of VCO).</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">43</span>)<span class="comment">//Status of VCO frequency (active high).</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">44</span>)<span class="comment">//Selected reference (low = REF1, high = REF2).</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">45</span>)<span class="comment">//Digital lock detect (DLD); active high.</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">46</span>)<span class="comment">//Holdover active (active high).</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">47</span>)<span class="comment">//LD pin comparator output (active high).</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">48</span>)<span class="comment">//VS (PLL supply).</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">49</span>)<span class="comment">//(取反) ,REF1 clock (differential reference when in differential mode).</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">50</span>)<span class="comment">//(取反) ,REF2 clock (not available in differential mode).</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">51</span>)<span class="comment">//(取反) ,Selected reference to PLL (differential reference when in differential mode).</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">52</span>)<span class="comment">//(取反) ,Unselected reference to PLL (not available when in differential mode).</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">53</span>)<span class="comment">//Status of selected reference (status of differential reference); active low.</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">54</span>)<span class="comment">//Status of unselected reference (not available in differential mode); active low.</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">55</span>)<span class="comment">//Status of REF1 frequency (active low).</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">56</span>)<span class="comment">//Status of REF2 frequency (active low).</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">57</span>)<span class="comment">//(取反) ,(Status of REF1 frequency) AND (status of REF2 frequency).</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">58</span>)<span class="comment">//(取反) ,(DLD) AND (status of selected reference) AND (status of VCO).</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">59</span>)<span class="comment">//Status of VCO frequency (active low).</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">60</span>)<span class="comment">//Selected reference (low = REF2, high = REF1).</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">61</span>)<span class="comment">//Digital lock detect (DLD) (active low).</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">62</span>)<span class="comment">//Holdover active (active low).</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">63</span>)<span class="comment">//LD pin comparator output (active low).</span></span><br><span class="line">&#123;</span><br><span class="line">delay_us(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/******************* END OF FILE *********/</span></span><br></pre></td></tr></table></figure><h3 id="ad9516_3h"><a class="markdownIt-Anchor" href="#ad9516_3h"></a> ad9516_3.h</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ad9516_3.h</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __AD9516_3_H__</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __AD9516_3_H__</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;sys.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;string.h&quot;</span> </span></span><br><span class="line"></span><br><span class="line"><span class="comment">//域</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> AD9516_SPI_REG_ADDR_MASK(0x1FFF)<span class="comment">//访问AD9516寄存器地址域</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> AD9516_SPI_REG_DATA_MASK(0xFF)<span class="comment">//访问AD9516寄存器数据域</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//读写控制</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> AD9516_SPI_REG_READ(1 &lt;&lt; 15)<span class="comment">//读AD9516寄存器</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> AD9516_SPI_REG_WRITE(0 &lt;&lt; 15)<span class="comment">//写AD9516寄存器</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//Byte传输数</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> AD9516_MODE0_MASK(0&lt;&lt;13)<span class="comment">//1Byte传输</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> AD9516_MODE1_MASK(1&lt;&lt;13)<span class="comment">//2Byte传输</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> AD9516_MODE2_MASK(2&lt;&lt;13)<span class="comment">//3Byte传输</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> AD9516_MODE3_MASK(3&lt;&lt;13)<span class="comment">//Streaming mode 连续传输（LSB或者MSB,均以0x232结尾）</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//状态脚观察测试</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LDT_TEST(0)<span class="comment">//LDT脚切换</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> RMON_TEST(1)<span class="comment">//LDT脚切换</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> STAT_TEST(2)<span class="comment">//LDT脚切换</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//模板</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">Board_Bits_Manager_Struct_Pkg</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="type">uint16_t</span>    F1GA;</span><br><span class="line"><span class="type">uint16_t</span>power_stat;<span class="comment">//phy电源状态</span></span><br><span class="line"><span class="type">uint16_t</span>switch_stat;<span class="comment">//switch工作状态</span></span><br><span class="line"><span class="type">uint16_t</span>    ad9516_LDT_stat;<span class="comment">//AD9516_LDT状态</span></span><br><span class="line"><span class="type">uint16_t</span>    ad9516_STAT_stat;<span class="comment">//AD9516_STAT状态</span></span><br><span class="line"><span class="type">uint16_t</span>    ad9516_RMON_stat;<span class="comment">//AD9516_RMON状态</span></span><br><span class="line"><span class="type">uint16_t</span>    rsvd[<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line">&#125;BDBITPKG;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">AD9516_Struct_REG</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="comment">//Serial Port Configuration,addr:0x000~0x004;</span></span><br><span class="line"><span class="type">uint8_t</span>h000__Serial_port_configuration;<span class="comment">// (address 000h ,8bit)</span></span><br><span class="line"><span class="type">uint8_t</span>h003__Part_ID;<span class="comment">// (address 003h ,8bit)</span></span><br><span class="line"><span class="type">uint8_t</span>h004__Readback_control;<span class="comment">// (address 004h ,8bit)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//PLL, addr:0x010~0x01F;</span></span><br><span class="line"><span class="type">uint8_t</span>h010__PFD_and_charge_pump;<span class="comment">// (address 010h ,8bit)</span></span><br><span class="line"><span class="type">uint8_t</span>h011__R_counter_LSB;<span class="comment">// (address 011h ,8bit)</span></span><br><span class="line"><span class="type">uint8_t</span>h012__R_counter_MSB;<span class="comment">// (address 012h ,8bit)</span></span><br><span class="line"><span class="type">uint8_t</span>h013__A_counter;<span class="comment">// (address 013h ,8bit)</span></span><br><span class="line"><span class="type">uint8_t</span>h014__B_counter_LSB;<span class="comment">// (address 014h ,8bit)</span></span><br><span class="line"><span class="type">uint8_t</span>h015__B_counter_MSB;<span class="comment">// (address 015h ,8bit)</span></span><br><span class="line"><span class="type">uint8_t</span>h016__PLL_Control1;<span class="comment">// (address 016h ,8bit)</span></span><br><span class="line"><span class="type">uint8_t</span>h017__PLL_Control2;<span class="comment">// (address 017h ,8bit)</span></span><br><span class="line"><span class="type">uint8_t</span>h018__PLL_Control3;<span class="comment">// (address 018h ,8bit)</span></span><br><span class="line"><span class="type">uint8_t</span>h019__PLL_Control4;<span class="comment">// (address 019h ,8bit)</span></span><br><span class="line"><span class="type">uint8_t</span>h01A__PLL_Control5;<span class="comment">// (address 01Ah ,8bit)</span></span><br><span class="line"><span class="type">uint8_t</span>h01B__PLL_Control6;<span class="comment">// (address 01Bh ,8bit)</span></span><br><span class="line"><span class="type">uint8_t</span>h01C__PLL_Control7;<span class="comment">// (address 01Ch ,8bit)</span></span><br><span class="line"><span class="type">uint8_t</span>h01D__PLL_Control8;<span class="comment">// (address 01Dh ,8bit)</span></span><br><span class="line"><span class="type">uint8_t</span>h01E__PLL_Control9;<span class="comment">// (address 01Eh ,8bit)</span></span><br><span class="line"><span class="type">uint8_t</span>h01F__PLL_readback;<span class="comment">// (address 01Fh ,8bit)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//Delay Adjust - OUT6 to OUT9,addr:0x0A0~0x0AB;</span></span><br><span class="line"><span class="type">uint8_t</span>h0A0__OUT6_delay_bypass;<span class="comment">// (address 0A0h ,8bit)</span></span><br><span class="line"><span class="type">uint8_t</span>h0A1__OUT6_delay_full_scale;<span class="comment">// (address 0A1h ,8bit)</span></span><br><span class="line"><span class="type">uint8_t</span>h0A2__OUT6_delay_fraction;<span class="comment">// (address 0A2h ,8bit)</span></span><br><span class="line"><span class="type">uint8_t</span>h0A3__OUT7_delay_bypass;<span class="comment">// (address 0A3h ,8bit)</span></span><br><span class="line"><span class="type">uint8_t</span>h0A4__OUT7_delay_full_scale;<span class="comment">// (address 0A4h ,8bit)</span></span><br><span class="line"><span class="type">uint8_t</span>h0A5__OUT7_delay_fraction;<span class="comment">// (address 0A5h ,8bit)</span></span><br><span class="line"><span class="type">uint8_t</span>h0A6__OUT8_delay_bypass;<span class="comment">// (address 0A6h ,8bit)</span></span><br><span class="line"><span class="type">uint8_t</span>h0A7__OUT8_delay_full_scale;<span class="comment">// (address 0A7h ,8bit)</span></span><br><span class="line"><span class="type">uint8_t</span>h0A8__OUT8_delay_fraction;<span class="comment">// (address 0A8h ,8bit)</span></span><br><span class="line"><span class="type">uint8_t</span>h0A9__OUT9_delay_bypass;<span class="comment">// (address 0A9h ,8bit)</span></span><br><span class="line"><span class="type">uint8_t</span>h0AA__OUT9_delay_full_scale;<span class="comment">// (address 0AAh ,8bit)</span></span><br><span class="line"><span class="type">uint8_t</span>h0AB__OUT9_delay_fraction;<span class="comment">// (address 0ABh ,8bit)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//LVPECL Outputs,addr:0x0F0~0x0F5;</span></span><br><span class="line"><span class="type">uint8_t</span>h0F0__OUT0;<span class="comment">// (address 0F0h ,8bit)</span></span><br><span class="line"><span class="type">uint8_t</span>h0F1__OUT1;<span class="comment">// (address 0F1h ,8bit)</span></span><br><span class="line"><span class="type">uint8_t</span>h0F2__OUT2;<span class="comment">// (address 0F2h ,8bit)</span></span><br><span class="line"><span class="type">uint8_t</span>h0F3__OUT3;<span class="comment">// (address 0F3h ,8bit)</span></span><br><span class="line"><span class="type">uint8_t</span>h0F4__OUT4;<span class="comment">// (address 0F4h ,8bit)</span></span><br><span class="line"><span class="type">uint8_t</span>h0F5__OUT5;<span class="comment">// (address 0F5h ,8bit)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//LVDS/CMOS Outputs,addr:0x140~0x143;</span></span><br><span class="line"><span class="type">uint8_t</span>h140__OUT6;<span class="comment">// (address 140h ,8bit)</span></span><br><span class="line"><span class="type">uint8_t</span>h141__OUT7;<span class="comment">// (address 141h ,8bit)</span></span><br><span class="line"><span class="type">uint8_t</span>h142__OUT8;<span class="comment">// (address 142h ,8bit)</span></span><br><span class="line"><span class="type">uint8_t</span>h143__OUT9;<span class="comment">// (address 143h ,8bit)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//LVPECL Channel Dividers,addr:0x190~0x198;</span></span><br><span class="line"><span class="type">uint8_t</span>h190__Divider0_1;<span class="comment">// (address 190h ,8bit)</span></span><br><span class="line"><span class="type">uint8_t</span>h191__Divider0_2;<span class="comment">// (address 191h ,8bit)</span></span><br><span class="line"><span class="type">uint8_t</span>h192__Divider0_3;<span class="comment">// (address 192h ,8bit)</span></span><br><span class="line"><span class="type">uint8_t</span>h193__Divider1_1;<span class="comment">// (address 193h ,8bit)</span></span><br><span class="line"><span class="type">uint8_t</span>h194__Divider1_2;<span class="comment">// (address 194h ,8bit)</span></span><br><span class="line"><span class="type">uint8_t</span>h195__Divider1_3;<span class="comment">// (address 195h ,8bit)</span></span><br><span class="line"><span class="type">uint8_t</span>h196__Divider2_1;<span class="comment">// (address 196h ,8bit)</span></span><br><span class="line"><span class="type">uint8_t</span>h197__Divider2_2;<span class="comment">// (address 197h ,8bit)</span></span><br><span class="line"><span class="type">uint8_t</span>h198__Divider2_3;<span class="comment">// (address 198h ,8bit)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//LVDS/CMOS Channel Dividers,addr:0x199~0x1A2;</span></span><br><span class="line"><span class="type">uint8_t</span>h199__Divider3_1;<span class="comment">// (address 199h ,8bit)</span></span><br><span class="line"><span class="type">uint8_t</span>h19A__Divider3_2;<span class="comment">// (address 19Ah ,8bit)</span></span><br><span class="line"><span class="type">uint8_t</span>h19B__Divider3_3;<span class="comment">// (address 19Bh ,8bit)</span></span><br><span class="line"><span class="type">uint8_t</span>h19C__Divider3_4;<span class="comment">// (address 19Ch ,8bit)</span></span><br><span class="line"><span class="type">uint8_t</span>h19D__Divider3_5;<span class="comment">// (address 19Dh ,8bit)</span></span><br><span class="line"><span class="type">uint8_t</span>h19E__Divider4_1;<span class="comment">// (address 19Eh ,8bit)</span></span><br><span class="line"><span class="type">uint8_t</span>h19F__Divider4_2;<span class="comment">// (address 19Fh ,8bit)</span></span><br><span class="line"><span class="type">uint8_t</span>h1A0__Divider4_3;<span class="comment">// (address 1A0h ,8bit)</span></span><br><span class="line"><span class="type">uint8_t</span>h1A1__Divider4_4;<span class="comment">// (address 1A1h ,8bit)</span></span><br><span class="line"><span class="type">uint8_t</span>h1A2__Divider4_5;<span class="comment">// (address 1A2h ,8bit)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//VCO Divider and CLK Input,addr:0x1E0~0x1E1;</span></span><br><span class="line"><span class="type">uint8_t</span>h1E0__VCO_divider;<span class="comment">// (address 1E0h ,8bit)</span></span><br><span class="line"><span class="type">uint8_t</span>h1E1__Input_CLKs;<span class="comment">// (address 1E1h ,8bit)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//System,addr:0x000~0x004;</span></span><br><span class="line"><span class="type">uint8_t</span>h230__Power_down_and_sync;<span class="comment">// (address 230h ,8bit)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//Update all registers, addr:0x000~0x004;</span></span><br><span class="line"><span class="type">uint8_t</span>h232__Update_all_registers;<span class="comment">// (address 232h ,8bit)//自动清零</span></span><br><span class="line"><span class="comment">//uint8_t   rsvd[3];</span></span><br><span class="line">&#125;AD9516REG;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">AD9516_Struct_Pin_Status</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="type">uint8_t</span>LDT_Status[<span class="number">64</span>];</span><br><span class="line"><span class="type">uint8_t</span>STAT_Status[<span class="number">64</span>];</span><br><span class="line"><span class="type">uint8_t</span>RMON_Status[<span class="number">32</span>];</span><br><span class="line"><span class="type">uint8_t</span>rsvd[<span class="number">1</span>];</span><br><span class="line">&#125;AD9516PIN_STATUS;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> AD9516REG_LEN (sizeof(AD9516REG))</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">extern</span> BDBITPKG bdBITPkg;</span><br><span class="line"></span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span> <span class="title function_">AD9516Reg_init</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="keyword">extern</span> AD9516REG ad9516reg;</span><br><span class="line"><span class="keyword">extern</span> AD9516PIN_STATUS ad9516PinStatus;</span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span> <span class="title function_">ad9516_init</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span> <span class="title function_">ad9516_read</span><span class="params">(<span class="type">uint16_t</span> addr)</span>;</span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span> <span class="title function_">ad9516_write</span><span class="params">(<span class="type">uint16_t</span> addr, <span class="type">uint8_t</span> pdata)</span>;</span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span> <span class="title function_">ad9516_config</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span> <span class="title function_">ad9516_readReg</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span> <span class="title function_">ad9516_STATUS_PIN</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span> <span class="title function_">ad9516PinStatus_TEST</span><span class="params">(<span class="type">int</span> PinTest,<span class="type">int</span> i)</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span> <span class="title function_">ad9516_reset</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span> <span class="title function_">ad9516_release</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span> <span class="title function_">ad9516_RefSel_Up</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span> <span class="title function_">ad9516_RefSel_Down</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span> <span class="title function_">ad9516_SYNCN_Up</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span> <span class="title function_">ad9516_SYNCN_Down</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span> <span class="title function_">ad9516_LDT_State</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span> <span class="title function_">ad9516_STAT_State</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span> <span class="title function_">ad9516_RMON_State</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">extern</span> <span class="type">uint32_t</span> <span class="title function_">spi1_oprate</span><span class="params">(<span class="type">uint16_t</span> data0, <span class="type">uint8_t</span> data1, <span class="type">void</span>* pbuf, <span class="type">int</span> len)</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span><span class="comment">//__AD9516_3_H__</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/******************* END OF FILE *********/</span></span><br></pre></td></tr></table></figure><h3 id="user_spic"><a class="markdownIt-Anchor" href="#user_spic"></a> user_spi.c</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//user_spi.c</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;user_spi.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span>  <span class="title function_">spi1_mass_low</span> <span class="params">( <span class="type">void</span> )</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span>  <span class="title function_">spi1_mass_high</span> <span class="params">( <span class="type">void</span> )</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span>  <span class="title function_">spi1_masck_low</span> <span class="params">( <span class="type">void</span> )</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span>  <span class="title function_">spi1_masck_high</span> <span class="params">( <span class="type">void</span> )</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">uint8_t</span> <span class="title function_">spi1_writeread</span> <span class="params">( <span class="type">uint8_t</span> data)</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/******************* END OF FILE *********/</span></span><br></pre></td></tr></table></figure><h3 id="user_spih"><a class="markdownIt-Anchor" href="#user_spih"></a> user_spi.h</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//user_spi.h</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __USER_SPI_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __USER_SPI_H</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;sys.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">extern</span> <span class="type">void</span> <span class="title function_">spi1_init</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span>  <span class="title function_">spi1_mass_low</span> <span class="params">( <span class="type">void</span> )</span>;</span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span>  <span class="title function_">spi1_mass_high</span> <span class="params">( <span class="type">void</span> )</span>;</span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span>  <span class="title function_">spi1_masck_low</span> <span class="params">( <span class="type">void</span> )</span>;</span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span>  <span class="title function_">spi1_masck_high</span> <span class="params">( <span class="type">void</span> )</span>;</span><br><span class="line"><span class="keyword">extern</span> <span class="type">uint8_t</span> <span class="title function_">spi1_writeread</span> <span class="params">(<span class="type">uint8_t</span> data)</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span> <span class="comment">/* __USER_SPI_H */</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/******************* END OF FILE *********/</span></span><br></pre></td></tr></table></figure><h3 id="mainc"><a class="markdownIt-Anchor" href="#mainc"></a> main.c</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//main.c</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;sys.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;delay.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;ad9516_3.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> </span><br><span class="line">&#123; </span><br><span class="line">AD9516Reg_init();</span><br><span class="line">ad9516_SYNCN_Up();</span><br><span class="line">delaysoft(<span class="number">200</span>);</span><br><span class="line">ad9516_RefSel_Down();</span><br><span class="line">delaysoft(<span class="number">200</span>);</span><br><span class="line">ad9516_SYNCN_Up();</span><br><span class="line">delaysoft(<span class="number">200</span>);</span><br><span class="line">ad9516_reset();</span><br><span class="line">delaysoft(<span class="number">20000</span>);</span><br><span class="line"></span><br><span class="line">ad9516_release();</span><br><span class="line">delaysoft(<span class="number">200</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//ad9516_SYNCN_Down();</span></span><br><span class="line"><span class="comment">//delaysoft(200);</span></span><br><span class="line"><span class="comment">//ad9516_SYNCN_Up();</span></span><br><span class="line"><span class="comment">//delaysoft(200);</span></span><br><span class="line"></span><br><span class="line">ad9516_config();</span><br><span class="line">delaysoft(<span class="number">20</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">bdBITPkg.ad9516_LDT_stat = ad9516_LDT_State();</span><br><span class="line">bdBITPkg.ad9516_STAT_stat = ad9516_STAT_State();</span><br><span class="line">bdBITPkg.ad9516_RMON_stat = ad9516_RMON_State();</span><br><span class="line">ad9516_readReg();</span><br><span class="line"><span class="comment">//ad9516_STATUS_PIN();</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/******************* END OF FILE *********/</span></span><br></pre></td></tr></table></figure><h2 id="上板"><a class="markdownIt-Anchor" href="#上板"></a> 上板</h2><p>运行结果：<br />略</p><h2 id="闲谈"><a class="markdownIt-Anchor" href="#闲谈"></a> 闲谈</h2>]]></content>
      
      
      <categories>
          
          <category> MCU 应用练习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MCU </tag>
            
            <tag> STMicroelectronics(ST) </tag>
            
            <tag> 库函数应用练习 </tag>
            
            <tag> STM32F1 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>STM32F1应用练习(2) 驱动BCM5396器件</title>
      <link href="/posts/842477263.html"/>
      <url>/posts/842477263.html</url>
      
        <content type="html"><![CDATA[<blockquote><ul><li>说明：应用代码段已经验证，本文章旨在移植及适配 STM32F1。</li></ul></blockquote><h2 id="器件"><a class="markdownIt-Anchor" href="#器件"></a> 器件</h2><p>主芯片：ST STM32F103 。<br />驱动器件：BCM5396 。</p><h2 id="目的"><a class="markdownIt-Anchor" href="#目的"></a> 目的</h2><p>驱动SPI接口器件BCM5396。</p><h2 id="电路"><a class="markdownIt-Anchor" href="#电路"></a> 电路</h2><p>硬件连接关系：</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸细节    </button><div class="hide-content"><img src="/assets/article/study-ic-arm/practices-mcu/stm32f1/002_a03_b01.png" alt="BCM5396器件" style="zoom:50%;" /></div></div><p>MCU管脚分配：</p><table><thead><tr><th>信号</th><th>方向</th><th>管脚</th><th>说明</th></tr></thead><tbody><tr><td>MCU_SWSS</td><td>output</td><td>PA4</td><td>SPI接口cs</td></tr><tr><td>MCU_SWSCK</td><td>output</td><td>PA5</td><td>SPI接口sck</td></tr><tr><td>MCU_SWMISO</td><td>input</td><td>PA6</td><td>SPI接口miso</td></tr><tr><td>MCU_SWMOSI</td><td>output</td><td>PA7</td><td>SPI接口mosi</td></tr><tr><td>SWRESET_3V3</td><td>output</td><td>PA7</td><td>BCM5396复位接口RESETB</td></tr></tbody></table><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p>使用模拟SPI接口对BCM5396器件进行访问。</p><h2 id="驱动"><a class="markdownIt-Anchor" href="#驱动"></a> 驱动</h2><h3 id="bcm5396c"><a class="markdownIt-Anchor" href="#bcm5396c"></a> bcm5396.c</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br><span class="line">825</span><br><span class="line">826</span><br><span class="line">827</span><br><span class="line">828</span><br><span class="line">829</span><br><span class="line">830</span><br><span class="line">831</span><br><span class="line">832</span><br><span class="line">833</span><br><span class="line">834</span><br><span class="line">835</span><br><span class="line">836</span><br><span class="line">837</span><br><span class="line">838</span><br><span class="line">839</span><br><span class="line">840</span><br><span class="line">841</span><br><span class="line">842</span><br><span class="line">843</span><br><span class="line">844</span><br><span class="line">845</span><br><span class="line">846</span><br><span class="line">847</span><br><span class="line">848</span><br><span class="line">849</span><br><span class="line">850</span><br><span class="line">851</span><br><span class="line">852</span><br><span class="line">853</span><br><span class="line">854</span><br><span class="line">855</span><br><span class="line">856</span><br><span class="line">857</span><br><span class="line">858</span><br><span class="line">859</span><br><span class="line">860</span><br><span class="line">861</span><br><span class="line">862</span><br><span class="line">863</span><br><span class="line">864</span><br><span class="line">865</span><br><span class="line">866</span><br><span class="line">867</span><br><span class="line">868</span><br><span class="line">869</span><br><span class="line">870</span><br><span class="line">871</span><br><span class="line">872</span><br><span class="line">873</span><br><span class="line">874</span><br><span class="line">875</span><br><span class="line">876</span><br><span class="line">877</span><br><span class="line">878</span><br><span class="line">879</span><br><span class="line">880</span><br><span class="line">881</span><br><span class="line">882</span><br><span class="line">883</span><br><span class="line">884</span><br><span class="line">885</span><br><span class="line">886</span><br><span class="line">887</span><br><span class="line">888</span><br><span class="line">889</span><br><span class="line">890</span><br><span class="line">891</span><br><span class="line">892</span><br><span class="line">893</span><br><span class="line">894</span><br><span class="line">895</span><br><span class="line">896</span><br><span class="line">897</span><br><span class="line">898</span><br><span class="line">899</span><br><span class="line">900</span><br><span class="line">901</span><br><span class="line">902</span><br><span class="line">903</span><br><span class="line">904</span><br><span class="line">905</span><br><span class="line">906</span><br><span class="line">907</span><br><span class="line">908</span><br><span class="line">909</span><br><span class="line">910</span><br><span class="line">911</span><br><span class="line">912</span><br><span class="line">913</span><br><span class="line">914</span><br><span class="line">915</span><br><span class="line">916</span><br><span class="line">917</span><br><span class="line">918</span><br><span class="line">919</span><br><span class="line">920</span><br><span class="line">921</span><br><span class="line">922</span><br><span class="line">923</span><br><span class="line">924</span><br><span class="line">925</span><br><span class="line">926</span><br><span class="line">927</span><br><span class="line">928</span><br><span class="line">929</span><br><span class="line">930</span><br><span class="line">931</span><br><span class="line">932</span><br><span class="line">933</span><br><span class="line">934</span><br><span class="line">935</span><br><span class="line">936</span><br><span class="line">937</span><br><span class="line">938</span><br><span class="line">939</span><br><span class="line">940</span><br><span class="line">941</span><br><span class="line">942</span><br><span class="line">943</span><br><span class="line">944</span><br><span class="line">945</span><br><span class="line">946</span><br><span class="line">947</span><br><span class="line">948</span><br><span class="line">949</span><br><span class="line">950</span><br><span class="line">951</span><br><span class="line">952</span><br><span class="line">953</span><br><span class="line">954</span><br><span class="line">955</span><br><span class="line">956</span><br><span class="line">957</span><br><span class="line">958</span><br><span class="line">959</span><br><span class="line">960</span><br><span class="line">961</span><br><span class="line">962</span><br><span class="line">963</span><br><span class="line">964</span><br><span class="line">965</span><br><span class="line">966</span><br><span class="line">967</span><br><span class="line">968</span><br><span class="line">969</span><br><span class="line">970</span><br><span class="line">971</span><br><span class="line">972</span><br><span class="line">973</span><br><span class="line">974</span><br><span class="line">975</span><br><span class="line">976</span><br><span class="line">977</span><br><span class="line">978</span><br><span class="line">979</span><br><span class="line">980</span><br><span class="line">981</span><br><span class="line">982</span><br><span class="line">983</span><br><span class="line">984</span><br><span class="line">985</span><br><span class="line">986</span><br><span class="line">987</span><br><span class="line">988</span><br><span class="line">989</span><br><span class="line">990</span><br><span class="line">991</span><br><span class="line">992</span><br><span class="line">993</span><br><span class="line">994</span><br><span class="line">995</span><br><span class="line">996</span><br><span class="line">997</span><br><span class="line">998</span><br><span class="line">999</span><br><span class="line">1000</span><br><span class="line">1001</span><br><span class="line">1002</span><br><span class="line">1003</span><br><span class="line">1004</span><br><span class="line">1005</span><br><span class="line">1006</span><br><span class="line">1007</span><br><span class="line">1008</span><br><span class="line">1009</span><br><span class="line">1010</span><br><span class="line">1011</span><br><span class="line">1012</span><br><span class="line">1013</span><br><span class="line">1014</span><br><span class="line">1015</span><br><span class="line">1016</span><br><span class="line">1017</span><br><span class="line">1018</span><br><span class="line">1019</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// bcm5396.c</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;delay.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;bcm5396.h&quot;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;user_spi.h&quot;</span></span></span><br><span class="line"></span><br><span class="line">CTLREGPKG ctlregPKG;<span class="comment">//Page:00h,Status Reg</span></span><br><span class="line">STATREGPKG statregPKG;<span class="comment">//Page:01h,Status Reg</span></span><br><span class="line">MMREGPKG mmregPKG;<span class="comment">//Page 02h Management Mode registers</span></span><br><span class="line">ARLCREGPKG arlcregPKG;<span class="comment">//Page 04h ARL Control registers</span></span><br><span class="line">ARLAREGPKG arlaregPKG;<span class="comment">//Page 05h ARL Access registers</span></span><br><span class="line">ISDREGPKG isdregPKG[<span class="number">16</span>];<span class="comment">//Page 10h-1Fh Port0-15 Integrated SerDes registers</span></span><br><span class="line"></span><br><span class="line">QOSREGPKG qosregPKG;<span class="comment">//Page 30h QoS registers</span></span><br><span class="line">VLANREGPKG vlanregPKG;<span class="comment">//Page 31h VLAN registers</span></span><br><span class="line">TRUNKREGPKG trunkregPKG;<span class="comment">//Page 32h Trunking registers</span></span><br><span class="line">IEEEVREGPKG ieeevregPKG;<span class="comment">//Page 34h IEEE Standard 802.1Q VLAN registers</span></span><br><span class="line">JUMBOREGPKG JumboregPKG;<span class="comment">//Page 40h Jumbo registers</span></span><br><span class="line">BSSREGPKG bssregPKG;<span class="comment">//Page 41h Broadcast Storm Suppression registers</span></span><br><span class="line">IEEEMREGPKG ieeemregPKG;<span class="comment">//Page 43h IEEE Standard 802.1s Multiple Spanning Tree registers</span></span><br><span class="line">EXTERPHYREGPKG exterphyregPKG[<span class="number">16</span>];<span class="comment">//Page 80h, External PHY Registers (Serial Ports0) </span></span><br><span class="line"></span><br><span class="line">GLOBALREGPKG globalregPKG;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">GlobalBit_init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">memset</span>(&amp;globalregPKG, <span class="number">0</span>, <span class="keyword">sizeof</span>(GLOBALREGPKG));</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化BCM396 （配置各端口模式）</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">bcm5396_init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> value = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">value = bcm5396_config(<span class="number">0</span>, BCM5396_NOR_MODE, <span class="number">0</span>, BCM5396_100M_SPD);<span class="comment">//LRM PHY 100M</span></span><br><span class="line">value = bcm5396_config(<span class="number">1</span>, BCM5396_NOR_MODE, <span class="number">1</span>, BCM5396_1000M_SPD);<span class="comment">//LRM SGMII  1000M ： SW</span></span><br><span class="line">value = bcm5396_config(<span class="number">2</span>, BCM5396_NOR_MODE, <span class="number">0</span>, BCM5396_100M_SPD);<span class="comment">//J30J SGMII  100M ： MCU</span></span><br><span class="line">value = bcm5396_config(<span class="number">3</span>, BCM5396_NOR_MODE, <span class="number">0</span>, BCM5396_1000M_SPD);<span class="comment">//DSP0 SGMII 1000M ：DSP0</span></span><br><span class="line">value = bcm5396_config(<span class="number">4</span>, BCM5396_NOR_MODE, <span class="number">0</span>, BCM5396_1000M_SPD);<span class="comment">//DSP1 SGMII 1000M ：DSP1</span></span><br><span class="line">value = bcm5396_config(<span class="number">5</span>, BCM5396_NOR_MODE, <span class="number">0</span>, BCM5396_1000M_SPD);<span class="comment">//FPGA0 SGMII 1000M ：FPGA1</span></span><br><span class="line">value = bcm5396_config(<span class="number">6</span>, BCM5396_NOR_MODE, <span class="number">0</span>, BCM5396_1000M_SPD);<span class="comment">//FPGA1 SGMII 1000M ：FPGA2</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">7</span>;i &lt; <span class="number">16</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">bcm5396_config(i, BCM5396_DIS_MODE, <span class="number">0</span>, BCM5396_100M_SPD);</span><br><span class="line">    &#125; </span><br><span class="line"><span class="keyword">return</span> value;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//BCM396读数据操作</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">bcm5396_read</span><span class="params">(<span class="type">int</span> page, <span class="type">int</span> addr, <span class="type">void</span>* pbuf ,<span class="type">int</span> len)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> rc = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="type">uint8_t</span> temData;</span><br><span class="line">    <span class="type">uint8_t</span> wrcmd;</span><br><span class="line">    <span class="type">uint8_t</span> cmd;</span><br><span class="line">    <span class="type">uint8_t</span>* pdata = (<span class="type">uint8_t</span>*)(pbuf);</span><br><span class="line"></span><br><span class="line">    cmd = <span class="number">0xfe</span>;</span><br><span class="line">wrcmd = BCM_READ_CMD;</span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; SPI_WAIT_TIMEOUT;i++)</span><br><span class="line">&#123;</span><br><span class="line">rc = spi_oprate(wrcmd, cmd, <span class="number">0</span>, <span class="literal">NULL</span>, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> ((rc &amp; <span class="number">0x80</span>) == <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">if</span> (i == SPI_WAIT_TIMEOUT)</span><br><span class="line">    &#123;</span><br><span class="line"><span class="comment">/* reset */</span></span><br><span class="line">cmd = <span class="number">0xff</span>;</span><br><span class="line">wrcmd = BCM_WRITE_CMD;</span><br><span class="line">temData = rc &amp; <span class="number">0xFF</span>;</span><br><span class="line">rc = spi_oprate(wrcmd, cmd, temData , <span class="literal">NULL</span>, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    cmd = <span class="number">0xff</span>;</span><br><span class="line">wrcmd = BCM_WRITE_CMD;</span><br><span class="line">    temData = page;</span><br><span class="line">    rc = spi_oprate(wrcmd, cmd, temData, <span class="literal">NULL</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    cmd = addr;</span><br><span class="line">wrcmd = BCM_READ_CMD;</span><br><span class="line">rc = spi_oprate(wrcmd, cmd, <span class="number">0</span> , <span class="literal">NULL</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    cmd = <span class="number">0xfe</span>;</span><br><span class="line">wrcmd = BCM_READ_CMD;</span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; SPI_WAIT_TIMEOUT;i++)</span><br><span class="line">&#123;</span><br><span class="line">rc = spi_oprate(wrcmd, cmd, <span class="number">0</span>, <span class="literal">NULL</span>, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> ((rc &amp; <span class="number">0x20</span>) != <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">if</span> (i == SPI_WAIT_TIMEOUT)</span><br><span class="line">    &#123;</span><br><span class="line"><span class="comment">/* reset */</span></span><br><span class="line">cmd = <span class="number">0xff</span>;</span><br><span class="line">wrcmd = BCM_WRITE_CMD;</span><br><span class="line">temData = rc &amp; <span class="number">0xFF</span>;</span><br><span class="line">rc = spi_oprate(wrcmd, cmd, temData , <span class="literal">NULL</span>, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">wrcmd = BCM_READ_CMD;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">    &#123;</span><br><span class="line">cmd = <span class="number">0xf0</span> + i;</span><br><span class="line">rc = spi_oprate(wrcmd, cmd, <span class="number">0</span> , <span class="literal">NULL</span>, <span class="number">0</span>);</span><br><span class="line">        pdata[i] = rc &amp; <span class="number">0xFF</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> len;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//BCM396写数据操作</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">bcm5396_write</span><span class="params">(<span class="type">int</span> page, <span class="type">int</span> addr, <span class="type">void</span>* pbuf ,<span class="type">int</span> len)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> rc = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="type">uint8_t</span> temData;</span><br><span class="line">    <span class="type">uint8_t</span> wrcmd;</span><br><span class="line">    <span class="type">uint8_t</span> cmd;</span><br><span class="line">    <span class="type">uint8_t</span>* pdata = (<span class="type">uint8_t</span>*)(pbuf);</span><br><span class="line"></span><br><span class="line">    cmd = <span class="number">0xfe</span>;</span><br><span class="line">wrcmd = BCM_READ_CMD;</span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; SPI_WAIT_TIMEOUT;i++)</span><br><span class="line">&#123;</span><br><span class="line">rc = spi_oprate(wrcmd, cmd, <span class="number">0</span>, <span class="literal">NULL</span>, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> ((rc &amp; <span class="number">0x80</span>) == <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">if</span> (i == SPI_WAIT_TIMEOUT)</span><br><span class="line">    &#123;</span><br><span class="line"><span class="comment">/* reset */</span></span><br><span class="line">cmd = <span class="number">0xff</span>;</span><br><span class="line">wrcmd = BCM_WRITE_CMD;</span><br><span class="line">temData = rc &amp; <span class="number">0xFF</span>;</span><br><span class="line">rc = spi_oprate(wrcmd, cmd, temData , <span class="literal">NULL</span>, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    cmd = <span class="number">0xff</span>;</span><br><span class="line">wrcmd = BCM_WRITE_CMD;</span><br><span class="line">    temData = page;</span><br><span class="line">    rc = spi_oprate(wrcmd, cmd, temData, <span class="literal">NULL</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">wrcmd = BCM_WRITE_CMD;</span><br><span class="line">cmd = addr;</span><br><span class="line">    temData = pdata[<span class="number">0</span>];</span><br><span class="line">rc = spi_oprate(wrcmd, cmd, temData , &amp;pdata[<span class="number">1</span>], len);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> len;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//BCM396配置操作</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">bcm5396_config</span><span class="params">(<span class="type">int</span> port, <span class="type">int</span> mode, <span class="type">int</span> swmode, <span class="type">int</span> speed)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> value = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> addr = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> setval = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>((mode &lt; <span class="number">0</span>) || (mode &gt; BCM5396_FORWARD_MODE)) mode = BCM5396_DIS_MODE;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(mode != BCM5396_DIS_MODE) </span><br><span class="line">&#123;</span><br><span class="line">addr = port + <span class="number">0x60</span>;</span><br><span class="line"><span class="keyword">if</span>(speed == BCM5396_1000M_SPD)setval = <span class="number">0x8b</span>;<span class="comment">//有更改</span></span><br><span class="line"><span class="keyword">else</span> setval  = <span class="number">0x87</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; <span class="number">10</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">value = bcm5396_write(<span class="number">0x0</span>, addr, &amp;setval, <span class="number">1</span>);<span class="comment">//page-00h , addr-60~6Fh</span></span><br><span class="line">delay_us(<span class="number">1000</span>);</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">bcm5396_write(<span class="number">0x0</span>, addr, &amp;setval, <span class="number">1</span>);<span class="comment">//page-00h , addr-60~6Fh</span></span><br><span class="line">value = bcm5396_read(<span class="number">0x0</span>, addr, &amp;setval, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">addr = port + <span class="number">0x10</span>;</span><br><span class="line"><span class="keyword">if</span>(swmode)</span><br><span class="line">&#123;</span><br><span class="line">setval = <span class="number">0x01F1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">setval = <span class="number">0x01f0</span>;</span><br><span class="line">&#125;</span><br><span class="line">bcm5396_write(addr, <span class="number">0x20</span>, &amp;setval, <span class="number">2</span>);<span class="comment">//page-10~1Fh , addr-20h</span></span><br><span class="line">value = bcm5396_read(addr, <span class="number">0x20</span>, &amp;setval, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(speed == BCM5396_1000M_SPD)</span><br><span class="line">&#123;</span><br><span class="line">setval = <span class="number">0x1340</span>;<span class="comment">//有更改</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">setval = <span class="number">0x3300</span>;</span><br><span class="line">&#125;</span><br><span class="line">bcm5396_write(addr, <span class="number">0x00</span>, &amp;setval, <span class="number">2</span>);<span class="comment">//page-10~1Fh , addr-00h</span></span><br><span class="line">value = bcm5396_read(addr, <span class="number">0x00</span>, &amp;setval, <span class="number">2</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">setval = mode &lt;&lt; BCM5396_MODE_LFSB;</span><br><span class="line">    bcm5396_write(<span class="number">0x00</span>, port, &amp;setval, <span class="number">1</span>);<span class="comment">//page-00h , addr-00~0Fh</span></span><br><span class="line">value = bcm5396_read(<span class="number">0x00</span>, port, &amp;setval, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> value;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//BCM396读各PAGE寄存器操作</span></span><br><span class="line"><span class="comment">//===================================================</span></span><br><span class="line"><span class="comment">//=== BCM5396 ,Page:00h ,Control registers ==========</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">ControlBit_init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;<span class="comment">//初始化寄存器结构体·</span></span><br><span class="line"><span class="built_in">memset</span>(&amp;ctlregPKG, <span class="number">0</span>, <span class="keyword">sizeof</span>(CTLREGPKG));</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//8bit-Reg Read</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">BCM5396_ControlReg1</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">uint8_t</span>  RegAddr[<span class="number">45</span>] = &#123;<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x02</span>,<span class="number">0x03</span>,<span class="number">0x04</span>,<span class="number">0x05</span>,<span class="number">0x06</span>,<span class="number">0x07</span>,<span class="number">0x08</span>,<span class="number">0x09</span>,<span class="number">0x0a</span>,<span class="number">0x0b</span>,<span class="number">0x0c</span>,<span class="number">0x0d</span>,<span class="number">0x0e</span>,<span class="number">0x0f</span>,</span><br><span class="line"><span class="number">0x10</span>,<span class="number">0x20</span>,<span class="number">0x3b</span>,<span class="number">0x50</span>,<span class="number">0x51</span>,<span class="number">0x52</span>,<span class="number">0x60</span>,<span class="number">0x61</span>,<span class="number">0x62</span>,<span class="number">0x63</span>,<span class="number">0x64</span>,<span class="number">0x65</span>,<span class="number">0x66</span>,<span class="number">0x67</span>,<span class="number">0x68</span>,<span class="number">0x69</span>,</span><br><span class="line"><span class="number">0x6a</span>,<span class="number">0x6b</span>,<span class="number">0x6c</span>,<span class="number">0x6d</span>,<span class="number">0x6e</span>,<span class="number">0x6f</span>,<span class="number">0x70</span>,<span class="number">0x77</span>,<span class="number">0x86</span>,<span class="number">0x88</span>,<span class="number">0x89</span>,<span class="number">0x90</span>,<span class="number">0xa0</span>&#125;;<span class="comment">//8bit-Reg addr</span></span><br><span class="line"></span><br><span class="line"><span class="type">uint8_t</span> *pReg = (<span class="type">uint8_t</span> *)(&amp;ctlregPKG.Port_Control_reg0);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i &lt; <span class="number">45</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">bcm5396_read(<span class="number">0x00</span>, RegAddr[i], &amp;pReg[i], <span class="number">1</span>);<span class="comment">//执行读操作流程</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//16bit-Reg Read</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">BCM5396_ControlReg2</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">uint8_t</span> RegAddr[<span class="number">3</span>] = &#123;<span class="number">0x24</span>,<span class="number">0x84</span>,<span class="number">0x8a</span>&#125;;<span class="comment">//16bit-Reg addr</span></span><br><span class="line"><span class="type">uint16_t</span> *pReg = (<span class="type">uint16_t</span> *)(&amp;ctlregPKG.LED_Control_reg);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i &lt; <span class="number">3</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">bcm5396_read(<span class="number">0x00</span>, RegAddr[i], &amp;pReg[i], <span class="number">2</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//32bit-Reg Read</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">BCM5396_ControlReg3</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">uint8_t</span> RegAddr[<span class="number">3</span>] = &#123;<span class="number">0x58</span>,<span class="number">0x78</span>,<span class="number">0x80</span>&#125;;<span class="comment">//32bit-Reg addr</span></span><br><span class="line"><span class="type">uint32_t</span> *pReg = (<span class="type">uint32_t</span> *)(&amp;ctlregPKG.Failed_Forward_Map_reg);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i &lt; <span class="number">3</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">bcm5396_read(<span class="number">0x00</span>, RegAddr[i], &amp;pReg[i], <span class="number">4</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//=============================================</span></span><br><span class="line"><span class="comment">//=== BCM5396 ,Page:01h ,Status Reg ==========</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">StatusBit_init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;<span class="comment">//初始化寄存器结构体·</span></span><br><span class="line"><span class="built_in">memset</span>(&amp;statregPKG, <span class="number">0</span>, <span class="keyword">sizeof</span>(STATREGPKG));</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//8bit-Reg Read</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">BCM5396_StatusReg1</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">uint8_t</span> RegAddr[<span class="number">16</span>] = &#123;<span class="number">0x20</span>,<span class="number">0x21</span>,<span class="number">0x22</span>,<span class="number">0x23</span>,<span class="number">0x24</span>,<span class="number">0x25</span>,<span class="number">0x26</span>,<span class="number">0x27</span>,<span class="number">0x28</span>,<span class="number">0x29</span>,<span class="number">0x2a</span>,<span class="number">0x2b</span>,<span class="number">0x2c</span>,<span class="number">0x2d</span>,<span class="number">0x2e</span>,<span class="number">0x2f</span>&#125;;<span class="comment">//8bit-Reg addr</span></span><br><span class="line"><span class="type">uint8_t</span> *pReg = (<span class="type">uint8_t</span> *)(&amp;statregPKG.Port_PHY_Status_reg0);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;<span class="number">16</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">bcm5396_read(<span class="number">0x01</span>, RegAddr[i], &amp;pReg[i], <span class="number">1</span>);<span class="comment">//执行读操作流程</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//16bit-Reg Read</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">BCM5396_StatusReg2</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">uint8_t</span> RegAddr[<span class="number">1</span>] = &#123;<span class="number">0x40</span>&#125;;<span class="comment">//16bit-Reg addr</span></span><br><span class="line"><span class="type">uint16_t</span> *pReg = (<span class="type">uint16_t</span> *)(&amp;statregPKG.SerDes_Signal_Detection_Status_reg);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;<span class="number">1</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">bcm5396_read(<span class="number">0x01</span>, RegAddr[i], &amp;pReg[i], <span class="number">2</span>);<span class="comment">//执行读操作流程</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//32bit-Reg Read</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">BCM5396_StatusReg3</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">uint8_t</span> RegAddr[<span class="number">6</span>] = &#123;<span class="number">0x70</span>,<span class="number">0x00</span>,<span class="number">0x04</span>,<span class="number">0x10</span>,<span class="number">0x14</span>,<span class="number">0x18</span>&#125;;<span class="comment">//32bit-Reg addr</span></span><br><span class="line"><span class="type">uint32_t</span> *pReg = (<span class="type">uint32_t</span> *)(&amp;statregPKG.Strap_Value_reg);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;<span class="number">6</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">bcm5396_read(<span class="number">0x01</span>, RegAddr[i], &amp;pReg[i], <span class="number">4</span>);<span class="comment">//执行读操作流程</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//64bit-Reg Read</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">BCM5396_StatusReg4</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">uint8_t</span> RegAddr[<span class="number">1</span>] = &#123;<span class="number">0x08</span>&#125;;<span class="comment">//64bit-Reg addr</span></span><br><span class="line"></span><br><span class="line"><span class="type">uint64_t</span> *pReg = (<span class="type">uint64_t</span> *)(&amp;statregPKG.Port_Speed_Summary_reg);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;<span class="number">1</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">bcm5396_read(<span class="number">0x01</span>, RegAddr[i], &amp;pReg[i], <span class="number">8</span>);<span class="comment">//执行读操作流程</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//==============================================================</span></span><br><span class="line"><span class="comment">//=== BCM5396 ,Page 02h , Management Mode registers  ==========</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">ManageBit_init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;<span class="comment">//初始化寄存器结构体·</span></span><br><span class="line"><span class="built_in">memset</span>(&amp;mmregPKG, <span class="number">0</span>, <span class="keyword">sizeof</span>(MMREGPKG));</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//8bit-Reg Read</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">BCM5396_ManageReg1</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">uint8_t</span>  RegAddr[<span class="number">3</span>] = &#123;<span class="number">0x00</span>,<span class="number">0x30</span>,<span class="number">0x40</span>&#125;;<span class="comment">//8bit-Reg addr</span></span><br><span class="line"></span><br><span class="line"><span class="type">uint8_t</span> *pReg = (<span class="type">uint8_t</span> *)(&amp;mmregPKG.Global_Manage_Config);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;<span class="number">3</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">bcm5396_read(<span class="number">0x02</span>, RegAddr[i], &amp;pReg[i], <span class="number">1</span>);<span class="comment">//执行读操作流程</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//16bit-Reg Read</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">BCM5396_ManageReg2</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">uint8_t</span> RegAddr[<span class="number">2</span>] = &#123;<span class="number">0x10</span>,<span class="number">0x16</span>&#125;;<span class="comment">//16bit-Reg addr</span></span><br><span class="line"><span class="type">uint16_t</span> *pReg = (<span class="type">uint16_t</span> *)(&amp;mmregPKG.Mirror_Capture_Control);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;<span class="number">2</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">bcm5396_read(<span class="number">0x02</span>, RegAddr[i], &amp;pReg[i], <span class="number">2</span>);<span class="comment">//执行读操作流程</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//32bit-Reg Read</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">BCM5396_ManageReg3</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">uint8_t</span> RegAddr[<span class="number">3</span>] = &#123;<span class="number">0x0c</span>,<span class="number">0x12</span>,<span class="number">0x1c</span>&#125;;<span class="comment">//32bit-Reg addr</span></span><br><span class="line"><span class="type">uint32_t</span> *pReg = (<span class="type">uint32_t</span> *)(&amp;mmregPKG.Aging_Time_Control);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;<span class="number">3</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">bcm5396_read(<span class="number">0x02</span>, RegAddr[i], &amp;pReg[i], <span class="number">4</span>);<span class="comment">//执行读操作流程</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//==============================================================</span></span><br><span class="line"><span class="comment">//=== BCM5396 ,Page 04h , ARL Control registers  ==========</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">ARLCBit_init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;<span class="comment">//初始化寄存器结构体·</span></span><br><span class="line"><span class="built_in">memset</span>(&amp;arlcregPKG, <span class="number">0</span>, <span class="keyword">sizeof</span>(ARLCREGPKG));</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//8bit-Reg Read</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">BCM5396_ARLControlReg1</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">uint8_t</span>  RegAddr[<span class="number">1</span>] = &#123;<span class="number">0x00</span>&#125;;<span class="comment">//8bit-Reg addr</span></span><br><span class="line"></span><br><span class="line"><span class="type">uint8_t</span> *pReg = (<span class="type">uint8_t</span> *)(&amp;arlcregPKG.Global_ARL_Config);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;<span class="number">1</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">bcm5396_read(<span class="number">0x04</span>, RegAddr[i], &amp;pReg[i], <span class="number">1</span>);<span class="comment">//执行读操作流程</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//32bit-Reg Read</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">BCM5396_ARLControlReg3</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">uint8_t</span> RegAddr[<span class="number">2</span>] = &#123;<span class="number">0x16</span>,<span class="number">0x26</span>&#125;;<span class="comment">//32bit-Reg addr</span></span><br><span class="line"><span class="type">uint32_t</span> *pReg = (<span class="type">uint32_t</span> *)(&amp;arlcregPKG.Multiport_Address1);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;<span class="number">2</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">bcm5396_read(<span class="number">0x04</span>, RegAddr[i], &amp;pReg[i], <span class="number">4</span>);<span class="comment">//执行读操作流程</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//64bit-Reg Read</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">BCM5396_ARLControlReg4</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">uint8_t</span> RegAddr[<span class="number">3</span>] = &#123;<span class="number">0x04</span>,<span class="number">0x10</span>,<span class="number">0x20</span>&#125;;<span class="comment">//64bit-Reg addr</span></span><br><span class="line"></span><br><span class="line"><span class="type">uint64_t</span> *pReg = (<span class="type">uint64_t</span> *)(&amp;arlcregPKG.BPDU_Multicast_Address);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;<span class="number">3</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">bcm5396_read(<span class="number">0x04</span>, RegAddr[i], &amp;pReg[i], <span class="number">8</span>);<span class="comment">//执行读操作流程</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//=============================================</span></span><br><span class="line"><span class="comment">//=== BCM5396 ,Page:05h ,ARL Access registers ==========</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">ARLABit_init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;<span class="comment">//初始化寄存器结构体·</span></span><br><span class="line"><span class="built_in">memset</span>(&amp;arlaregPKG, <span class="number">0</span>, <span class="keyword">sizeof</span>(ARLAREGPKG));</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//8bit-Reg Read</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">BCM5396_ARLAccessReg1</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">uint8_t</span> RegAddr[<span class="number">3</span>] = &#123;<span class="number">0x00</span>,<span class="number">0x30</span>,<span class="number">0x60</span>&#125;;<span class="comment">//8bit-Reg addr</span></span><br><span class="line"><span class="type">uint8_t</span> *pReg = (<span class="type">uint8_t</span> *)(&amp;arlaregPKG.ARL_RW_Control);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;<span class="number">3</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">bcm5396_read(<span class="number">0x05</span>, RegAddr[i], &amp;pReg[i], <span class="number">1</span>);<span class="comment">//执行读操作流程</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//16bit-Reg Read</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">BCM5396_ARLAccessReg2</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">uint8_t</span> RegAddr[<span class="number">3</span>] = &#123;<span class="number">0x08</span>,<span class="number">0x31</span>,<span class="number">0x61</span>&#125;;<span class="comment">//16bit-Reg addr</span></span><br><span class="line"><span class="type">uint16_t</span> *pReg = (<span class="type">uint16_t</span> *)(&amp;arlaregPKG.VLAN_ID_Index);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;<span class="number">3</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">bcm5396_read(<span class="number">0x05</span>, RegAddr[i], &amp;pReg[i], <span class="number">2</span>);<span class="comment">//执行读操作流程</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//32bit-Reg Read</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">BCM5396_ARLAccessReg3</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">uint8_t</span> RegAddr[<span class="number">4</span>] = &#123;<span class="number">0x18</span>,<span class="number">0x28</span>,<span class="number">0x3b</span>,<span class="number">0x48</span>&#125;;<span class="comment">//32bit-Reg addr</span></span><br><span class="line"><span class="type">uint32_t</span> *pReg = (<span class="type">uint32_t</span> *)(&amp;arlaregPKG.ARL_FWD_Entry0);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;<span class="number">4</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">bcm5396_read(<span class="number">0x05</span>, RegAddr[i], &amp;pReg[i], <span class="number">4</span>);<span class="comment">//执行读操作流程</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//64bit-Reg Read</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">BCM5396_ARLAccessReg4</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">uint8_t</span> RegAddr[<span class="number">6</span>] = &#123;<span class="number">0x02</span>,<span class="number">0x10</span>,<span class="number">0x20</span>,<span class="number">0x33</span>,<span class="number">0x40</span>,<span class="number">0x63</span>&#125;;<span class="comment">//64bit-Reg addr</span></span><br><span class="line"><span class="type">uint64_t</span> *pReg = (<span class="type">uint64_t</span> *)(&amp;arlaregPKG.MAC_Address_Index);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;<span class="number">6</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">bcm5396_read(<span class="number">0x05</span>, RegAddr[i], &amp;pReg[i], <span class="number">8</span>);<span class="comment">//执行读操作流程</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//==============================================================</span></span><br><span class="line"><span class="comment">//=== BCM5396 ,Page:10~1Fh ,Integrated SerDes registers  ==========</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">IsdregBit_init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;<span class="comment">//初始化寄存器结构体·</span></span><br><span class="line"><span class="built_in">memset</span>(&amp;isdregPKG[<span class="number">0</span>], <span class="number">0</span>, <span class="keyword">sizeof</span>(ISDREGPKG) * <span class="number">16</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">BCM5396_ISDReg2_0</span><span class="params">(<span class="type">int</span> index)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">uint8_t</span> page = <span class="number">0x10</span> + index;<span class="comment">//8bit-Reg page</span></span><br><span class="line"><span class="type">uint8_t</span> RegAddr[<span class="number">20</span>] = &#123;<span class="number">0x00</span>,<span class="number">0x02</span>,<span class="number">0x08</span>,<span class="number">0x0a</span>,<span class="number">0x0c</span>,<span class="number">0x1e</span>,<span class="number">0x20</span>,<span class="number">0x22</span>,<span class="number">0x24</span>,<span class="number">0x28</span>,<span class="number">0x2a</span>,<span class="number">0x2c</span>,<span class="number">0x2e</span>,<span class="number">0x30</span>,<span class="number">0x32</span>,<span class="number">0x34</span>,<span class="number">0x36</span>,<span class="number">0x3a</span>,<span class="number">0x3c</span>,<span class="number">0x3e</span>&#125;;<span class="comment">//8bit-Reg addr</span></span><br><span class="line"><span class="type">uint16_t</span> *pReg = (<span class="type">uint16_t</span> *)(&amp;isdregPKG[index].MII_Control_Register);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;<span class="number">17</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">bcm5396_read(page, RegAddr[i], &amp;pReg[i], <span class="number">2</span>);<span class="comment">//执行读操作流程</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//=============================================</span></span><br><span class="line"><span class="comment">//=== BCM5396 ,Page:30h ,QoS registers ==========</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">QOSBit_init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;<span class="comment">//初始化寄存器结构体·</span></span><br><span class="line"><span class="built_in">memset</span>(&amp;qosregPKG, <span class="number">0</span>, <span class="keyword">sizeof</span>(QOSREGPKG));</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//8bit-Reg Read</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">BCM5396_QOSReg1</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">uint8_t</span> RegAddr[<span class="number">7</span>] = &#123;<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x81</span>,<span class="number">0x82</span>,<span class="number">0x83</span>,<span class="number">0x84</span>,<span class="number">0xa4</span>&#125;;<span class="comment">//8bit-Reg addr</span></span><br><span class="line"><span class="type">uint8_t</span> *pReg = (<span class="type">uint8_t</span> *)(&amp;qosregPKG.QoS_Global_Control_Reg);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;<span class="number">7</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">bcm5396_read(<span class="number">0x30</span>, RegAddr[i], &amp;pReg[i], <span class="number">1</span>);<span class="comment">//执行读操作流程</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//16bit-Reg Read</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">BCM5396_QOSReg2</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">uint8_t</span> RegAddr[<span class="number">18</span>] = &#123;<span class="number">0x01</span>,<span class="number">0x50</span>,<span class="number">0x52</span>,<span class="number">0x54</span>,<span class="number">0x56</span>,<span class="number">0x58</span>,<span class="number">0x5a</span>,<span class="number">0x5c</span>,<span class="number">0x5e</span>,</span><br><span class="line"> <span class="number">0x60</span>,<span class="number">0x62</span>,<span class="number">0x64</span>,<span class="number">0x66</span>,<span class="number">0x68</span>,<span class="number">0x6a</span>,<span class="number">0x6c</span>,<span class="number">0x6e</span>,<span class="number">0x70</span>&#125;;<span class="comment">//16bit-Reg addr</span></span><br><span class="line"><span class="type">uint16_t</span> *pReg = (<span class="type">uint16_t</span> *)(&amp;qosregPKG.QoS_Threshold_Control_Reg);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;<span class="number">18</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">bcm5396_read(<span class="number">0x30</span>, RegAddr[i], &amp;pReg[i], <span class="number">2</span>);<span class="comment">//执行读操作流程</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//32bit-Reg Read</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">BCM5396_QOSReg3</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">uint8_t</span> RegAddr[<span class="number">5</span>] = &#123;<span class="number">0x04</span>,<span class="number">0x08</span>,<span class="number">0x10</span>,<span class="number">0x88</span>,<span class="number">0xa0</span>&#125;;<span class="comment">//32bit-Reg addr</span></span><br><span class="line"><span class="type">uint32_t</span> *pReg = (<span class="type">uint32_t</span> *)(&amp;qosregPKG.QoS_1P_Enable_Reg);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;<span class="number">5</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">bcm5396_read(<span class="number">0x30</span>, RegAddr[i], &amp;pReg[i], <span class="number">4</span>);<span class="comment">//执行读操作流程</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//64bit-Reg Read</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">BCM5396_QOSReg4</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">uint8_t</span> RegAddr[<span class="number">4</span>] = &#123;<span class="number">0x30</span>,<span class="number">0x36</span>,<span class="number">0x3c</span>,<span class="number">0x42</span>&#125;;<span class="comment">//64bit-Reg addr</span></span><br><span class="line"><span class="type">uint64_t</span> *pReg = (<span class="type">uint64_t</span> *)(&amp;qosregPKG.DiffServ_Priority_Map_Reg0);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;<span class="number">4</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">bcm5396_read(<span class="number">0x30</span>, RegAddr[i], &amp;pReg[i], <span class="number">8</span>);<span class="comment">//执行读操作流程</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//=============================================</span></span><br><span class="line"><span class="comment">//=== BCM5396 ,Page:31h ,VLAN registers ==========</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">VLANBit_init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;<span class="comment">//初始化寄存器结构体·</span></span><br><span class="line"><span class="built_in">memset</span>(&amp;vlanregPKG, <span class="number">0</span>, <span class="keyword">sizeof</span>(VLANREGPKG));</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//32bit-Reg Read</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">BCM5396_VLANReg3</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">uint8_t</span> RegAddr[<span class="number">17</span>] = &#123;<span class="number">0x00</span>,<span class="number">0x04</span>,<span class="number">0x08</span>,<span class="number">0x0c</span>,<span class="number">0x10</span>,<span class="number">0x14</span>,<span class="number">0x18</span>,<span class="number">0x1c</span>,</span><br><span class="line"> <span class="number">0x20</span>,<span class="number">0x24</span>,<span class="number">0x28</span>,<span class="number">0x2c</span>,<span class="number">0x30</span>,<span class="number">0x34</span>,<span class="number">0x38</span>,<span class="number">0x3c</span>,<span class="number">0x40</span>&#125;;<span class="comment">//32bit-Reg addr</span></span><br><span class="line"><span class="type">uint32_t</span> *pReg = (<span class="type">uint32_t</span> *)(&amp;vlanregPKG.Port_VLAN_Reg0);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;<span class="number">17</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">bcm5396_read(<span class="number">0x30</span>, RegAddr[i], &amp;pReg[i], <span class="number">4</span>);<span class="comment">//执行读操作流程</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//=============================================</span></span><br><span class="line"><span class="comment">//=== BCM5396 ,Page:32h ,Trunking registers ==========</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">TrunkBit_init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;<span class="comment">//初始化寄存器结构体·</span></span><br><span class="line"><span class="built_in">memset</span>(&amp;trunkregPKG, <span class="number">0</span>, <span class="keyword">sizeof</span>(TRUNKREGPKG));</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//8bit-Reg Read</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">BCM5396_TrunkReg1</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">uint8_t</span> RegAddr[<span class="number">1</span>] = &#123;<span class="number">0x01</span>&#125;;<span class="comment">//8bit-Reg addr</span></span><br><span class="line"><span class="type">uint8_t</span> *pReg = (<span class="type">uint8_t</span> *)(&amp;trunkregPKG.MAC_Trunk_Control_Reg);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;<span class="number">1</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">bcm5396_read(<span class="number">0x32</span>, RegAddr[i], &amp;pReg[i], <span class="number">1</span>);<span class="comment">//执行读操作流程</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//32bit-Reg Read</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">BCM5396_TrunkReg3</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">uint8_t</span> RegAddr[<span class="number">4</span>] = &#123;<span class="number">0x90</span>,<span class="number">0x94</span>,<span class="number">0x98</span>,<span class="number">0x9c</span>&#125;;<span class="comment">//32bit-Reg addr</span></span><br><span class="line"><span class="type">uint32_t</span> *pReg = (<span class="type">uint32_t</span> *)(&amp;trunkregPKG.Trunk_Group0_in_chip0);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;<span class="number">4</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">bcm5396_read(<span class="number">0x32</span>, RegAddr[i], &amp;pReg[i], <span class="number">4</span>);<span class="comment">//执行读操作流程</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//=============================================</span></span><br><span class="line"><span class="comment">//=== BCM5396 ,Page:34h ,IEEE Standard 802.1Q VLAN registers ==========</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">IEEEVBit_init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;<span class="comment">//初始化寄存器结构体·</span></span><br><span class="line"><span class="built_in">memset</span>(&amp;ieeevregPKG, <span class="number">0</span>, <span class="keyword">sizeof</span>(IEEEVREGPKG));</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//8bit-Reg Read</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">BCM5396_IEEEVLANReg1</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">uint8_t</span> RegAddr[<span class="number">6</span>] = &#123;<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x02</span>,<span class="number">0x07</span>,<span class="number">0x08</span>,<span class="number">0x09</span>&#125;;<span class="comment">//8bit-Reg addr</span></span><br><span class="line"><span class="type">uint8_t</span> *pReg = (<span class="type">uint8_t</span> *)(&amp;ieeevregPKG.Global_Control_Reg0);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;<span class="number">6</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">bcm5396_read(<span class="number">0x34</span>, RegAddr[i], &amp;pReg[i], <span class="number">1</span>);<span class="comment">//执行读操作流程</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//16bit-Reg Read</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">BCM5396_IEEEVLANReg2</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">uint8_t</span> RegAddr[<span class="number">17</span>] = &#123;<span class="number">0x10</span>,<span class="number">0x12</span>,<span class="number">0x14</span>,<span class="number">0x16</span>,<span class="number">0x18</span>,<span class="number">0x1a</span>,<span class="number">0x1c</span>,<span class="number">0x1e</span>,</span><br><span class="line"> <span class="number">0x20</span>,<span class="number">0x22</span>,<span class="number">0x24</span>,<span class="number">0x26</span>,<span class="number">0x28</span>,<span class="number">0x2a</span>,<span class="number">0x2c</span>,<span class="number">0x2e</span>,<span class="number">0x30</span>&#125;;<span class="comment">//16bit-Reg addr</span></span><br><span class="line"><span class="type">uint16_t</span> *pReg = (<span class="type">uint16_t</span> *)(&amp;ieeevregPKG.Default_IEEE_Standard_Tag_Port0);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;<span class="number">17</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">bcm5396_read(<span class="number">0x34</span>, RegAddr[i], &amp;pReg[i], <span class="number">2</span>);<span class="comment">//执行读操作流程</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//32bit-Reg Read</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">BCM5396_IEEEVLANReg3</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">uint8_t</span> RegAddr[<span class="number">2</span>] = &#123;<span class="number">0x03</span>,<span class="number">0x0c</span>&#125;;<span class="comment">//32bit-Reg addr</span></span><br><span class="line"><span class="type">uint32_t</span> *pReg = (<span class="type">uint32_t</span> *)(&amp;ieeevregPKG.Global_Control_Reg3);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;<span class="number">2</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">bcm5396_read(<span class="number">0x34</span>, RegAddr[i], &amp;pReg[i], <span class="number">4</span>);<span class="comment">//执行读操作流程</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//=============================================</span></span><br><span class="line"><span class="comment">//=== BCM5396 ,Page:40h ,Jumbo registers ==========</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">JumboBit_init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;<span class="comment">//初始化寄存器结构体·</span></span><br><span class="line"><span class="built_in">memset</span>(&amp;JumboregPKG, <span class="number">0</span>, <span class="keyword">sizeof</span>(JUMBOREGPKG));</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//32bit-Reg Read</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">BCM5396_JumboReg3</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">uint8_t</span> RegAddr[<span class="number">1</span>] = &#123;<span class="number">0x01</span>&#125;;<span class="comment">//32bit-Reg addr</span></span><br><span class="line"><span class="type">uint32_t</span> *pReg = (<span class="type">uint32_t</span> *)(&amp;JumboregPKG.Jumbo_Frame_Port_Mask_Reg);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;<span class="number">1</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">bcm5396_read(<span class="number">0x40</span>, RegAddr[i], &amp;pReg[i], <span class="number">4</span>);<span class="comment">//执行读操作流程</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//=============================================</span></span><br><span class="line"><span class="comment">//=== BCM5396 ,Page:41h ,Broadcast Storm Suppression registers ==========</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">BSSBit_init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;<span class="comment">//初始化寄存器结构体·</span></span><br><span class="line"><span class="built_in">memset</span>(&amp;bssregPKG, <span class="number">0</span>, <span class="keyword">sizeof</span>(BSSREGPKG));</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//16bit-Reg Read</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">BCM5396_BSSReg2</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">uint8_t</span> RegAddr[<span class="number">16</span>] = &#123;<span class="number">0x80</span>,<span class="number">0x82</span>,<span class="number">0x84</span>,<span class="number">0x86</span>,<span class="number">0x88</span>,<span class="number">0x8a</span>,<span class="number">0x8c</span>,<span class="number">0x8e</span>,</span><br><span class="line"> <span class="number">0x90</span>,<span class="number">0x92</span>,<span class="number">0x94</span>,<span class="number">0x96</span>,<span class="number">0x98</span>,<span class="number">0x9a</span>,<span class="number">0x9c</span>,<span class="number">0x9e</span>&#125;;<span class="comment">//16bit-Reg addr</span></span><br><span class="line"><span class="type">uint16_t</span> *pReg = (<span class="type">uint16_t</span> *)(&amp;bssregPKG.Port_Receive_Rate_Control_Reg0);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;<span class="number">16</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">bcm5396_read(<span class="number">0x41</span>, RegAddr[i], &amp;pReg[i], <span class="number">2</span>);<span class="comment">//执行读操作流程</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//32bit-Reg Read</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">BCM5396_BSSReg3</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">uint8_t</span> RegAddr[<span class="number">17</span>] = &#123;<span class="number">0x00</span>,<span class="number">0x10</span>,<span class="number">0x14</span>,<span class="number">0x18</span>,<span class="number">0x1c</span>,<span class="number">0x20</span>,<span class="number">0x24</span>,<span class="number">0x28</span>,<span class="number">0x2c</span>,</span><br><span class="line"> <span class="number">0x30</span>,<span class="number">0x34</span>,<span class="number">0x38</span>,<span class="number">0x3c</span>,<span class="number">0x40</span>,<span class="number">0x44</span>,<span class="number">0x48</span>,<span class="number">0x4c</span>&#125;;<span class="comment">//32bit-Reg addr</span></span><br><span class="line"><span class="type">uint32_t</span> *pReg = (<span class="type">uint32_t</span> *)(&amp;bssregPKG.Suppression_Control_Reg);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;<span class="number">17</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">bcm5396_read(<span class="number">0x41</span>, RegAddr[i], &amp;pReg[i], <span class="number">4</span>);<span class="comment">//执行读操作流程</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//=============================================</span></span><br><span class="line"><span class="comment">//=== BCM5396 ,Page:43h ,IEEE Standard 802.1s Multiple Spanning Tree registers ==========</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">IEEEMBit_init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;<span class="comment">//初始化寄存器结构体·</span></span><br><span class="line"><span class="built_in">memset</span>(&amp;ieeemregPKG, <span class="number">0</span>, <span class="keyword">sizeof</span>(IEEEMREGPKG));</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//8bit-Reg Read</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">BCM5396_IEEEMReg1</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">uint8_t</span> RegAddr[<span class="number">1</span>] = &#123;<span class="number">0x00</span>&#125;;<span class="comment">//8bit-Reg addr</span></span><br><span class="line"><span class="type">uint8_t</span> *pReg = (<span class="type">uint8_t</span> *)(&amp;ieeemregPKG.MSPT_Control_Reg);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;<span class="number">1</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">bcm5396_read(<span class="number">0x43</span>, RegAddr[i], &amp;pReg[i], <span class="number">1</span>);<span class="comment">//执行读操作流程</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//64bit-Reg Read</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">BCM5396_IEEEMReg4</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">uint8_t</span> RegAddr[<span class="number">32</span>] = &#123;<span class="number">0x10</span>,<span class="number">0x16</span>,<span class="number">0x1c</span>,<span class="number">0x22</span>,<span class="number">0x28</span>,<span class="number">0x2e</span>,<span class="number">0x34</span>,<span class="number">0x3a</span>,</span><br><span class="line"> <span class="number">0x40</span>,<span class="number">0x46</span>,<span class="number">0x4c</span>,<span class="number">0x52</span>,<span class="number">0x58</span>,<span class="number">0x5e</span>,<span class="number">0x64</span>,<span class="number">0x6a</span>,</span><br><span class="line"> <span class="number">0x70</span>,<span class="number">0x76</span>,<span class="number">0x7c</span>,<span class="number">0x82</span>,<span class="number">0x88</span>,<span class="number">0x8e</span>,<span class="number">0x94</span>,<span class="number">0x9a</span>,</span><br><span class="line"> <span class="number">0xa0</span>,<span class="number">0xa6</span>,<span class="number">0xac</span>,<span class="number">0xb2</span>,<span class="number">0xb8</span>,<span class="number">0xbe</span>,<span class="number">0xc4</span>,<span class="number">0xca</span>&#125;;<span class="comment">//64bit-Reg addr</span></span><br><span class="line"><span class="type">uint64_t</span> *pReg = (<span class="type">uint64_t</span> *)(&amp;ieeemregPKG.MST_Table_Reg0);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;<span class="number">32</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">bcm5396_read(<span class="number">0x43</span>, RegAddr[i], &amp;pReg[i], <span class="number">8</span>);<span class="comment">//执行读操作流程</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//=============================================</span></span><br><span class="line"><span class="comment">//=== BCM5396 ,Page:80h ,External PHY Registers (Serial Ports) ==========</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">EXTERPHYBit_init_0</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;<span class="comment">//初始化寄存器结构体·</span></span><br><span class="line"><span class="built_in">memset</span>(&amp;exterphyregPKG[<span class="number">0</span>], <span class="number">0</span>, <span class="keyword">sizeof</span>(EXTERPHYREGPKG) * <span class="number">16</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//16bit-Reg Read</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">BCM5396_EXTERPHYReg2_0</span><span class="params">(<span class="type">int</span> index)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">uint8_t</span> page = <span class="number">0x80</span> + index;</span><br><span class="line"><span class="type">uint8_t</span> RegAddr[<span class="number">10</span>] = &#123;<span class="number">0x00</span>,<span class="number">0x02</span>,<span class="number">0x08</span>,<span class="number">0x0a</span>,<span class="number">0x0c</span>,<span class="number">0x0e</span>,<span class="number">0x10</span>,<span class="number">0x12</span>,<span class="number">0x14</span>,<span class="number">0x1e</span>&#125;;<span class="comment">//16bit-Reg addr</span></span><br><span class="line"><span class="type">uint16_t</span> *pReg = (<span class="type">uint16_t</span> *)(&amp;exterphyregPKG[index].MII_Control_Register);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;<span class="number">10</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">bcm5396_read(page, RegAddr[i], &amp;pReg[i], <span class="number">2</span>);<span class="comment">//执行读操作流程</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//32bit-Reg Read</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">BCM5396_EXTERPHYReg3_0</span><span class="params">(<span class="type">int</span> index)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">uint8_t</span> page = <span class="number">0x80</span> + index;</span><br><span class="line"><span class="type">uint8_t</span> RegAddr[<span class="number">1</span>] = &#123;<span class="number">0x04</span>&#125;;<span class="comment">//32bit-Reg addr</span></span><br><span class="line"><span class="type">uint32_t</span> *pReg = (<span class="type">uint32_t</span> *)(&amp;exterphyregPKG[index].PHY_Identifier_Register);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;<span class="number">1</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">bcm5396_read(page, RegAddr[i], &amp;pReg[i], <span class="number">4</span>);<span class="comment">//执行读操作流程</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//-------------------------------------</span></span><br><span class="line"><span class="comment">//打印BCM5396所有寄存器</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">showBCM5396Regs</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//=== BCM5396 ,Page:00h ,Control registers ==========</span></span><br><span class="line">BCM5396_ControlReg1();</span><br><span class="line">BCM5396_ControlReg2();</span><br><span class="line">BCM5396_ControlReg3();</span><br><span class="line"></span><br><span class="line"><span class="comment">//=== BCM5396 ,Page:01h ,Status Reg ==========</span></span><br><span class="line">BCM5396_StatusReg1();</span><br><span class="line">BCM5396_StatusReg2();</span><br><span class="line">BCM5396_StatusReg3();</span><br><span class="line">BCM5396_StatusReg4();</span><br><span class="line"></span><br><span class="line"><span class="comment">//=== BCM5396 ,Page 02h , Management Mode registers  ==========</span></span><br><span class="line">BCM5396_ManageReg1();</span><br><span class="line">BCM5396_ManageReg2();</span><br><span class="line">BCM5396_ManageReg3();</span><br><span class="line"></span><br><span class="line"><span class="comment">//=== BCM5396 ,Page 04h , ARL Control registers  ==========</span></span><br><span class="line">BCM5396_ARLControlReg1();</span><br><span class="line">BCM5396_ARLControlReg3();</span><br><span class="line">BCM5396_ARLControlReg4();</span><br><span class="line"></span><br><span class="line"><span class="comment">//=== BCM5396 ,Page:05h ,ARL Access registers ==========</span></span><br><span class="line">BCM5396_ARLAccessReg1();</span><br><span class="line">BCM5396_ARLAccessReg2();</span><br><span class="line">BCM5396_ARLAccessReg3();</span><br><span class="line">BCM5396_ARLAccessReg4();</span><br><span class="line"></span><br><span class="line"><span class="comment">//=== BCM5396 ,Page:10~1Fh ,Integrated SerDes registers  ==========</span></span><br><span class="line"><span class="comment">//Page:10h ~ 1Fh</span></span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; <span class="number">16</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">BCM5396_ISDReg2_0(i);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//=== BCM5396 ,Page:30h ,QoS registers ==========</span></span><br><span class="line">BCM5396_QOSReg1();</span><br><span class="line">BCM5396_QOSReg2();</span><br><span class="line">BCM5396_QOSReg3();</span><br><span class="line">BCM5396_QOSReg4();</span><br><span class="line"></span><br><span class="line"><span class="comment">//=== BCM5396 ,Page:31h ,VLAN registers ==========</span></span><br><span class="line">BCM5396_VLANReg3();</span><br><span class="line"></span><br><span class="line"><span class="comment">//=== BCM5396 ,Page:32h ,Trunking registers ==========</span></span><br><span class="line">BCM5396_TrunkReg1();</span><br><span class="line">BCM5396_TrunkReg3();</span><br><span class="line"></span><br><span class="line"><span class="comment">//=== BCM5396 ,Page:34h ,IEEE Standard 802.1Q VLAN registers ==========</span></span><br><span class="line">BCM5396_IEEEVLANReg1();</span><br><span class="line">BCM5396_IEEEVLANReg2();</span><br><span class="line">BCM5396_IEEEVLANReg3();</span><br><span class="line"></span><br><span class="line"><span class="comment">//=== BCM5396 ,Page:40h ,Jumbo registers ==========</span></span><br><span class="line">BCM5396_JumboReg3();</span><br><span class="line"></span><br><span class="line"><span class="comment">//=== BCM5396 ,Page:41h ,Broadcast Storm Suppression registers ==========</span></span><br><span class="line">BCM5396_BSSReg2();</span><br><span class="line">BCM5396_BSSReg3();</span><br><span class="line"></span><br><span class="line"><span class="comment">//=== BCM5396 ,Page:43h ,IEEE Standard 802.1s Multiple Spanning Tree registers ==========</span></span><br><span class="line">BCM5396_IEEEMReg1();</span><br><span class="line">BCM5396_IEEEMReg4();</span><br><span class="line"></span><br><span class="line"><span class="comment">//=== BCM5396 ,Page:80~8Fh ,External PHY Registers (Serial Ports) ==========</span></span><br><span class="line"><span class="comment">//Page:80h ~ 8Fh</span></span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; <span class="number">16</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">BCM5396_EXTERPHYReg2_0(i);</span><br><span class="line">BCM5396_EXTERPHYReg3_0(i);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//5396复位使能</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">bcm5396_reset</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//5396的复位</span></span><br><span class="line">GPIO_ResetBits (GPIOC, GPIO_Pin_9);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">bcm5396_release</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//5396的复位释放</span></span><br><span class="line">GPIO_SetBits(GPIOC, GPIO_Pin_9);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//========================================</span></span><br><span class="line"><span class="comment">//访问BCM5396</span></span><br><span class="line"><span class="comment">//写读写数据data为 1Bytes (8bits)</span></span><br><span class="line"><span class="comment">//spi_WR_1Byte(8bit命令,8bit地址, 8bit数据,SPI模式)</span></span><br><span class="line"><span class="type">uint32_t</span> <span class="title function_">spi_oprate</span><span class="params">(<span class="type">uint8_t</span> data0, <span class="type">uint8_t</span> data1, <span class="type">uint8_t</span> data2, <span class="type">void</span>* pbuf, <span class="type">int</span> len)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">uint32_t</span> readdata = <span class="number">0</span>;</span><br><span class="line">    <span class="type">uint8_t</span>* pdata = (<span class="type">uint8_t</span>*)(pbuf);</span><br><span class="line"><span class="meta">#<span class="keyword">if</span> (SPI_MODE == 0)</span></span><br><span class="line"><span class="type">uint8_t</span> mode = <span class="number">3</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">elif</span>(SPI_MODE == 1)</span></span><br><span class="line"><span class="type">uint8_t</span> mode = <span class="number">1</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//根据BCM5396手册中的SPI Timing ,(P154,Figure 35)</span></span><br><span class="line">spi_mass_low ();</span><br><span class="line"></span><br><span class="line">readdata |= spi_writeread ( data0,mode);<span class="comment">//后沿采样(类如标准的SPI[CPOL=1,CPHA=1])</span></span><br><span class="line">readdata = readdata &lt;&lt; <span class="number">8</span>;</span><br><span class="line"> </span><br><span class="line">readdata |= spi_writeread ( data1,mode);</span><br><span class="line">readdata = readdata &lt;&lt; <span class="number">8</span>;</span><br><span class="line"></span><br><span class="line">readdata |= spi_writeread ( data2,mode);</span><br><span class="line"><span class="keyword">if</span>(len &gt; <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">readdata = readdata &lt;&lt; <span class="number">8</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt; len;i++)</span><br><span class="line">&#123;</span><br><span class="line">readdata |= spi_writeread ( *pdata, mode);</span><br><span class="line">readdata = readdata &lt;&lt; <span class="number">8</span>;</span><br><span class="line">pdata++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">delay_us(<span class="number">10</span>);</span><br><span class="line">spi_mass_high ();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> readdata;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/******************* END OF FILE *********/</span></span><br></pre></td></tr></table></figure><h3 id="bcm5396h"><a class="markdownIt-Anchor" href="#bcm5396h"></a> bcm5396.h</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// bcm5396.h</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __BCM5396_H__</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __BCM5396_H__</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;sys.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;string.h&quot;</span> </span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> BCM5396_MODE_LFSB(5)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> BCM5396_NOR_MODE(0)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> BCM5396_DIS_MODE(1)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> BCM5396_BLOCK_MODE(2)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> BCM5396_LISTEN_MODE(3)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> BCM5396_LEARN_MODE(4)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> BCM5396_FORWARD_MODE(5)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> BCM5396_1000M_SPD(0)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> BCM5396_100M_SPD(1)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> INTER_DBG_MODE<span class="comment">//</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> BCM_READ_CMD(0x60)<span class="comment">//</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> BCM_WRITE_CMD(0x61)<span class="comment">//</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SPI_WAIT_TIMEOUT(100)<span class="comment">//</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//---- Page struct ----</span></span><br><span class="line"><span class="comment">//Global Registers</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">Global_Registers_Struct_Pkg</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="type">uint8_t</span>SPI_Data_IO_Reg0;<span class="comment">//SPI Data I/O 0 (address F0h ,8bit)</span></span><br><span class="line"><span class="type">uint8_t</span>SPI_Data_IO_Reg1;<span class="comment">//SPI Data I/O 1 (address F1h ,8bit)</span></span><br><span class="line"><span class="type">uint8_t</span>SPI_Data_IO_Reg2;<span class="comment">//SPI Data I/O 2 (address F2h ,8bit)</span></span><br><span class="line"><span class="type">uint8_t</span>SPI_Data_IO_Reg3;<span class="comment">//SPI Data I/O 3 (address F3h ,8bit)</span></span><br><span class="line"><span class="type">uint8_t</span>SPI_Data_IO_Reg4;<span class="comment">//SPI Data I/O 4 (address F4h ,8bit)</span></span><br><span class="line"><span class="type">uint8_t</span>SPI_Data_IO_Reg5;<span class="comment">//SPI Data I/O 5 (address F5h ,8bit)</span></span><br><span class="line"><span class="type">uint8_t</span>SPI_Data_IO_Reg6;<span class="comment">//SPI Data I/O 6 (address F6h ,8bit)</span></span><br><span class="line"><span class="type">uint8_t</span>SPI_Data_IO_Reg7;<span class="comment">//SPI Data I/O 7 (address F7h ,8bit)</span></span><br><span class="line"><span class="type">uint8_t</span>SPI_Status_Reg;<span class="comment">//SPI Status register (address FEh ,8bit)</span></span><br><span class="line"><span class="type">uint8_t</span>Page_Reg;<span class="comment">//Page register (address FFh ,8bit)</span></span><br><span class="line"><span class="type">uint8_t</span>   rsvd[<span class="number">3</span>];</span><br><span class="line">&#125;GLOBALREGPKG;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Page 00h Control registers</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">Control_Registers_Struct_Pkg</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="type">uint8_t</span>Port_Control_reg0;<span class="comment">// Port Control register 0 (address 00h, 8bit) </span></span><br><span class="line"><span class="type">uint8_t</span>Port_Control_reg1;<span class="comment">// Port Control register 1 (address 01h, 8bit) </span></span><br><span class="line"><span class="type">uint8_t</span>Port_Control_reg2;<span class="comment">// Port Control register 2 (address 02h, 8bit) </span></span><br><span class="line"><span class="type">uint8_t</span>Port_Control_reg3;<span class="comment">// Port Control register 3 (address 03h, 8bit) </span></span><br><span class="line"><span class="type">uint8_t</span>Port_Control_reg4;<span class="comment">// Port Control register 4 (address 04h, 8bit) </span></span><br><span class="line"><span class="type">uint8_t</span>Port_Control_reg5;<span class="comment">// Port Control register 5 (address 05h, 8bit) </span></span><br><span class="line"><span class="type">uint8_t</span>Port_Control_reg6;<span class="comment">// Port Control register 6 (address 06h, 8bit) </span></span><br><span class="line"><span class="type">uint8_t</span>Port_Control_reg7;<span class="comment">// Port Control register 7 (address 07h, 8bit) </span></span><br><span class="line"><span class="type">uint8_t</span>Port_Control_reg8;<span class="comment">// Port Control register 8 (address 08h, 8bit) </span></span><br><span class="line"><span class="type">uint8_t</span>Port_Control_reg9;<span class="comment">// Port Control register 9 (address 09h, 8bit) </span></span><br><span class="line"><span class="type">uint8_t</span>Port_Control_reg10;<span class="comment">// Port Control register 10 (address 0Ah, 8bit) </span></span><br><span class="line"><span class="type">uint8_t</span>Port_Control_reg11;<span class="comment">// Port Control register 11 (address 0Bh, 8bit) </span></span><br><span class="line"><span class="type">uint8_t</span>Port_Control_reg12;<span class="comment">// Port Control register 12 (address 0Ch, 8bit) </span></span><br><span class="line"><span class="type">uint8_t</span>Port_Control_reg13;<span class="comment">// Port Control register 13 (address 0Dh, 8bit) </span></span><br><span class="line"><span class="type">uint8_t</span>Port_Control_reg14;<span class="comment">// Port Control register 14 (address 0Eh, 8bit) </span></span><br><span class="line"><span class="type">uint8_t</span>Port_Control_reg15;<span class="comment">// Port Control register 15 (address 0Fh, 8bit) </span></span><br><span class="line"><span class="type">uint8_t</span>IMP_Port_Control_reg;<span class="comment">// IMP Port (Port 16) Control register (address 10h ,8bit)</span></span><br><span class="line"><span class="type">uint8_t</span>Switch_Mode_reg;<span class="comment">// Switch Mode register (address 20h ,8bit) </span></span><br><span class="line"><span class="type">uint8_t</span>New_Control_reg;<span class="comment">// New Control register (address 3Bh ,8bit) </span></span><br><span class="line"><span class="type">uint8_t</span>Multicast_Control_reg;<span class="comment">// Reserved—Multicast Control register (address 50h ,8bit) </span></span><br><span class="line"><span class="type">uint8_t</span>Update_Rate_Control_reg;<span class="comment">// Load Meter Update Rate Control register (address 51h ,8bit) </span></span><br><span class="line"><span class="type">uint8_t</span>TXq_Flush_Mode_reg;<span class="comment">// TXq Flush Mode register(address 52h ,8bit)</span></span><br><span class="line"><span class="type">uint8_t</span>Port_State_Override_reg0;<span class="comment">// Port 0 Port State Override register (address 60h ,8bit)  </span></span><br><span class="line"><span class="type">uint8_t</span>Port_State_Override_reg1;<span class="comment">// Port 1 Port State Override register (address 61h ,8bit)  </span></span><br><span class="line"><span class="type">uint8_t</span>Port_State_Override_reg2;<span class="comment">// Port 2 Port State Override register (address 62h ,8bit)  </span></span><br><span class="line"><span class="type">uint8_t</span>Port_State_Override_reg3;<span class="comment">// Port 3 Port State Override register (address 63h ,8bit)  </span></span><br><span class="line"><span class="type">uint8_t</span>Port_State_Override_reg4;<span class="comment">// Port 4 Port State Override register (address 64h ,8bit)  </span></span><br><span class="line"><span class="type">uint8_t</span>Port_State_Override_reg5;<span class="comment">// Port 5 Port State Override register (address 65h ,8bit)  </span></span><br><span class="line"><span class="type">uint8_t</span>Port_State_Override_reg6;<span class="comment">// Port 6 Port State Override register (address 66h ,8bit)  </span></span><br><span class="line"><span class="type">uint8_t</span>Port_State_Override_reg7;<span class="comment">// Port 7 Port State Override register (address 67h ,8bit)  </span></span><br><span class="line"><span class="type">uint8_t</span>Port_State_Override_reg8;<span class="comment">// Port 8 Port State Override register (address 68h ,8bit)  </span></span><br><span class="line"><span class="type">uint8_t</span>Port_State_Override_reg9;<span class="comment">// Port 9 Port State Override register (address 69h ,8bit)  </span></span><br><span class="line"><span class="type">uint8_t</span>Port_State_Override_reg10;<span class="comment">// Port 10 Port State Override register (address 6Ah ,8bit)  </span></span><br><span class="line"><span class="type">uint8_t</span>Port_State_Override_reg11;<span class="comment">// Port 11 Port State Override register (address 6Bh ,8bit)  </span></span><br><span class="line"><span class="type">uint8_t</span>Port_State_Override_reg12;<span class="comment">// Port 12 Port State Override register (address 6Ch ,8bit)  </span></span><br><span class="line"><span class="type">uint8_t</span>Port_State_Override_reg13;<span class="comment">// Port 13 Port State Override register (address 6Dh ,8bit)  </span></span><br><span class="line"><span class="type">uint8_t</span>Port_State_Override_reg14;<span class="comment">// Port 14 Port State Override register (address 6Eh ,8bit)  </span></span><br><span class="line"><span class="type">uint8_t</span>Port_State_Override_reg15;<span class="comment">// Port 15 Port State Override register (address 6Fh ,8bit)  </span></span><br><span class="line"><span class="type">uint8_t</span>Port_State_Override_reg16;<span class="comment">// Port 16 (IMP) Port State Override register (address 70h ,8bit)  </span></span><br><span class="line"><span class="type">uint8_t</span>IEEE_Standard_Control_reg1;<span class="comment">// IEEE Standard 802.1x Control register 1 (address 77h ,8bit)  </span></span><br><span class="line"><span class="type">uint8_t</span>External_PHY_Scan_Control_reg;<span class="comment">// External PHY Scan Control register (address 86h ,8bit)  </span></span><br><span class="line"><span class="type">uint8_t</span>Fast_Aging_Control_reg;<span class="comment">// Fast Aging Control register (address 88h ,8bit) </span></span><br><span class="line"><span class="type">uint8_t</span>Fast_Aging_Port_reg;<span class="comment">// Fast Aging Port register (address 89h ,8bit) </span></span><br><span class="line"><span class="type">uint8_t</span>Pause_Frame_Detection_Control_reg;<span class="comment">// Pause Frame Detection Control register (address 90h ,8bit)  </span></span><br><span class="line"><span class="type">uint8_t</span>RGMII_Control_reg;<span class="comment">// RGMII Control register (address A0h ,8bit)  </span></span><br><span class="line"></span><br><span class="line"><span class="type">uint16_t</span>LED_Control_reg;<span class="comment">// LED Control register (address 24h–25h ,16bit)  </span></span><br><span class="line"><span class="type">uint16_t</span>SD_SEL_EARLY_reg;<span class="comment">// SD_SEL_EARLY register (address 84h–85h ,16bit) </span></span><br><span class="line"><span class="type">uint16_t</span>Fast_Aging_VID_reg;<span class="comment">// Fast Aging VID register (address 8Ah–8Bh ,16bit)  </span></span><br><span class="line"></span><br><span class="line"><span class="type">uint32_t</span>Failed_Forward_Map_reg;<span class="comment">// Multicast Lookup Failed Forward Map register(address 58h–5Bh ,32bit)</span></span><br><span class="line"><span class="type">uint32_t</span>IEEE_Standard_Control_reg2;<span class="comment">// IEEE Standard 802.1x Control register 2 (address 78h–7Bh ,32bit)  </span></span><br><span class="line"><span class="type">uint32_t</span>SD_Default_reg;<span class="comment">// SD Default register (address 80h–83h ,32bit) </span></span><br><span class="line"></span><br><span class="line"><span class="type">uint8_t</span>   rsvd[<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">&#125;CTLREGPKG;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Page 01h Status registers</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">Status_Registers_Struct_Pkg</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="type">uint8_t</span>Port_PHY_Status_reg0;<span class="comment">// Port 0 PHY Status register(address 20h ,8bit) </span></span><br><span class="line"><span class="type">uint8_t</span>Port_PHY_Status_reg1;<span class="comment">// Port 1 PHY Status register(address 21h ,8bit) </span></span><br><span class="line"><span class="type">uint8_t</span>Port_PHY_Status_reg2;<span class="comment">// Port 2 PHY Status register(address 22h ,8bit) </span></span><br><span class="line"><span class="type">uint8_t</span>Port_PHY_Status_reg3;<span class="comment">// Port 3 PHY Status register(address 23h ,8bit) </span></span><br><span class="line"><span class="type">uint8_t</span>Port_PHY_Status_reg4;<span class="comment">// Port 4 PHY Status register(address 24h ,8bit) </span></span><br><span class="line"><span class="type">uint8_t</span>Port_PHY_Status_reg5;<span class="comment">// Port 5 PHY Status register(address 25h ,8bit) </span></span><br><span class="line"><span class="type">uint8_t</span>Port_PHY_Status_reg6;<span class="comment">// Port 6 PHY Status register(address 26h ,8bit) </span></span><br><span class="line"><span class="type">uint8_t</span>Port_PHY_Status_reg7;<span class="comment">// Port 7 PHY Status register(address 27h ,8bit) </span></span><br><span class="line"><span class="type">uint8_t</span>Port_PHY_Status_reg8;<span class="comment">// Port 8 PHY Status register(address 28h ,8bit) </span></span><br><span class="line"><span class="type">uint8_t</span>Port_PHY_Status_reg9;<span class="comment">// Port 9 PHY Status register(address 29h ,8bit) </span></span><br><span class="line"><span class="type">uint8_t</span>Port_PHY_Status_reg10;<span class="comment">// Port 10 PHY Status register(address 2Ah ,8bit) </span></span><br><span class="line"><span class="type">uint8_t</span>Port_PHY_Status_reg11;<span class="comment">// Port 11 PHY Status register(address 2Bh ,8bit) </span></span><br><span class="line"><span class="type">uint8_t</span>Port_PHY_Status_reg12;<span class="comment">// Port 12 PHY Status register(address 2Ch ,8bit) </span></span><br><span class="line"><span class="type">uint8_t</span>Port_PHY_Status_reg13;<span class="comment">// Port 13 PHY Status register(address 2Dh ,8bit) </span></span><br><span class="line"><span class="type">uint8_t</span>Port_PHY_Status_reg14;<span class="comment">// Port 14 PHY Status register(address 2Eh ,8bit) </span></span><br><span class="line"><span class="type">uint8_t</span>Port_PHY_Status_reg15;<span class="comment">// Port 15 PHY Status register(address 2Fh ,8bit) </span></span><br><span class="line"></span><br><span class="line"><span class="type">uint16_t</span>SerDes_Signal_Detection_Status_reg;<span class="comment">//SerDes Signal Detection Status register(address 40h ,16bit) </span></span><br><span class="line"></span><br><span class="line"><span class="type">uint32_t</span>Strap_Value_reg;<span class="comment">//Strap Value register(address 70h–73h ,32bit) </span></span><br><span class="line"><span class="type">uint32_t</span>Link_Status_Summary_reg;<span class="comment">// Link Status Summary register(address 00h–03h ,32bit) </span></span><br><span class="line"><span class="type">uint32_t</span>Link_Status_Change_reg;<span class="comment">// Link Status Change register(address 04h–07h ,32bit) </span></span><br><span class="line"><span class="type">uint32_t</span>Duplex_Status_Summary_reg;<span class="comment">// Duplex Status Summary register(address 10h–13h ,32bit) </span></span><br><span class="line"><span class="type">uint32_t</span>TX_PAUSE_Status_Summary_reg;<span class="comment">// TX PAUSE Status Summary register(address 14h–17h ,32bit) </span></span><br><span class="line"><span class="type">uint32_t</span>RX_PAUSE_Status_Summary_reg;<span class="comment">// RX PAUSE Status Summary register(address 18h–1Bh ,32bit) </span></span><br><span class="line"></span><br><span class="line"><span class="type">uint64_t</span>Port_Speed_Summary_reg;<span class="comment">// Port Speed Summary register(address 08h–0Fh ,64bit) </span></span><br><span class="line"></span><br><span class="line"><span class="type">uint8_t</span>   rsvd[<span class="number">2</span>];</span><br><span class="line">&#125;STATREGPKG;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Page 02h Management Mode registers</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">Management_Mode_Registers_Struct_Pkg</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="type">uint8_t</span>Global_Manage_Config;<span class="comment">// Global Management Configuration (address 00h ,8bit)</span></span><br><span class="line"><span class="type">uint8_t</span>MODEL_ID_reg;<span class="comment">// MODEL ID register (address 30h ,8bit)</span></span><br><span class="line"><span class="type">uint8_t</span>Revision_ID_reg;<span class="comment">// Revision ID register (address 40h ,8bit)</span></span><br><span class="line"></span><br><span class="line"><span class="type">uint16_t</span>Mirror_Capture_Control;<span class="comment">// Mirror Capture Control (address 10h–11h ,16bit)</span></span><br><span class="line"><span class="type">uint16_t</span>Ingress_Mirror_Divider;<span class="comment">// Ingress Mirror Divider (address 16h–17h ,16bit)</span></span><br><span class="line"></span><br><span class="line"><span class="type">uint32_t</span>Aging_Time_Control;<span class="comment">// Aging Time Control (address 0Ch–0Fh ,32bit)</span></span><br><span class="line"><span class="type">uint32_t</span>Ingress_Mirror_Control;<span class="comment">// Ingress Mirror Control (address 12h–15h ,32bit)</span></span><br><span class="line"><span class="type">uint32_t</span>Egress_Mirror_Control;<span class="comment">// Egress Mirror Control (address 1Ch–1Fh ,32bit)</span></span><br><span class="line"></span><br><span class="line"><span class="type">uint8_t</span>   rsvd[<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">&#125;MMREGPKG;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Page 04h ARL Control registers</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">ARL_Control_Struct_Pkg</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="type">uint8_t</span>Global_ARL_Config;<span class="comment">// Global ARL Configuration (address 00h ,8bit)</span></span><br><span class="line"></span><br><span class="line"><span class="type">uint32_t</span>Multiport_Vector1;<span class="comment">// Multiport Vector 1 (address 16h–19h ,32bit)</span></span><br><span class="line"><span class="type">uint32_t</span>Multiport_Vector2;<span class="comment">// Multiport Vector 2 (address 26h–29h ,32bit)</span></span><br><span class="line"></span><br><span class="line"><span class="type">uint64_t</span>BPDU_Multicast_Address;<span class="comment">// BPDU Multicast Address (address 04h–09h ,48bit)</span></span><br><span class="line"><span class="type">uint64_t</span>Multiport_Address1;<span class="comment">// Multiport Address 1 (address 10h–15h ,48bit)</span></span><br><span class="line"><span class="type">uint64_t</span>Multiport_Address2;<span class="comment">// Multiport Address 2 (address 20h–25h ,48bit)</span></span><br><span class="line"></span><br><span class="line"><span class="type">uint8_t</span>   rsvd[<span class="number">3</span>];</span><br><span class="line"></span><br><span class="line">&#125;ARLCREGPKG;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Page 05h ARL Access registers</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">ARL_Access_Struct_Pkg</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="type">uint8_t</span>ARL_RW_Control;<span class="comment">// ARL Read/Write Control(address 00h ,8bit)</span></span><br><span class="line"><span class="type">uint8_t</span>ARL_Search_Control;<span class="comment">// ARL Search Control(address 30h ,8bit)</span></span><br><span class="line"><span class="type">uint8_t</span>VLAN_RW_Control;<span class="comment">// VLAN/TABLE Read/Write Control(address 60h ,8bit)</span></span><br><span class="line"></span><br><span class="line"><span class="type">uint16_t</span>VLAN_ID_Index;<span class="comment">// VLAN ID Index(address 08h–09h ,12bit)</span></span><br><span class="line"><span class="type">uint16_t</span>ARL_Search_Address;<span class="comment">// ARL Search Address(address 31h–32h ,16bit)</span></span><br><span class="line"><span class="type">uint16_t</span>VLAN_TABLE_Address_Index;<span class="comment">// VLAN TABLE Address Index(address 61h–62h ,16bit)</span></span><br><span class="line"></span><br><span class="line"><span class="type">uint32_t</span>ARL_FWD_Entry0;<span class="comment">// ARL FWD Entry 0(address 18h–1Bh ,32bit)</span></span><br><span class="line"><span class="type">uint32_t</span>ARL_FWD_Entry1;<span class="comment">// ARL FWD Entry 1(address 28h–2Bh ,32bit)</span></span><br><span class="line"><span class="type">uint32_t</span>ARL_Search_Result0;<span class="comment">// ARL Search Result 0(address 3Bh–3Eh ,32bit)</span></span><br><span class="line"><span class="type">uint32_t</span>ARL_Search_Result1;<span class="comment">// ARL Search Result 1(address 48h–4Bh ,32bit)</span></span><br><span class="line"></span><br><span class="line"><span class="type">uint64_t</span>MAC_Address_Index;<span class="comment">// MAC Address Index(address 02h–07h ,48bit)</span></span><br><span class="line"><span class="type">uint64_t</span>ARL_MAC_Entry0;<span class="comment">// ARL MAC/VID Entry 0(address 10h–17h ,64bit)</span></span><br><span class="line"><span class="type">uint64_t</span>ARL_MAC_Entry1;<span class="comment">// ARL MAC/VID Entry 1(address 20h–27h ,64bit) </span></span><br><span class="line"><span class="type">uint64_t</span>ARL_Search_MAC_Result0;<span class="comment">// ARL Search MAC/VID Result 0(address 33h–3Ah ,64bit)</span></span><br><span class="line"><span class="type">uint64_t</span>ARL_Search_MAC_Result1;<span class="comment">// ARL Search MAC/VID Result 1(address 40h–47h ,64bit)</span></span><br><span class="line"><span class="type">uint64_t</span>VLAN_TABLE_Entry;<span class="comment">// VLAN TABLE Entry(address 63h–6Ah ,64bit)</span></span><br><span class="line"></span><br><span class="line"><span class="type">uint8_t</span>   rsvd[<span class="number">3</span>];</span><br><span class="line"></span><br><span class="line">&#125;ARLAREGPKG;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Page 10h-1Fh Port 0-15 Integrated SerDes registers (10/100/1000 Port 0-15)</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">Integrated_SerDes_Struct_Pkg</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="type">uint16_t</span>MII_Control_Register;<span class="comment">// MII Control Register (address 00h–01h ,16bit) </span></span><br><span class="line"><span class="type">uint16_t</span>MII_Status_Register;<span class="comment">// MII Status Register (address 02h–03h ,16bit)</span></span><br><span class="line"><span class="type">uint16_t</span>Auto_Negot_Advert_Reg;<span class="comment">// Auto-Negotiation Advertisement Register (address 08h–09 ,16bit) </span></span><br><span class="line"><span class="type">uint16_t</span>Auto_Negot_Link_Partner_Reg;<span class="comment">// Auto-Negotiation Link Partner Ability Register (address 0Ah–0Bh ,16bit) </span></span><br><span class="line"><span class="type">uint16_t</span>Auto_Negot_Expansion_Reg;<span class="comment">// Auto-Negotiation Expansion Register (address 0Ch–0Dh ,16bit) </span></span><br><span class="line"><span class="type">uint16_t</span>Extended_Status_Reg;<span class="comment">// Extended Status Register (address 1Eh–1Fh ,16bit) </span></span><br><span class="line"><span class="type">uint16_t</span>SerDes_Control_Reg1;<span class="comment">// SerDes/SGMII Control 1 Register in Block 0;Analog Transmit Register in Block 1(address 20h–21h ,16bit) </span></span><br><span class="line"><span class="type">uint16_t</span>SerDes_Control_Reg2;<span class="comment">// SerDes/SGMII Control 2 Register in Block 0 (address 22h–23h ,16bit) </span></span><br><span class="line"><span class="type">uint16_t</span>SerDes_Control_Reg3;<span class="comment">// SerDes/SGMII Control 3 Register in Block 0 (address 24h–25h ,16bit) </span></span><br><span class="line"><span class="type">uint16_t</span>SerDes_Status_Reg1;<span class="comment">// SerDes/SGMII Status 1 Register (address 28h–29h ,16bit) </span></span><br><span class="line"><span class="type">uint16_t</span>SerDes_Status_Reg2;<span class="comment">// SerDes/SGMII Status 2 Register (address 2Ah–2Bh ,16bit) </span></span><br><span class="line"><span class="type">uint16_t</span>SerDes_Status_Reg3;<span class="comment">// SerDes/SGMII Status 3 Register (address 2Ch–2Dh ,16bit) </span></span><br><span class="line"><span class="type">uint16_t</span>CRC_Error_Count_Reg;<span class="comment">// BER/CRC Error Counter Register (address 2Eh–2Fh ,16bit) </span></span><br><span class="line"><span class="type">uint16_t</span>PRBS_Control_Reg;<span class="comment">// PRBS Control Register (address 30h-31h ,16bit)</span></span><br><span class="line"><span class="type">uint16_t</span>PRBS_Status_Reg;<span class="comment">// PRBS Status Register (address 32h-33h ,16bit)</span></span><br><span class="line"><span class="type">uint16_t</span>Pattern_Generator_Control_Reg;<span class="comment">// Pattern Generator Control Register (address 34h-35h ,16bit)</span></span><br><span class="line"><span class="type">uint16_t</span>Pattern_Generator_Status_Reg;<span class="comment">// Pattern Generator Status Register (address 36h-37h ,16bit)</span></span><br><span class="line"><span class="type">uint16_t</span>Force_Transmit_Reg1_0;<span class="comment">// Force Transmit 1 Register (address 3Ah-3Bh ,16bit)</span></span><br><span class="line"><span class="type">uint16_t</span>Force_Transmit_Reg1_1;<span class="comment">// Force Transmit 1 Register (address 3Ch-3Dh ,16bit)</span></span><br><span class="line"><span class="type">uint16_t</span>Block_Address_Number;<span class="comment">// Block Address Number (address 3Eh-3Fh ,16bit)</span></span><br><span class="line"><span class="comment">//uint8_t   rsvd[1];</span></span><br><span class="line">&#125;ISDREGPKG;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Page 30h QoS registers</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">QoS_Struct_Pkg</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="type">uint8_t</span>QoS_Global_Control_Reg;<span class="comment">// QoS Global Control Register (address 00h ,8bit) </span></span><br><span class="line"><span class="type">uint8_t</span>QoS_TX_Control_Reg;<span class="comment">// QoS TX Control Register(address 80h ,8bit)  </span></span><br><span class="line"><span class="type">uint8_t</span>TX_Queue_Weight_Reg0;<span class="comment">// TX Queue 0 Weight Register(address 81h ,8bit)</span></span><br><span class="line"><span class="type">uint8_t</span>TX_Queue_Weight_Reg1;<span class="comment">// TX Queue 1 Weight Register(address 82h ,8bit)</span></span><br><span class="line"><span class="type">uint8_t</span>TX_Queue_Weight_Reg2;<span class="comment">// TX Queue 2 Weight Register(address 83h ,8bit)</span></span><br><span class="line"><span class="type">uint8_t</span>TX_Queue_Weight_Reg3;<span class="comment">// TX Queue 3 Weight Register(address 84h ,8bit)</span></span><br><span class="line"><span class="type">uint8_t</span>Priority_Remap_Reg;<span class="comment">// Traffic Priority Remap Register(address A4h ,8bit)  </span></span><br><span class="line"></span><br><span class="line"><span class="type">uint16_t</span>QoS_Threshold_Control_Reg;<span class="comment">// QoS Threshold Control Register (address 01h–02h ,16bit) </span></span><br><span class="line"><span class="type">uint16_t</span>QoS_RX_Port_Control_Reg0 ;<span class="comment">// QoS RX Port 0 Control Register (address 50h–51h ,16bit) </span></span><br><span class="line"><span class="type">uint16_t</span>QoS_RX_Port_Control_Reg1 ;<span class="comment">// QoS RX Port 1 Control Register (address 52h–53h ,16bit) </span></span><br><span class="line"><span class="type">uint16_t</span>QoS_RX_Port_Control_Reg2 ;<span class="comment">// QoS RX Port 2 Control Register (address 54h–55h ,16bit) </span></span><br><span class="line"><span class="type">uint16_t</span>QoS_RX_Port_Control_Reg3 ;<span class="comment">// QoS RX Port 3 Control Register (address 56h–57h ,16bit) </span></span><br><span class="line"><span class="type">uint16_t</span>QoS_RX_Port_Control_Reg4 ;<span class="comment">// QoS RX Port 4 Control Register (address 58h–59h ,16bit) </span></span><br><span class="line"><span class="type">uint16_t</span>QoS_RX_Port_Control_Reg5 ;<span class="comment">// QoS RX Port 5 Control Register (address 5Ah–5Bh ,16bit) </span></span><br><span class="line"><span class="type">uint16_t</span>QoS_RX_Port_Control_Reg6 ;<span class="comment">// QoS RX Port 6 Control Register (address 5Ch–5Dh ,16bit) </span></span><br><span class="line"><span class="type">uint16_t</span>QoS_RX_Port_Control_Reg7 ;<span class="comment">// QoS RX Port 7 Control Register (address 5Eh–5Fh ,16bit) </span></span><br><span class="line"><span class="type">uint16_t</span>QoS_RX_Port_Control_Reg8 ;<span class="comment">// QoS RX Port 8 Control Register (address 60h–61h ,16bit) </span></span><br><span class="line"><span class="type">uint16_t</span>QoS_RX_Port_Control_Reg9 ;<span class="comment">// QoS RX Port 9 Control Register (address 62h–63h ,16bit) </span></span><br><span class="line"><span class="type">uint16_t</span>QoS_RX_Port_Control_Reg10;<span class="comment">// QoS RX Port 10 Control Register (address 64h–65h ,16bit) </span></span><br><span class="line"><span class="type">uint16_t</span>QoS_RX_Port_Control_Reg11;<span class="comment">// QoS RX Port 11 Control Register (address 66h–67h ,16bit) </span></span><br><span class="line"><span class="type">uint16_t</span>QoS_RX_Port_Control_Reg12;<span class="comment">// QoS RX Port 12 Control Register (address 68h–69h ,16bit) </span></span><br><span class="line"><span class="type">uint16_t</span>QoS_RX_Port_Control_Reg13;<span class="comment">// QoS RX Port 13 Control Register (address 6Ah–6Bh ,16bit) </span></span><br><span class="line"><span class="type">uint16_t</span>QoS_RX_Port_Control_Reg14;<span class="comment">// QoS RX Port 14 Control Register (address 6Ch–6Dh ,16bit) </span></span><br><span class="line"><span class="type">uint16_t</span>QoS_RX_Port_Control_Reg15;<span class="comment">// QoS RX Port 15 Control Register (address 6Eh–6Fh ,16bit) </span></span><br><span class="line"><span class="type">uint16_t</span>QoS_RX_Port_Control_Reg16;<span class="comment">// QoS RX Port 16 Control Register (address 70h–71h ,16bit) </span></span><br><span class="line"></span><br><span class="line"><span class="type">uint32_t</span>QoS_1P_Enable_Reg;<span class="comment">// QoS 1P Enable Register (address 04h–07h ,32bit)</span></span><br><span class="line"><span class="type">uint32_t</span>QoS_DiffServ_Enable_Reg;<span class="comment">// QoS DiffServ Enable Register(address 08h–0Bh ,32bit)  </span></span><br><span class="line"><span class="type">uint32_t</span>IEEE_Standard_Priority_Map_Reg;<span class="comment">//IEEE Standard 802.1P Priority Map Register(address 10h–13h ,32bit)  </span></span><br><span class="line"><span class="type">uint32_t</span>Ether_Priority_Control_Reg;<span class="comment">// EtherType Priority Control Register(address 88h–8Bh ,32bit)  </span></span><br><span class="line"><span class="type">uint32_t</span>En_Priority_Remap_Control_Reg;<span class="comment">// Enable Traffic Priority Remap Control Register (address A0h–A3h ,32bit) </span></span><br><span class="line"></span><br><span class="line"><span class="type">uint64_t</span>DiffServ_Priority_Map_Reg0 ;<span class="comment">// DiffServ Priority Map 0 Register  (address 30h–35h ,48bit) </span></span><br><span class="line"><span class="type">uint64_t</span>DiffServ_Priority_Map_Reg1 ;<span class="comment">// DiffServ Priority Map 1 Register  (address 36h–3Bh ,48bit) </span></span><br><span class="line"><span class="type">uint64_t</span>DiffServ_Priority_Map_Reg2 ;<span class="comment">// DiffServ Priority Map 2 Register  (address 3Ch–41h ,48bit) </span></span><br><span class="line"><span class="type">uint64_t</span>DiffServ_Priority_Map_Reg3 ;<span class="comment">// DiffServ Priority Map 3 Register  (address 42h–47h ,48bit) </span></span><br><span class="line"></span><br><span class="line"><span class="type">uint8_t</span>   rsvd[<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">&#125;QOSREGPKG;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Page 31h VLAN registers</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">VLAN_Struct_Pkg</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="type">uint32_t</span>Port_VLAN_Reg0;<span class="comment">// Port 0 VLAN Register(address 00h–03h ,32bit)</span></span><br><span class="line"><span class="type">uint32_t</span>Port_VLAN_Reg1;<span class="comment">// Port 1 VLAN Register(address 04h–07h ,32bit)</span></span><br><span class="line"><span class="type">uint32_t</span>Port_VLAN_Reg2;<span class="comment">// Port 2 VLAN Register(address 08h–0Bh ,32bit)</span></span><br><span class="line"><span class="type">uint32_t</span>Port_VLAN_Reg3;<span class="comment">// Port 3 VLAN Register(address 0Ch–0Fh ,32bit)</span></span><br><span class="line"><span class="type">uint32_t</span>Port_VLAN_Reg4;<span class="comment">// Port 4 VLAN Register(address 10h–13h ,32bit)</span></span><br><span class="line"><span class="type">uint32_t</span>Port_VLAN_Reg5;<span class="comment">// Port 5 VLAN Register(address 14h–17h ,32bit)</span></span><br><span class="line"><span class="type">uint32_t</span>Port_VLAN_Reg6;<span class="comment">// Port 6 VLAN Register(address 18h–1Bh ,32bit)</span></span><br><span class="line"><span class="type">uint32_t</span>Port_VLAN_Reg7;<span class="comment">// Port 7 VLAN Register(address 1Ch–1Fh ,32bit)</span></span><br><span class="line"><span class="type">uint32_t</span>Port_VLAN_Reg8;<span class="comment">// Port 8 VLAN Register(address 20h–23h ,32bit)</span></span><br><span class="line"><span class="type">uint32_t</span>Port_VLAN_Reg9;<span class="comment">// Port 9 VLAN Register(address 24h–27h ,32bit)</span></span><br><span class="line"><span class="type">uint32_t</span>Port_VLAN_Reg10;<span class="comment">// Port 10 VLAN Register(address 28h–2Bh ,32bit)</span></span><br><span class="line"><span class="type">uint32_t</span>Port_VLAN_Reg11;<span class="comment">// Port 11 VLAN Register(address 2Ch–2Fh ,32bit)</span></span><br><span class="line"><span class="type">uint32_t</span>Port_VLAN_Reg12;<span class="comment">// Port 12 VLAN Register(address 30h–33h ,32bit)</span></span><br><span class="line"><span class="type">uint32_t</span>Port_VLAN_Reg13;<span class="comment">// Port 13 VLAN Register(address 34h–37h ,32bit)</span></span><br><span class="line"><span class="type">uint32_t</span>Port_VLAN_Reg14;<span class="comment">// Port 14 VLAN Register(address 38h–3Bh ,32bit)</span></span><br><span class="line"><span class="type">uint32_t</span>Port_VLAN_Reg15;<span class="comment">// Port 15 VLAN Register(address 3Ch–3Fh ,32bit)</span></span><br><span class="line"><span class="type">uint32_t</span>Port_VLAN_Reg16;<span class="comment">// Port 16 VLAN Register(address 40h–43h ,32bit)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//uint8_t   rsvd[1];</span></span><br><span class="line">&#125;VLANREGPKG;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Page 32h Trunking registers</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">Trunking_Struct_Pkg</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="type">uint8_t</span>MAC_Trunk_Control_Reg;<span class="comment">// MAC Trunk Control Register(address 01h ,8bit)</span></span><br><span class="line"></span><br><span class="line"><span class="type">uint32_t</span>Trunk_Group0_in_chip0;<span class="comment">// Trunk Group 0 in chip0(address 90h–93h ,32bit)</span></span><br><span class="line"><span class="type">uint32_t</span>Trunk_Group1_in_chip0;<span class="comment">// Trunk Group 1 in chip0(address 94h–97h ,32bit)</span></span><br><span class="line"><span class="type">uint32_t</span>Trunk_Group2_in_chip0;<span class="comment">// Trunk Group 2 in chip0(address 98h–9Bh ,32bit)</span></span><br><span class="line"><span class="type">uint32_t</span>Trunk_Group3_in_chip0;<span class="comment">// Trunk Group 3 in chip0(address 9Ch–9Fh ,32bit)</span></span><br><span class="line"></span><br><span class="line"><span class="type">uint8_t</span>   rsvd[<span class="number">3</span>];</span><br><span class="line"></span><br><span class="line">&#125;TRUNKREGPKG;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Page 34h IEEE Standard 802.1Q VLAN registers</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">IEEE_VLAN_Struct_Pkg</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="type">uint8_t</span>Global_Control_Reg0;<span class="comment">// Global Control 0 Register (address 00h ,8bit)</span></span><br><span class="line"><span class="type">uint8_t</span>Global_Control_Reg1;<span class="comment">// Global Control 1 Register (address 01h ,8bit)</span></span><br><span class="line"><span class="type">uint8_t</span>Global_Control_Reg2;<span class="comment">// Global Control 2 Register (address 02h ,8bit)</span></span><br><span class="line"><span class="type">uint8_t</span>Global_Control_Reg4;<span class="comment">// Global Control 4 Register (address 07h ,8bit)</span></span><br><span class="line"><span class="type">uint8_t</span>Global_Control_Reg5;<span class="comment">// Global Control 5 Register (address 08h ,8bit)</span></span><br><span class="line"><span class="type">uint8_t</span>Global_Control_Reg6;<span class="comment">// Global Control 6 Register (address 09h ,8bit)</span></span><br><span class="line"></span><br><span class="line"><span class="type">uint16_t</span>Default_IEEE_Standard_Tag_Port0;<span class="comment">// Default IEEE Standard 802.1Q Tag Port 0(address 10h–11h ,16bit)</span></span><br><span class="line"><span class="type">uint16_t</span>Default_IEEE_Standard_Tag_Port1;<span class="comment">// Default IEEE Standard 802.1Q Tag Port 1(address 12h–13h ,16bit)</span></span><br><span class="line"><span class="type">uint16_t</span>Default_IEEE_Standard_Tag_Port2;<span class="comment">// Default IEEE Standard 802.1Q Tag Port 2(address 14h–15h ,16bit)</span></span><br><span class="line"><span class="type">uint16_t</span>Default_IEEE_Standard_Tag_Port3;<span class="comment">// Default IEEE Standard 802.1Q Tag Port 3(address 16h–17h ,16bit)</span></span><br><span class="line"><span class="type">uint16_t</span>Default_IEEE_Standard_Tag_Port4;<span class="comment">// Default IEEE Standard 802.1Q Tag Port 4(address 18h–19h ,16bit)</span></span><br><span class="line"><span class="type">uint16_t</span>Default_IEEE_Standard_Tag_Port5;<span class="comment">// Default IEEE Standard 802.1Q Tag Port 5(address 1Ah–1Bh ,16bit)</span></span><br><span class="line"><span class="type">uint16_t</span>Default_IEEE_Standard_Tag_Port6;<span class="comment">// Default IEEE Standard 802.1Q Tag Port 6(address 1Ch–1Dh ,16bit)</span></span><br><span class="line"><span class="type">uint16_t</span>Default_IEEE_Standard_Tag_Port7;<span class="comment">// Default IEEE Standard 802.1Q Tag Port 7(address 1Eh–1Fh ,16bit)</span></span><br><span class="line"><span class="type">uint16_t</span>Default_IEEE_Standard_Tag_Port8;<span class="comment">// Default IEEE Standard 802.1Q Tag Port 8(address 20h–21h ,16bit)</span></span><br><span class="line"><span class="type">uint16_t</span>Default_IEEE_Standard_Tag_Port9;<span class="comment">// Default IEEE Standard 802.1Q Tag Port 9(address 22h–23h ,16bit)</span></span><br><span class="line"><span class="type">uint16_t</span>Default_IEEE_Standard_Tag_Port10;<span class="comment">// Default IEEE Standard 802.1Q Tag Port 10(address 24h–25h ,16bit)</span></span><br><span class="line"><span class="type">uint16_t</span>Default_IEEE_Standard_Tag_Port11;<span class="comment">// Default IEEE Standard 802.1Q Tag Port 11(address 26h–27h ,16bit)</span></span><br><span class="line"><span class="type">uint16_t</span>Default_IEEE_Standard_Tag_Port12;<span class="comment">// Default IEEE Standard 802.1Q Tag Port 12(address 28h–29h ,16bit)</span></span><br><span class="line"><span class="type">uint16_t</span>Default_IEEE_Standard_Tag_Port13;<span class="comment">// Default IEEE Standard 802.1Q Tag Port 13(address 2Ah–2Bh ,16bit)</span></span><br><span class="line"><span class="type">uint16_t</span>Default_IEEE_Standard_Tag_Port14;<span class="comment">// Default IEEE Standard 802.1Q Tag Port 14(address 2Ch–2Dh ,16bit)</span></span><br><span class="line"><span class="type">uint16_t</span>Default_IEEE_Standard_Tag_Port15;<span class="comment">// Default IEEE Standard 802.1Q Tag Port 15(address 2Eh–2Fh ,16bit)</span></span><br><span class="line"><span class="type">uint16_t</span>Default_IEEE_Standard_Tag_Port16;<span class="comment">// Default IEEE Standard 802.1Q Tag Port 16(address 30h–31h ,16bit)</span></span><br><span class="line"></span><br><span class="line"><span class="type">uint32_t</span>Global_Control_Reg3;<span class="comment">// Global Control 3 Register (address 03h–06h ,32bit)</span></span><br><span class="line"><span class="type">uint32_t</span>New_riority_Map_Reg;<span class="comment">// New Priority Map Register (address 0Ch–0Fh ,32bit)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//uint8_t   rsvd[1];</span></span><br><span class="line">&#125;IEEEVREGPKG;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Page 40h Jumbo registers</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">Jumbo_Struct_Pkg</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="type">uint32_t</span>Jumbo_Frame_Port_Mask_Reg;<span class="comment">// Jumbo Frame Port Mask Register (address 01h–04h ,32bit) </span></span><br><span class="line"></span><br><span class="line">&#125;JUMBOREGPKG;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//Page 41h Broadcast Storm Suppression registers</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">Broadcast_Storm_Suppression_Struct_Pkg</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="type">uint16_t</span>Port_Suppressed_Packet_Drop_Count_Reg0;<span class="comment">// Port 0 Suppressed Packet Drop Count Register(address 80h–81h ,16bit)</span></span><br><span class="line"><span class="type">uint16_t</span>Port_Suppressed_Packet_Drop_Count_Reg1;<span class="comment">// Port 1 Suppressed Packet Drop Count Register(address 82h–83h ,16bit)</span></span><br><span class="line"><span class="type">uint16_t</span>Port_Suppressed_Packet_Drop_Count_Reg2;<span class="comment">// Port 2 Suppressed Packet Drop Count Register(address 84h–85h ,16bit)</span></span><br><span class="line"><span class="type">uint16_t</span>Port_Suppressed_Packet_Drop_Count_Reg3;<span class="comment">// Port 3 Suppressed Packet Drop Count Register(address 86h–87h ,16bit)</span></span><br><span class="line"><span class="type">uint16_t</span>Port_Suppressed_Packet_Drop_Count_Reg4;<span class="comment">// Port 4 Suppressed Packet Drop Count Register(address 88h–89h ,16bit)</span></span><br><span class="line"><span class="type">uint16_t</span>Port_Suppressed_Packet_Drop_Count_Reg5;<span class="comment">// Port 5 Suppressed Packet Drop Count Register(address 8Ah–8Bh ,16bit)</span></span><br><span class="line"><span class="type">uint16_t</span>Port_Suppressed_Packet_Drop_Count_Reg6;<span class="comment">// Port 6 Suppressed Packet Drop Count Register(address 8Ch–8Dh ,16bit)</span></span><br><span class="line"><span class="type">uint16_t</span>Port_Suppressed_Packet_Drop_Count_Reg7;<span class="comment">// Port 7 Suppressed Packet Drop Count Register(address 8Eh–8Fh ,16bit)</span></span><br><span class="line"><span class="type">uint16_t</span>Port_Suppressed_Packet_Drop_Count_Reg8;<span class="comment">// Port 8 Suppressed Packet Drop Count Register(address 90h–91h ,16bit)</span></span><br><span class="line"><span class="type">uint16_t</span>Port_Suppressed_Packet_Drop_Count_Reg9;<span class="comment">// Port 9 Suppressed Packet Drop Count Register(address 92h–93h ,16bit)</span></span><br><span class="line"><span class="type">uint16_t</span>Port_Suppressed_Packet_Drop_Count_Reg10;<span class="comment">// Port 10 Suppressed Packet Drop Count Register (address 94h–95h ,16bit)</span></span><br><span class="line"><span class="type">uint16_t</span>Port_Suppressed_Packet_Drop_Count_Reg11;<span class="comment">// Port 11 Suppressed Packet Drop Count Register (address 96h–97h ,16bit)</span></span><br><span class="line"><span class="type">uint16_t</span>Port_Suppressed_Packet_Drop_Count_Reg12;<span class="comment">// Port 12 Suppressed Packet Drop Count Register (address 98h–99h ,16bit)</span></span><br><span class="line"><span class="type">uint16_t</span>Port_Suppressed_Packet_Drop_Count_Reg13;<span class="comment">// Port 13 Suppressed Packet Drop Count Register (address 9Ah–9Bh ,16bit)</span></span><br><span class="line"><span class="type">uint16_t</span>Port_Suppressed_Packet_Drop_Count_Reg14;<span class="comment">// Port 14 Suppressed Packet Drop Count Register (address 9Ch–9Dh ,16bit)</span></span><br><span class="line"><span class="type">uint16_t</span>Port_Suppressed_Packet_Drop_Count_Reg15;<span class="comment">// Port 15 Suppressed Packet Drop Count Register (address 9Eh–9Fh ,16bit)</span></span><br><span class="line"></span><br><span class="line"><span class="type">uint32_t</span>Suppression_Control_Reg;<span class="comment">// Suppression Control Register(address 0h–03h ,32bit)</span></span><br><span class="line"><span class="type">uint32_t</span>Port_Receive_Rate_Control_Reg0;<span class="comment">// Port 0 Receive Rate Control Register (address 10h–13h ,32bit)</span></span><br><span class="line"><span class="type">uint32_t</span>Port_Receive_Rate_Control_Reg1;<span class="comment">// Port 1 Receive Rate Control Register (address 14h–17h ,32bit)</span></span><br><span class="line"><span class="type">uint32_t</span>Port_Receive_Rate_Control_Reg2;<span class="comment">// Port 2 Receive Rate Control Register (address 18h–1Bh ,32bit)</span></span><br><span class="line"><span class="type">uint32_t</span>Port_Receive_Rate_Control_Reg3;<span class="comment">// Port 3 Receive Rate Control Register (address 1Ch–1Fh ,32bit)</span></span><br><span class="line"><span class="type">uint32_t</span>Port_Receive_Rate_Control_Reg4;<span class="comment">// Port 4 Receive Rate Control Register (address 20h–23h ,32bit)</span></span><br><span class="line"><span class="type">uint32_t</span>Port_Receive_Rate_Control_Reg5;<span class="comment">// Port 5 Receive Rate Control Register (address 24h–27h ,32bit)</span></span><br><span class="line"><span class="type">uint32_t</span>Port_Receive_Rate_Control_Reg6;<span class="comment">// Port 6 Receive Rate Control Register (address 28h–2Bh ,32bit)</span></span><br><span class="line"><span class="type">uint32_t</span>Port_Receive_Rate_Control_Reg7;<span class="comment">// Port 7 Receive Rate Control Register (address 2Ch–2Fh ,32bit)</span></span><br><span class="line"><span class="type">uint32_t</span>Port_Receive_Rate_Control_Reg8;<span class="comment">// Port 8 Receive Rate Control Register (address 30h–33h ,32bit)</span></span><br><span class="line"><span class="type">uint32_t</span>Port_Receive_Rate_Control_Reg9;<span class="comment">// Port 9 Receive Rate Control Register (address 34h–37h ,32bit)</span></span><br><span class="line"><span class="type">uint32_t</span>Port_Receive_Rate_Control_Reg10;<span class="comment">// Port 10 Receive Rate Control Register(address 38h–3Bh ,32bit)</span></span><br><span class="line"><span class="type">uint32_t</span>Port_Receive_Rate_Control_Reg11;<span class="comment">// Port 11 Receive Rate Control Register(address 3Ch–3Fh ,32bit)</span></span><br><span class="line"><span class="type">uint32_t</span>Port_Receive_Rate_Control_Reg12;<span class="comment">// Port 12 Receive Rate Control Register(address 40h–43h ,32bit)</span></span><br><span class="line"><span class="type">uint32_t</span>Port_Receive_Rate_Control_Reg13;<span class="comment">// Port 13 Receive Rate Control Register(address 44h–47h ,32bit)</span></span><br><span class="line"><span class="type">uint32_t</span>Port_Receive_Rate_Control_Reg14;<span class="comment">// Port 14 Receive Rate Control Register(address 48h–4Bh ,32bit)</span></span><br><span class="line"><span class="type">uint32_t</span>Port_Receive_Rate_Control_Reg15;<span class="comment">// Port 15 Receive Rate Control Register(address 4Ch–4Fh ,32bit)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//uint8_t   rsvd[1];</span></span><br><span class="line">&#125;BSSREGPKG;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Page 43h IEEE Standard 802.1s Multiple Spanning Tree registers</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">IEEE_Multiple_Spanning_Tree_Struct_Pkg</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="type">uint8_t</span>MSPT_Control_Reg;<span class="comment">// MSPT (Multiple Spanning Trees) Control Register(address 0h ,8bit)</span></span><br><span class="line"></span><br><span class="line"><span class="type">uint64_t</span>MST_Table_Reg0;<span class="comment">// MST 0 Table Register(address 10h–15h ,48bit) </span></span><br><span class="line"><span class="type">uint64_t</span>MST_Table_Reg1;<span class="comment">// MST 0 Table Register(address 16h–1Bh ,48bit) </span></span><br><span class="line"><span class="type">uint64_t</span>MST_Table_Reg2;<span class="comment">// MST 0 Table Register(address 1Ch–21h ,48bit) </span></span><br><span class="line"><span class="type">uint64_t</span>MST_Table_Reg3;<span class="comment">// MST 0 Table Register(address 22h–27h ,48bit) </span></span><br><span class="line"><span class="type">uint64_t</span>MST_Table_Reg4;<span class="comment">// MST 0 Table Register(address 28h–2Dh ,48bit) </span></span><br><span class="line"><span class="type">uint64_t</span>MST_Table_Reg5;<span class="comment">// MST 0 Table Register(address 2Eh–33h ,48bit) </span></span><br><span class="line"><span class="type">uint64_t</span>MST_Table_Reg6;<span class="comment">// MST 0 Table Register(address 34h–39h ,48bit) </span></span><br><span class="line"><span class="type">uint64_t</span>MST_Table_Reg7;<span class="comment">// MST 0 Table Register(address 3Ah–3Fh ,48bit) </span></span><br><span class="line"><span class="type">uint64_t</span>MST_Table_Reg8;<span class="comment">// MST 0 Table Register(address 40h–45h ,48bit) </span></span><br><span class="line"><span class="type">uint64_t</span>MST_Table_Reg9;<span class="comment">// MST 0 Table Register(address 46h–4Bh ,48bit) </span></span><br><span class="line"><span class="type">uint64_t</span>MST_Table_Reg10;<span class="comment">// MST 0 Table Register(address 4Ch–51h ,48bit) </span></span><br><span class="line"><span class="type">uint64_t</span>MST_Table_Reg11;<span class="comment">// MST 0 Table Register(address 52h–57h ,48bit) </span></span><br><span class="line"><span class="type">uint64_t</span>MST_Table_Reg12;<span class="comment">// MST 0 Table Register(address 58h–5Dh ,48bit) </span></span><br><span class="line"><span class="type">uint64_t</span>MST_Table_Reg13;<span class="comment">// MST 0 Table Register(address 5Eh–63h ,48bit) </span></span><br><span class="line"><span class="type">uint64_t</span>MST_Table_Reg14;<span class="comment">// MST 0 Table Register(address 64h–69h ,48bit) </span></span><br><span class="line"><span class="type">uint64_t</span>MST_Table_Reg15;<span class="comment">// MST 0 Table Register(address 6Ah–6Fh ,48bit) </span></span><br><span class="line"><span class="type">uint64_t</span>MST_Table_Reg16;<span class="comment">// MST 0 Table Register(address 70h–75h ,48bit) </span></span><br><span class="line"><span class="type">uint64_t</span>MST_Table_Reg17;<span class="comment">// MST 0 Table Register(address 76h–7Bh ,48bit) </span></span><br><span class="line"><span class="type">uint64_t</span>MST_Table_Reg18;<span class="comment">// MST 0 Table Register(address 7Ch–81h ,48bit) </span></span><br><span class="line"><span class="type">uint64_t</span>MST_Table_Reg19;<span class="comment">// MST 0 Table Register(address 82h–87h ,48bit) </span></span><br><span class="line"><span class="type">uint64_t</span>MST_Table_Reg20;<span class="comment">// MST 0 Table Register(address 88h–8Dh ,48bit) </span></span><br><span class="line"><span class="type">uint64_t</span>MST_Table_Reg21;<span class="comment">// MST 0 Table Register(address 8Eh–93h ,48bit) </span></span><br><span class="line"><span class="type">uint64_t</span>MST_Table_Reg22;<span class="comment">// MST 0 Table Register(address 94h–99h ,48bit) </span></span><br><span class="line"><span class="type">uint64_t</span>MST_Table_Reg23;<span class="comment">// MST 0 Table Register(address 9Ah–9Fh ,48bit) </span></span><br><span class="line"><span class="type">uint64_t</span>MST_Table_Reg24;<span class="comment">// MST 0 Table Register(address A0h–A5h ,48bit) </span></span><br><span class="line"><span class="type">uint64_t</span>MST_Table_Reg25;<span class="comment">// MST 0 Table Register(address A6h–ABh ,48bit) </span></span><br><span class="line"><span class="type">uint64_t</span>MST_Table_Reg26;<span class="comment">// MST 0 Table Register(address ACh–B1h ,48bit) </span></span><br><span class="line"><span class="type">uint64_t</span>MST_Table_Reg27;<span class="comment">// MST 0 Table Register(address B2h–B7h ,48bit) </span></span><br><span class="line"><span class="type">uint64_t</span>MST_Table_Reg28;<span class="comment">// MST 0 Table Register(address B8h–BDh ,48bit) </span></span><br><span class="line"><span class="type">uint64_t</span>MST_Table_Reg29;<span class="comment">// MST 0 Table Register(address BEh–C3h ,48bit) </span></span><br><span class="line"><span class="type">uint64_t</span>MST_Table_Reg30;<span class="comment">// MST 0 Table Register(address C4h–C9h ,48bit) </span></span><br><span class="line"><span class="type">uint64_t</span>MST_Table_Reg31;<span class="comment">// MST 0 Table Register(address CAh–CFh ,48bit) </span></span><br><span class="line"></span><br><span class="line"><span class="type">uint8_t</span>   rsvd[<span class="number">3</span>];</span><br><span class="line">&#125;IEEEMREGPKG;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Page 80h–87h, External PHY Registers (Serial Ports) </span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">External_PHY_Registers_Struct_Pkg</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="type">uint16_t</span>MII_Control_Register;<span class="comment">// MII Control Register(address 00h–01h ,16bit) </span></span><br><span class="line"><span class="type">uint16_t</span>MII_Status_Register;<span class="comment">//MII Status Register(address 02h–03h ,16bit) </span></span><br><span class="line"><span class="type">uint16_t</span>Auto_negotiation_Advertisement_Register;<span class="comment">//Auto-negotiation Advertisement Register(address 08h–09h ,16bit) </span></span><br><span class="line"><span class="type">uint16_t</span>Auto_negotiation_Link_Partner_Ability_Register;<span class="comment">//Auto-negotiation Link Partner Ability Register(address 0Ah–0Bh ,16bit) </span></span><br><span class="line"><span class="type">uint16_t</span>Auto_negotiation_Expansion_Register;<span class="comment">//Auto-negotiation Expansion Register(address 0Ch–0Dh ,16bit) </span></span><br><span class="line"><span class="type">uint16_t</span>Next_Page_Transmit_Register;<span class="comment">//Next Page Transmit Register(address 0Eh–0Fh ,16bit) </span></span><br><span class="line"><span class="type">uint16_t</span>Link_Partner_Received_Next_Page_Register;<span class="comment">//Link Partner Received Next Page Register(address 10h–11h ,16bit) </span></span><br><span class="line"><span class="type">uint16_t</span>BASE1000_T_Control_Register;<span class="comment">//1000BASE-T Control Register(address 12h–13h ,16bit) </span></span><br><span class="line"><span class="type">uint16_t</span>BASE1000_T_Status_Register;<span class="comment">//1000BASE-T Status Register(address 14h–15h ,16bit) </span></span><br><span class="line"><span class="type">uint16_t</span>IEEE_Extended_Status_Register;<span class="comment">//IEEE Extended Status Register(address 1Eh–1Fh ,16bit) </span></span><br><span class="line"></span><br><span class="line"><span class="type">uint32_t</span>PHY_Identifier_Register;<span class="comment">//PHY Identifier Register(address 04h–07h ,32bit) </span></span><br><span class="line"><span class="comment">//uint8_t   rsvd[3];</span></span><br><span class="line">&#125;EXTERPHYREGPKG;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">extern</span> GLOBALREGPKG globalregPKG;</span><br><span class="line"></span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span> <span class="title function_">GlobalBit_init</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span> <span class="title function_">bcm5396_init</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span> <span class="title function_">bcm5396_read</span><span class="params">(<span class="type">int</span> page, <span class="type">int</span> addr, <span class="type">void</span>* pbuf ,<span class="type">int</span> len)</span>;</span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span> <span class="title function_">bcm5396_write</span><span class="params">(<span class="type">int</span> page, <span class="type">int</span> addr, <span class="type">void</span>* pbuf ,<span class="type">int</span> len)</span>;</span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span> <span class="title function_">bcm5396_config</span><span class="params">(<span class="type">int</span> port, <span class="type">int</span> mode, <span class="type">int</span> swmode, <span class="type">int</span> speed)</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">extern</span> <span class="type">void</span> <span class="title function_">showBCM5396Regs</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span> <span class="title function_">GlobalBit_init</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//page 00h</span></span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span> <span class="title function_">ControlBit_init</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span> <span class="title function_">BCM5396_ControlReg1</span><span class="params">(<span class="type">void</span>)</span>;<span class="comment">//8bit-Reg</span></span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span> <span class="title function_">BCM5396_ControlReg2</span><span class="params">(<span class="type">void</span>)</span>;<span class="comment">//16bit-Reg</span></span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span> <span class="title function_">BCM5396_ControlReg3</span><span class="params">(<span class="type">void</span>)</span>;<span class="comment">//32bit-Reg</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//page 01h</span></span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span> <span class="title function_">StatusBit_init</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span> <span class="title function_">BCM5396_StatusReg1</span><span class="params">(<span class="type">void</span>)</span>;<span class="comment">//8bit-Reg</span></span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span> <span class="title function_">BCM5396_StatusReg2</span><span class="params">(<span class="type">void</span>)</span>;<span class="comment">//16bit-Reg</span></span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span> <span class="title function_">BCM5396_StatusReg3</span><span class="params">(<span class="type">void</span>)</span>;<span class="comment">//32bit-Reg</span></span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span> <span class="title function_">BCM5396_StatusReg4</span><span class="params">(<span class="type">void</span>)</span>;<span class="comment">//64bit-Reg</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//page 02h</span></span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span> <span class="title function_">ManageBit_init</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span> <span class="title function_">BCM5396_ManageReg1</span><span class="params">(<span class="type">void</span>)</span>;<span class="comment">//8bit-Reg</span></span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span> <span class="title function_">BCM5396_ManageReg2</span><span class="params">(<span class="type">void</span>)</span>;<span class="comment">//16bit-Reg</span></span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span> <span class="title function_">BCM5396_ManageReg3</span><span class="params">(<span class="type">void</span>)</span>;<span class="comment">//32bit-Reg</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//page 04h</span></span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span> <span class="title function_">ARLCBit_init</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span> <span class="title function_">BCM5396_ARLControlReg1</span><span class="params">(<span class="type">void</span>)</span>;<span class="comment">//8bit-Reg</span></span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span> <span class="title function_">BCM5396_ARLControlReg3</span><span class="params">(<span class="type">void</span>)</span>;<span class="comment">//32bit-Reg</span></span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span> <span class="title function_">BCM5396_ARLControlReg4</span><span class="params">(<span class="type">void</span>)</span>;<span class="comment">//64bit-Reg</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//page 05h</span></span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span> <span class="title function_">ARLABit_init</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span> <span class="title function_">BCM5396_ARLAccessReg1</span><span class="params">(<span class="type">void</span>)</span>;<span class="comment">//8bit-Reg</span></span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span> <span class="title function_">BCM5396_ARLAccessReg2</span><span class="params">(<span class="type">void</span>)</span>;<span class="comment">//16bit-Reg</span></span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span> <span class="title function_">BCM5396_ARLAccessReg3</span><span class="params">(<span class="type">void</span>)</span>;<span class="comment">//32bit-Reg</span></span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span> <span class="title function_">BCM5396_ARLAccessReg4</span><span class="params">(<span class="type">void</span>)</span>;<span class="comment">//64bit-Reg</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//page 10h</span></span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span> <span class="title function_">IsdregBit_init_0</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span> <span class="title function_">BCM5396_ISDReg2_0</span><span class="params">(<span class="type">int</span> index)</span>;<span class="comment">//16bit-Reg</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//page 30h</span></span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span> <span class="title function_">QOSBit_init</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span> <span class="title function_">BCM5396_QOSReg1</span><span class="params">(<span class="type">void</span>)</span>;<span class="comment">//8bit-Reg</span></span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span> <span class="title function_">BCM5396_QOSReg2</span><span class="params">(<span class="type">void</span>)</span>;<span class="comment">//16bit-Reg</span></span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span> <span class="title function_">BCM5396_QOSReg3</span><span class="params">(<span class="type">void</span>)</span>;<span class="comment">//32bit-Reg</span></span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span> <span class="title function_">BCM5396_QOSReg4</span><span class="params">(<span class="type">void</span>)</span>;<span class="comment">//64bit-Reg</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//page 31h</span></span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span> <span class="title function_">VLANBit_init</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span> <span class="title function_">BCM5396_VLANReg3</span><span class="params">(<span class="type">void</span>)</span>;<span class="comment">//32bit-Reg</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//page 32h</span></span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span> <span class="title function_">TrunkBit_init</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span> <span class="title function_">BCM5396_TrunkReg1</span><span class="params">(<span class="type">void</span>)</span>;<span class="comment">//8bit-Reg</span></span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span> <span class="title function_">BCM5396_TrunkReg3</span><span class="params">(<span class="type">void</span>)</span>;<span class="comment">//32bit-Regg</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//page 34h</span></span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span> <span class="title function_">IEEEVBit_init</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span> <span class="title function_">BCM5396_IEEEVLANReg1</span><span class="params">(<span class="type">void</span>)</span>;<span class="comment">//8bit-Reg</span></span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span> <span class="title function_">BCM5396_IEEEVLANReg2</span><span class="params">(<span class="type">void</span>)</span>;<span class="comment">//16bit-Reg</span></span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span> <span class="title function_">BCM5396_IEEEVLANReg3</span><span class="params">(<span class="type">void</span>)</span>;<span class="comment">//32bit-Reg</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//page 40h</span></span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span> <span class="title function_">JumboBit_init</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span> <span class="title function_">BCM5396_JumboReg3</span><span class="params">(<span class="type">void</span>)</span>;<span class="comment">//32bit-Reg</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//page 41h</span></span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span> <span class="title function_">BSSBit_init</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span> <span class="title function_">BCM5396_BSSReg2</span><span class="params">(<span class="type">void</span>)</span>;<span class="comment">//16bit-Reg</span></span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span> <span class="title function_">BCM5396_BSSReg3</span><span class="params">(<span class="type">void</span>)</span>;<span class="comment">//32bit-Reg</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//page 43h</span></span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span> <span class="title function_">IEEEMBit_init</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span> <span class="title function_">BCM5396_IEEEMReg1</span><span class="params">(<span class="type">void</span>)</span>;<span class="comment">//8bit-Reg</span></span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span> <span class="title function_">BCM5396_IEEEMReg4</span><span class="params">(<span class="type">void</span>)</span>;<span class="comment">//64bit-Reg</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//page 80h</span></span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span> <span class="title function_">EXTERPHYBit_init_0</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span> <span class="title function_">BCM5396_EXTERPHYReg2_0</span><span class="params">(<span class="type">int</span> index)</span>;<span class="comment">//16bit-Reg</span></span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span> <span class="title function_">BCM5396_EXTERPHYReg3_0</span><span class="params">(<span class="type">int</span> index)</span>;<span class="comment">//32bit-Reg</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span> <span class="title function_">bcm5396_reset</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span> <span class="title function_">bcm5396_release</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="keyword">extern</span> <span class="type">uint32_t</span> <span class="title function_">spi_oprate</span><span class="params">(<span class="type">uint8_t</span> data0, <span class="type">uint8_t</span> data1, <span class="type">uint8_t</span> data2, <span class="type">void</span>* pbuf, <span class="type">int</span> len)</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span><span class="comment">//__BCM5396_H__</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/******************* END OF FILE *********/</span></span><br></pre></td></tr></table></figure><h3 id="user_spic"><a class="markdownIt-Anchor" href="#user_spic"></a> user_spi.c</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//user_spi.c</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;user_spi.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">int</span>  <span class="title function_">spi_mass_low</span> <span class="params">( <span class="type">void</span> )</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span>  <span class="title function_">spi_mass_high</span> <span class="params">( <span class="type">void</span> )</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span>  <span class="title function_">spi_masck_low</span> <span class="params">( <span class="type">void</span> )</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span>  <span class="title function_">spi_masck_high</span> <span class="params">( <span class="type">void</span> )</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">uint8_t</span> <span class="title function_">spi_writeread</span> <span class="params">( <span class="type">uint8_t</span> data,<span class="type">uint8_t</span> mode)</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/******************* END OF FILE *********/</span></span><br></pre></td></tr></table></figure><h3 id="user_spih"><a class="markdownIt-Anchor" href="#user_spih"></a> user_spi.h</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//user_spi.h</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __USER_SPI_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __USER_SPI_H</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;sys.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> CPLD2_SPI_BCM_REG (1)<span class="comment">//访问BCM5396寄存器</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">extern</span> <span class="type">void</span> <span class="title function_">spi_init</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span>  <span class="title function_">spi_mass_low</span> <span class="params">( <span class="type">void</span> )</span>;</span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span>  <span class="title function_">spi_mass_high</span> <span class="params">( <span class="type">void</span> )</span>;</span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span>  <span class="title function_">spi_masck_low</span> <span class="params">( <span class="type">void</span> )</span>;</span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span>  <span class="title function_">spi_masck_high</span> <span class="params">( <span class="type">void</span> )</span>;</span><br><span class="line"><span class="keyword">extern</span> <span class="type">uint8_t</span> <span class="title function_">spi_writeread</span> <span class="params">(  <span class="type">uint8_t</span> data,<span class="type">uint8_t</span> mode)</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span> <span class="comment">/* __USER_SPI_H */</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/******************* END OF FILE *********/</span></span><br></pre></td></tr></table></figure><h3 id="mainc"><a class="markdownIt-Anchor" href="#mainc"></a> main.c</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//main.c</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;delay.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;bcm5396.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> </span><br><span class="line">&#123; </span><br><span class="line"><span class="type">int</span> rc = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">delay_init(<span class="number">168</span>);  <span class="comment">//初始化延时函数</span></span><br><span class="line"></span><br><span class="line">bcm5396_reset();</span><br><span class="line"></span><br><span class="line"><span class="comment">//-------------------------------------</span></span><br><span class="line">delay_us(<span class="number">3000</span>);</span><br><span class="line"></span><br><span class="line">bcm5396_release();</span><br><span class="line"></span><br><span class="line">delay_us(<span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line">rc = bcm5396_init();</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">showBCM5396Regs();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/******************* END OF FILE *********/</span></span><br></pre></td></tr></table></figure><h2 id="上板"><a class="markdownIt-Anchor" href="#上板"></a> 上板</h2><p>运行结果：<br />略</p><h2 id="闲谈"><a class="markdownIt-Anchor" href="#闲谈"></a> 闲谈</h2>]]></content>
      
      
      <categories>
          
          <category> MCU 应用练习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MCU </tag>
            
            <tag> STMicroelectronics(ST) </tag>
            
            <tag> 库函数应用练习 </tag>
            
            <tag> STM32F1 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>STM32F1应用练习(1) 驱动LTC2990器件</title>
      <link href="/posts/3481076887.html"/>
      <url>/posts/3481076887.html</url>
      
        <content type="html"><![CDATA[<blockquote><ul><li>说明：应用代码段已经验证，本文章旨在移植及适配 STM32F1。</li></ul></blockquote><h2 id="器件"><a class="markdownIt-Anchor" href="#器件"></a> 器件</h2><p>主芯片：ST STM32F103 。<br />驱动器件：LTC2990 。</p><h2 id="目的"><a class="markdownIt-Anchor" href="#目的"></a> 目的</h2><p>驱动IIC接口器件LTC2990。</p><h2 id="电路"><a class="markdownIt-Anchor" href="#电路"></a> 电路</h2><p>硬件连接关系：</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图纸细节    </button><div class="hide-content"><img src="/assets/article/study-ic-arm/practices-mcu/stm32f1/001_a03_b01.png" alt="LTC2990器件" style="zoom:50%;" /><img src="/assets/article/study-ic-arm/practices-mcu/stm32f1/001_a03_b02.png" alt="相关测点" style="zoom:50%;" /><img src="/assets/article/study-ic-arm/practices-mcu/stm32f1/001_a03_b03.png" alt="相关测点" style="zoom:50%;" /><img src="/assets/article/study-ic-arm/practices-mcu/stm32f1/001_a03_b04.png" alt="相关测点" style="zoom:50%;" /></div></div><p>FPGA管脚分配：</p><table><thead><tr><th>信号</th><th>方向</th><th>管脚</th><th>说明</th></tr></thead><tbody><tr><td>TMP_I2C_SCL</td><td>output</td><td>PB5</td><td>IIC接口时钟端</td></tr><tr><td>TMP_I2C_SDA</td><td>inout</td><td>PB6</td><td>IIC接口数据端</td></tr></tbody></table><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p>使用模拟IIC接口对LTC2990器件进行访问。</p><h2 id="驱动"><a class="markdownIt-Anchor" href="#驱动"></a> 驱动</h2><h3 id="ltc2990c"><a class="markdownIt-Anchor" href="#ltc2990c"></a> ltc2990.c</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ltc2990.c</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;ltc2990.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;user_iic.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">MONITOR_DATA ltcMonData;</span><br><span class="line">CM_ADC_DATA ltc_adc[LTC_LEN];</span><br><span class="line"></span><br><span class="line">LTC2990CPKG ltcpkg[<span class="number">4</span>] = &#123;</span><br><span class="line">&#123;LTC0_BASE_ADDR, CONTROL_REG_MODE_TR1_TR2, <span class="number">0</span>, <span class="number">2</span>&#125;,</span><br><span class="line">&#123;LTC1_BASE_ADDR, CONTROL_REG_MODE_V1V2V3V4, <span class="number">0</span>, <span class="number">4</span>&#125;,</span><br><span class="line">&#123;LTC2_BASE_ADDR, CONTROL_REG_MODE_V1DV2_V3V4, <span class="number">0</span>, <span class="number">3</span>&#125;,</span><br><span class="line">&#123;LTC3_BASE_ADDR, CONTROL_REG_MODE_V1V2V3V4, <span class="number">0</span>, <span class="number">4</span>&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">LtcInit</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">memset</span>(&amp;ltcMonData, <span class="number">0</span>, <span class="keyword">sizeof</span>(MONITOR_DATA));</span><br><span class="line"><span class="built_in">memset</span>(&amp;ltc_adc[<span class="number">0</span>], <span class="number">0</span>, <span class="keyword">sizeof</span>(ltc_adc));</span><br><span class="line"><span class="keyword">return</span>  <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//平滑处理</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">smoothAdcData</span><span class="params">(<span class="type">void</span>* padcpcb, <span class="type">int</span> datain)</span> </span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> i;</span><br><span class="line">CM_ADC_DATA* padc = (CM_ADC_DATA*)(padcpcb);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(padc-&gt;cntSp == <span class="number">0</span>) padc-&gt;sum = <span class="number">0</span>;<span class="comment">//首次清零累加值</span></span><br><span class="line">i = padc-&gt;cntSp &amp; <span class="number">0xF</span>;<span class="comment">//限定索引在16个单元</span></span><br><span class="line"><span class="keyword">if</span>(padc-&gt;cntSp &gt;= <span class="number">16</span>) padc-&gt;sum -= padc-&gt;tv[i];<span class="comment">//累加数量达到16后，先去除旧数</span></span><br><span class="line">padc-&gt;tv[i] = datain;<span class="comment">//新数存入旧数所在单元</span></span><br><span class="line">padc-&gt;sum += padc-&gt;tv[i];<span class="comment">//累加新数到累加值</span></span><br><span class="line">padc-&gt;cntSp++;<span class="comment">//计数增加</span></span><br><span class="line"><span class="keyword">if</span>(padc-&gt;cntSp &gt;= <span class="number">16</span>) padc-&gt;volt = padc-&gt;sum &gt;&gt; <span class="number">4</span>;<span class="comment">//解滑动滤波输出值</span></span><br><span class="line"><span class="keyword">else</span> padc-&gt;volt = padc-&gt;tv[i];<span class="comment">//数目不足，使用最新数据做滤波输出</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> i;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取通道数据</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">getLtcChData</span><span class="params">(<span class="type">int</span> port, <span class="type">int</span> chno)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> data = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>((port &lt; <span class="number">0</span>) || (port &gt; <span class="number">4</span>)) <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">if</span>((chno &lt; <span class="number">0</span>) || (chno &gt; <span class="number">4</span>)) <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line">iicLtcWrite(ltcpkg[port].baseaddr, TRIGGE_REG_ADDR, <span class="number">0x00</span>);<span class="comment">//写入任何值都会触发转换</span></span><br><span class="line">iicLtcWrite(ltcpkg[port].baseaddr, CONTROL_REG_ADDR, ltcpkg[port].mode);<span class="comment">//选通工作模式</span></span><br><span class="line"></span><br><span class="line">data = (iicLtcRead(ltcpkg[port].baseaddr, LTC_VMSB(chno)) &amp; <span class="number">0x7F</span>) &lt;&lt; <span class="number">8</span>;</span><br><span class="line">data += iicLtcRead(ltcpkg[port].baseaddr, LTC_VLSB(chno)) &amp; <span class="number">0xFF</span>;</span><br><span class="line"><span class="keyword">return</span> data;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取差分测点温度值，公式计算</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">getTempfromTR</span><span class="params">(<span class="type">int</span> regdata)</span></span><br><span class="line">&#123;<span class="comment">//convert to 0.1°：((* 625 / 10000) - 273.15)*10 (0.1°)</span></span><br><span class="line"><span class="type">int</span> data = regdata;</span><br><span class="line"><span class="keyword">if</span>(data &amp; LTC_HIGH_TEMP_DATA_MASK) <span class="keyword">return</span> <span class="number">-2732</span>;</span><br><span class="line">data *= <span class="number">640</span>;<span class="comment">//0.625*1024</span></span><br><span class="line">data -= <span class="number">2797056</span> ;<span class="comment">//2731.5*1024</span></span><br><span class="line"><span class="keyword">return</span> (data &gt;&gt; <span class="number">10</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取单端测点电压值，公式计算</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">getVoltfromSigend</span><span class="params">(<span class="type">int</span> regdata)</span></span><br><span class="line">&#123;<span class="comment">//convert to 0.1mV</span></span><br><span class="line"><span class="type">int</span> data;</span><br><span class="line"><span class="keyword">if</span>((regdata &amp; LTC_SIGNAL_DATA_MASK) == LTC_SIGNAL_DATA_MASK)</span><br><span class="line">&#123;</span><br><span class="line">data = regdata - <span class="number">0x10000</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">data = regdata;</span><br><span class="line">&#125;</span><br><span class="line">data *= <span class="number">50000</span>;<span class="comment">// * 30518 / 100 /100 (0.1mV);</span></span><br><span class="line"><span class="keyword">return</span> (data &gt;&gt; <span class="number">14</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取差分测点电压值，公式计算</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">getVoltfromDifend</span><span class="params">(<span class="type">int</span> regdata)</span></span><br><span class="line">&#123;<span class="comment">//convert to 0.1mV</span></span><br><span class="line"><span class="type">int</span> data;</span><br><span class="line"><span class="keyword">if</span>((regdata &amp; LTC_SIGNAL_DATA_MASK) == LTC_SIGNAL_DATA_MASK)</span><br><span class="line">&#123;</span><br><span class="line">data = regdata - <span class="number">0x10000</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">data = regdata;</span><br><span class="line">&#125;</span><br><span class="line">data *= <span class="number">3182</span>;<span class="comment">// * 1942 / 100 /100 (0.1mV);</span></span><br><span class="line"><span class="keyword">return</span> (data &gt;&gt; <span class="number">14</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取差分测点电流值，公式计算</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">getIfromDifend</span><span class="params">(<span class="type">int</span> regdata)</span></span><br><span class="line">&#123;<span class="comment">//convert to 0.1mA</span></span><br><span class="line"><span class="type">int</span> data;</span><br><span class="line"><span class="keyword">if</span>((regdata &amp; LTC_SIGNAL_DATA_MASK) == LTC_SIGNAL_DATA_MASK)</span><br><span class="line">&#123;</span><br><span class="line">data = regdata - <span class="number">0x10000</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">data = regdata;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//data *= 362;// * 19.42uV * 10 / (8.25/(8.25+30.2)*2.5mO) (0.1mA);</span></span><br><span class="line">data *= I_K_FACTOR;<span class="comment">// (0.1mA);</span></span><br><span class="line">data += I_B_FACTOR;</span><br><span class="line"><span class="keyword">return</span> (data);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//LTM电源器件电压转温度，公式计算</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">LtmAdcVtoTemp</span><span class="params">(<span class="type">uint16_t</span> Voltage)</span></span><br><span class="line">&#123;<span class="comment">//(1200-Volt)/2.2 - 273.15 : ((5454.5 -2731.5)*256 -Volt * 1164) &gt;&gt; 8</span></span><br><span class="line"><span class="meta">#<span class="keyword">if</span> 1</span></span><br><span class="line"><span class="type">int</span> sum = Voltage * <span class="number">116</span>;</span><br><span class="line">sum = <span class="number">697088</span> - sum;</span><br><span class="line"><span class="keyword">return</span> (<span class="type">int</span>)(sum &gt;&gt; <span class="number">8</span>);</span><br><span class="line"><span class="meta">#<span class="keyword">else</span></span></span><br><span class="line"><span class="keyword">return</span> (<span class="type">int</span>)(Voltage);</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//LTC2990器件ADC采集</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">sampleLtcAdc</span><span class="params">(<span class="type">int</span> phase)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span>i = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> voltData;</span><br><span class="line"><span class="keyword">if</span>((phase &gt; LTC_LEN) || (phase &lt; <span class="number">0</span>)) <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(phase &lt; <span class="number">2</span>)</span><br><span class="line">&#123;<span class="comment">//LtcPort0</span></span><br><span class="line">i = phase;</span><br><span class="line">voltData = getLtcChData(LTC_Port(<span class="number">0</span>), i &lt;&lt; <span class="number">1</span>);<span class="comment">//触发并读取数据</span></span><br><span class="line">voltData = getTempfromTR(voltData);<span class="comment">//to 0.1°</span></span><br><span class="line">smoothAdcData(&amp;ltc_adc[phase], voltData);<span class="comment">//平滑处理</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(phase &lt; <span class="number">6</span>)</span><br><span class="line">&#123;<span class="comment">//LtcPort1</span></span><br><span class="line">i = phase - <span class="number">2</span>;</span><br><span class="line">voltData = getLtcChData(LTC_Port(<span class="number">1</span>), i);<span class="comment">//触发并读取数据</span></span><br><span class="line">voltData = getVoltfromSigend(voltData);<span class="comment">//to 0.1mV</span></span><br><span class="line">smoothAdcData(&amp;ltc_adc[phase], voltData);<span class="comment">//平滑处理</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(phase &lt; <span class="number">8</span>)</span><br><span class="line">&#123;<span class="comment">//LtcPort2</span></span><br><span class="line">&#123;</span><br><span class="line">i = phase - <span class="number">4</span>;</span><br><span class="line">voltData = getLtcChData(LTC_Port(<span class="number">2</span>), i);<span class="comment">//触发并读取数据</span></span><br><span class="line">voltData = getVoltfromSigend(voltData);<span class="comment">//to 0.1mV</span></span><br><span class="line">&#125;</span><br><span class="line">smoothAdcData(&amp;ltc_adc[phase], voltData);<span class="comment">//平滑处理</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(phase &lt; LTC_LEN)</span><br><span class="line">&#123;<span class="comment">//LtcPort3</span></span><br><span class="line">i = phase - <span class="number">8</span>;</span><br><span class="line">voltData = getLtcChData(LTC_Port(<span class="number">3</span>), i);<span class="comment">//触发并读取数据</span></span><br><span class="line">voltData = getVoltfromSigend(voltData);<span class="comment">//to 0.1mV</span></span><br><span class="line">smoothAdcData(&amp;ltc_adc[phase], voltData);<span class="comment">//平滑处理</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> i;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//LTC2990器件ADC数据汇总</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">updateLtcAdcData</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//LtcPort0</span></span><br><span class="line">ltcMonData.ltcd.F1temp = ltc_adc[<span class="number">0</span>].volt;<span class="comment">//单位0.1°</span></span><br><span class="line">ltcMonData.ltcd.F2temp = ltc_adc[<span class="number">1</span>].volt;<span class="comment">//单位0.1°</span></span><br><span class="line"><span class="comment">//LtcPort1</span></span><br><span class="line">ltcMonData.ltcd.FPGA_MGTAVTT_AD = ltc_adc[<span class="number">2</span>].volt /<span class="number">10</span>;<span class="comment">//单位1mV</span></span><br><span class="line">ltcMonData.ltcd.FPGA_1V5_AD = ltc_adc[<span class="number">3</span>].volt /<span class="number">10</span>;<span class="comment">//单位1mV</span></span><br><span class="line">ltcMonData.ltcd.VCCtemp = LtmAdcVtoTemp(ltc_adc[<span class="number">4</span>].volt);<span class="comment">//单位0.1°</span></span><br><span class="line">ltcMonData.ltcd.DSPtemp = LtmAdcVtoTemp(ltc_adc[<span class="number">5</span>].volt);<span class="comment">//单位0.1°</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//LtcPort2</span></span><br><span class="line">ltcMonData.ltcd.SWITCH_1V2 = ltc_adc[<span class="number">6</span>].volt/<span class="number">10</span>;<span class="comment">//单位1mV</span></span><br><span class="line">ltcMonData.ltcd.FPGA2_DVREF_0V75 = ltc_adc[<span class="number">7</span>].volt/<span class="number">10</span>;<span class="comment">//单位1mV</span></span><br><span class="line"><span class="comment">//LtcPort3</span></span><br><span class="line">ltcMonData.ltcd.DSP1_CVDD_AD = (ltc_adc[<span class="number">8</span>].volt)/<span class="number">10</span>;<span class="comment">//单位1mV</span></span><br><span class="line"></span><br><span class="line">ltcMonData.ltcd.MMC_EPHY_2V5 = (ltc_adc[<span class="number">9</span>].volt)/<span class="number">10</span>;<span class="comment">//单位1mV</span></span><br><span class="line">ltcMonData.ltcd.VCCINT_FPGA2_1V0 = (ltc_adc[<span class="number">10</span>].volt)/<span class="number">10</span>;<span class="comment">//单位1mV</span></span><br><span class="line"></span><br><span class="line">ltcMonData.ltcd.DSP_1V5_AD = (ltc_adc[<span class="number">11</span>].volt)/<span class="number">10</span>;<span class="comment">//单位1mV</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/******************* END OF FILE *********/</span></span><br></pre></td></tr></table></figure><h3 id="ltc2990h"><a class="markdownIt-Anchor" href="#ltc2990h"></a> ltc2990.h</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ltc2990.h</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __LTC2990_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __LTC2990_H</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;sys.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;string.h&quot;</span> </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span><span class="title">Chip_ADC_Module_Voltage_Sample_strcuct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="type">uint32_t</span> cntSp;</span><br><span class="line"><span class="type">int</span> sum;</span><br><span class="line"><span class="type">int</span> volt;</span><br><span class="line"><span class="type">int</span>dv;</span><br><span class="line"><span class="type">int</span>tv[<span class="number">16</span>];</span><br><span class="line">&#125;CM_ADC_DATA;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">ltc_2990_sample_control_data_packdge</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="type">uint8_t</span>baseaddr;</span><br><span class="line"><span class="type">uint8_t</span>mode;</span><br><span class="line"><span class="type">uint8_t</span>func;</span><br><span class="line"><span class="type">uint8_t</span>chnum;</span><br><span class="line"></span><br><span class="line">&#125;LTC2990CPKG;<span class="comment">//监控数据结构体</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//定义寄存器地址</span></span><br><span class="line"><span class="comment">//四个LTC2990</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LTC_Port(x)(x)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LTC_VMSB(x)((x&lt;&lt;1)+0x06)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LTC_VLSB(x)((x&lt;&lt;1)+0x07)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LTC0_BASE_ADDR(0x98) <span class="comment">//ADR1=0;ADR0=0;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LTC1_BASE_ADDR(0x9a) <span class="comment">//ADR1=0;ADR0=1;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LTC2_BASE_ADDR(0x9c) <span class="comment">//ADR1=1;ADR0=0;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LTC3_BASE_ADDR(0x9e) <span class="comment">//ADR1=1;ADR0=1;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> STATUS_REG_ADDR(0x00)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> CONTROL_REG_ADDR(0x01)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> TRIGGE_REG_ADDR(0x02)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>TINTMSB_DATA_REG_ADDR(0x04)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> TINTLSB_DATA_REG_ADDR(0x05)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> V1MSB_DATA_REG_ADDR(0x06)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> V1LSB_DATA_REG_ADDR(0x07)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> V2MSB_DATA_REG_ADDR(0x08)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> V2LSB_DATA_REG_ADDR(0x09)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> V3MSB_DATA_REG_ADDR(0x0a)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> V3LSB_DATA_REG_ADDR(0x0b)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> V4MSB_DATA_REG_ADDR(0x0c)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> V4LSB_DATA_REG_ADDR(0x0d)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> VCCMSB_DATA_REG_ADDR(0x0e)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> VCCLSB_DATA_REG_ADDR(0x0f)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">LTC_MONITOR_DATA_STRUCT</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="comment">//LTC0</span></span><br><span class="line"><span class="type">int16_t</span>F1temp;</span><br><span class="line"><span class="type">int16_t</span>F2temp;</span><br><span class="line"><span class="comment">//LTC1</span></span><br><span class="line"><span class="type">uint16_t</span>FPGA_MGTAVTT_AD;</span><br><span class="line"><span class="type">uint16_t</span>FPGA_1V5_AD;</span><br><span class="line"><span class="type">int16_t</span>VCCtemp;</span><br><span class="line"><span class="type">int16_t</span>DSPtemp;</span><br><span class="line"><span class="comment">//LTC2</span></span><br><span class="line"><span class="type">uint16_t</span>SWITCH_1V2;</span><br><span class="line"><span class="type">uint16_t</span>FPGA2_DVREF_0V75;</span><br><span class="line"></span><br><span class="line"><span class="comment">//LTC3</span></span><br><span class="line"><span class="type">uint16_t</span>DSP1_CVDD_AD;</span><br><span class="line"></span><br><span class="line"><span class="type">uint16_t</span>MMC_EPHY_2V5;</span><br><span class="line"><span class="type">uint16_t</span>VCCINT_FPGA2_1V0;</span><br><span class="line"></span><br><span class="line"><span class="type">uint16_t</span>DSP_1V5_AD;</span><br><span class="line">&#125;LTC_DATA_st;<span class="comment">//监控数据结构体</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LTC_LEN(sizeof(LTC_DATA_st) &gt;&gt; 1)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">union</span> <span class="title">ltc_union_data_block</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">LTC_DATA_stltcd;</span><br><span class="line"><span class="type">uint16_t</span>reg[LTC_LEN];</span><br><span class="line">&#125;MONITOR_DATA;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//定义控制寄存器工作模式数据</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>  CONTROL_REG_MODE_V1V2_T   (0x98)<span class="comment">//V1，V2,TR3模式</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>  CONTROL_REG_MODE_V1DV2_T   (0x99)<span class="comment">//V1_V2,TR3模式</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>  CONTROL_REG_MODE_V1DV2_V3V4   (0x1a)<span class="comment">//V1_V2,V3V4模式</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>  CONTROL_REG_MODE_TR1_V3V4   (0x9b)<span class="comment">//TR1,V3V4模式</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>  CONTROL_REG_MODE_TR1_V3DV4   (0x9c)<span class="comment">//TR1,V3_V4模式</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>  CONTROL_REG_MODE_TR1_TR2   (0x9d)<span class="comment">//TR1,TR2模式</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>  CONTROL_REG_MODE_V1DV2_V3DV4   (0x1e)<span class="comment">//V1_V2——V3_V4模式</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>  CONTROL_REG_MODE_V1V2V3V4   (0x1f)<span class="comment">//V1,V2,V3,V4模式</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> I_K_FACTOR (247)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> I_B_FACTOR (-406260)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LTC_VCC_DATA_MASK (0x7fff)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LTC_SIGNAL_DATA_MASK (0x4000)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LTC_HIGH_TEMP_DATA_MASK (0x2000)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LTC_TEMP_DATA_MASK (0x1fff)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LTC_TEMP_SIGNAL_DATA_MASK (0x1000)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LTC_DATA_VALID_MASK (0x8000)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">extern</span> CM_ADC_DATA ltc_adc[LTC_LEN];</span><br><span class="line"><span class="keyword">extern</span> MONITOR_DATA ltcMonData;</span><br><span class="line"></span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span> <span class="title function_">LtcInit</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span> <span class="title function_">sampleLtcAdc</span><span class="params">(<span class="type">int</span> phase)</span>;</span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span> <span class="title function_">updateLtcAdcData</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span> <span class="comment">/* __LTC2990_H */</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/******************* END OF FILE *********/</span></span><br></pre></td></tr></table></figure><h3 id="user_iicc"><a class="markdownIt-Anchor" href="#user_iicc"></a> user_iic.c</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//user_iic.c</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;user_iic.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">iicLtcWrite</span><span class="params">(<span class="type">uint8_t</span> Dcvaddr, <span class="type">uint8_t</span> Regaddr, <span class="type">uint8_t</span> Regdata)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//IIC_Write1Byte(Dcvaddr| IIC_WRITE, Regaddr, Regdata);</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">iicLtcRead</span><span class="params">(<span class="type">uint8_t</span> Dcvaddr, <span class="type">uint8_t</span> Regaddr)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">uint8_t</span> readdata = <span class="number">0</span>;</span><br><span class="line"><span class="comment">//readdata = IIC_Read1Byte(Dcvaddr | IIC_WRITE, Regaddr, Dcvaddr | IIC_READ, 0);</span></span><br><span class="line"><span class="keyword">return</span> readdata;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/******************* END OF FILE *********/</span></span><br></pre></td></tr></table></figure><h3 id="user_iich"><a class="markdownIt-Anchor" href="#user_iich"></a> user_iic.h</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//user_iic.h</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __USER_IIC_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __USER_IIC_H</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;sys.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> BASE_PORT(0)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> IIC_WRITE (0 &lt;&lt; 0)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> IIC_READ (1 &lt;&lt; 0)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span> <span class="title function_">iicLtcWrite</span><span class="params">(<span class="type">uint8_t</span> Dcvaddr, <span class="type">uint8_t</span> Regaddr, <span class="type">uint8_t</span> data)</span>;</span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span> <span class="title function_">iicLtcRead</span><span class="params">(<span class="type">uint8_t</span> Dcvaddr, <span class="type">uint8_t</span> Regaddr)</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span> <span class="comment">/* __USER_IIC_H */</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/******************* END OF FILE *********/</span></span><br></pre></td></tr></table></figure><h3 id="mainc"><a class="markdownIt-Anchor" href="#mainc"></a> main.c</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//main.c</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;ltc2990.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"> <span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line"> &#123;</span><br><span class="line"><span class="type">uint32_t</span> clockCnt;</span><br><span class="line"><span class="type">int</span> clockPhase = clockCnt &amp; <span class="number">0x7F</span>;<span class="comment">//MAX：0x7F = ‘d127</span></span><br><span class="line"></span><br><span class="line">delay_init();    <span class="comment">//延时函数初始化  </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">clockCnt++;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifndef</span> MONITOR_LTC</span></span><br><span class="line"><span class="keyword">if</span>((clockPhase &gt;= <span class="number">1</span>) &amp;&amp; (clockPhase &lt; <span class="number">14</span>))</span><br><span class="line">&#123;<span class="comment">//通过变量 clockPhase 计数的节奏执行，具体应用自行变通。</span></span><br><span class="line">sampleLtcAdc(clockPhase - <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(clockPhase == <span class="number">14</span>)</span><br><span class="line">&#123;</span><br><span class="line">updateLtcAdcData();</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line">&#125;</span><br><span class="line"> &#125;</span><br><span class="line"><span class="comment">/******************* END OF FILE *********/</span></span><br></pre></td></tr></table></figure><h2 id="上板"><a class="markdownIt-Anchor" href="#上板"></a> 上板</h2><p>运行结果：<br />略</p><h2 id="闲谈"><a class="markdownIt-Anchor" href="#闲谈"></a> 闲谈</h2>]]></content>
      
      
      <categories>
          
          <category> MCU 应用练习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MCU </tag>
            
            <tag> STMicroelectronics(ST) </tag>
            
            <tag> 库函数应用练习 </tag>
            
            <tag> STM32F1 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ARM笔记(3) 记录88E1111的寄存器配置</title>
      <link href="/posts/375725893.html"/>
      <url>/posts/375725893.html</url>
      
        <content type="html"><![CDATA[<p>本章节旨在记录“88E1111的寄存器配置”的分析。</p><h2 id="配置原则"><a class="markdownIt-Anchor" href="#配置原则"></a> 配置原则</h2><p>PHY的寄存器中每1bit都表示不同含义，非必要改动的地方采用默认配置，故下列配置“按先读后写，精准调节”的原则进行逐位赋值。</p><h2 id="配置流程"><a class="markdownIt-Anchor" href="#配置流程"></a> 配置流程</h2><blockquote><p>R27</p><blockquote><p>清除bit[3:0];<br />置bit[3:0]=0xe;即表示GMII到SGMII.<br />置bit[15]=0x1;即表示禁用Fiber和Copper的选择.</p></blockquote></blockquote><blockquote><p>R0</p><blockquote><p>置bit[15]=0x1;即表示写复位，写入的寄存器值生效.</p></blockquote></blockquote><blockquote><p>R0</p><blockquote><p>置bit[12]=0x1;即表示使能自协商.<br />置bit[18]=0x1;即表示选择全双工模式.</p></blockquote></blockquote><blockquote><p>R20</p><blockquote><p>置bit[6:4]=0x5;即表示MAC百兆速率.</p></blockquote></blockquote><blockquote><p>R16</p><blockquote><p>置bit[6:5]=0x3;即表示MDI交叉模式，以及自动分频.</p></blockquote></blockquote><blockquote><p>R27</p><blockquote><p>置bit[15]=0x1;即表示禁用Fiber和Copper的自动选择.</p></blockquote></blockquote><blockquote><p>R0</p><blockquote><p>置bit[12]=0x1;即表示使能自协商.<br />置bit[15]=0x1;即表示写复位，写入的寄存器值生效.</p></blockquote></blockquote><h2 id="异常现象"><a class="markdownIt-Anchor" href="#异常现象"></a> 异常现象</h2><p>PHY的SGMII链路网络异常，无法ping通IP地址。</p><h2 id="不同状态下phy的sgmii寄存器读取对比"><a class="markdownIt-Anchor" href="#不同状态下phy的sgmii寄存器读取对比"></a> 不同状态下PHY的SGMII寄存器读取对比</h2><table><thead><tr><th>序号</th><th>寄存器名</th><th>异常状态（不通）</th><th>正常状态（能通）</th></tr></thead><tbody><tr><td>1</td><td>R0</td><td>0x1140</td><td>0x1140</td></tr><tr><td>2</td><td>R1</td><td>0x0169</td><td>0x0169</td></tr><tr><td>3</td><td>R15</td><td>0xC000</td><td>0xc000</td></tr><tr><td>4</td><td>R16</td><td>0x0078</td><td>0x0078</td></tr><tr><td>5</td><td>R17</td><td>0x08E0</td><td>0x7C10</td></tr><tr><td>6</td><td>R20</td><td>0x0C40</td><td>0x0C40</td></tr><tr><td>7</td><td>R27</td><td>0x848E</td><td>0x848E</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> ARM 应用场景故障分析 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 国产 </tag>
            
            <tag> ARM </tag>
            
            <tag> 应用故障分析 </tag>
            
            <tag> PHY </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FPGA笔记(3) Vivado固化FPGA外挂bpi-Flash步骤</title>
      <link href="/posts/1704327597.html"/>
      <url>/posts/1704327597.html</url>
      
        <content type="html"><![CDATA[<p>本章节旨在记录“Vivado固化FPGA外挂bpi-Flash(型号S29GL256P)”基本步骤。</p><h2 id="准备工作"><a class="markdownIt-Anchor" href="#准备工作"></a> 准备工作</h2><p>本章节是，使用Vivado(以Vivado 2018.3为例)固化.MCS文件到FPFGA外挂BPI接口存储器件过程，在操作前应准备好要固化的MCS格式文件及与FPGA对应关系，以及明确要固化的目标器件型号，如FPGA型号、连接方式、外挂Flash型号、位宽等等。开始以下内容即表示已完成准备工作。</p><h2 id="打开vivado工具"><a class="markdownIt-Anchor" href="#打开vivado工具"></a> 打开Vivado工具</h2><p>先将设备加电后，接上仿真器，双击Vivado图标，点击Open Hardware Manager以打开固化工具。</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图标样式    </button><div class="hide-content"><img src="/assets/article/study-ic-fpga/notes-fpga/003_a02_b01.png" alt="图标" style="zoom:100%;" /></div></div><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图标样式    </button><div class="hide-content"><img src="/assets/article/study-ic-fpga/notes-fpga/003_a02_b02.png" alt="图标" style="zoom:100%;" /></div></div><h2 id="扫链连接器件"><a class="markdownIt-Anchor" href="#扫链连接器件"></a> 扫链连接器件</h2><p>点击“Auto Connect”连接板子。</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图标样式    </button><div class="hide-content"><img src="/assets/article/study-ic-fpga/notes-fpga/003_a03_b01.png" alt="界面操作截图" style="zoom:100%;" /></div></div><h2 id="添加配置存储器件"><a class="markdownIt-Anchor" href="#添加配置存储器件"></a> 添加配置存储器件</h2><p>在Hardware面板中右击FPGA器件（xc7vx690t_0），选择“Add Configuration Memery Device”。</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图标样式    </button><div class="hide-content"><img src="/assets/article/study-ic-fpga/notes-fpga/003_a04_b01.png" alt="界面操作截图" style="zoom:100%;" /></div></div><p>在弹出的添加配置存储器的界面中，找到板载的Flash存储器型号，点击OK，完成添加,Flash型号如下图所示。</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图标样式    </button><div class="hide-content"><img src="/assets/article/study-ic-fpga/notes-fpga/003_a04_b02.png" alt="界面操作截图" style="zoom:100%;" /></div></div><p>添加完成后，Vivado会提示添加完成，是否立即配置存储器。点击OK，进入配置存储器的界面，选择生成的Mcs文件，然后点击OK，开始将mcs文件烧写到外部配置flash存储器中。</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图标样式    </button><div class="hide-content"><img src="/assets/article/study-ic-fpga/notes-fpga/003_a04_b03.png" alt="界面操作截图" style="zoom:100%;" /></div></div>]]></content>
      
      
      <categories>
          
          <category> FPGA 开发环境应用笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Xilinx </tag>
            
            <tag> FPGA </tag>
            
            <tag> Xilinx开发环境应用笔记 </tag>
            
            <tag> Vivado </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FPGA笔记(2) ISE14.7固化FPGA外挂bpi-Flash步骤</title>
      <link href="/posts/3111608661.html"/>
      <url>/posts/3111608661.html</url>
      
        <content type="html"><![CDATA[<p>本章节旨在记录“ISE14.7固化FPGA外挂bpi-Flash(型号S29GL256P)”基本步骤。</p><h2 id="准备工作"><a class="markdownIt-Anchor" href="#准备工作"></a> 准备工作</h2><p>本章节是，使用ISE固化.MCS文件到FPFGA外挂BPI接口存储器件过程，在操作前应准备好要固化的MCS格式文件及与FPGA对应关系，以及明确要固化的目标器件型号，如FPGA型号、连接方式、外挂Flash型号、位宽等等。开始以下内容即表示已完成准备工作。</p><h2 id="打开固化工具"><a class="markdownIt-Anchor" href="#打开固化工具"></a> 打开固化工具</h2><p>先将设备加电后，接上仿真器，双击iMPACT，以打开固化工具。</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图标样式    </button><div class="hide-content"><img src="/assets/article/study-ic-fpga/notes-fpga/002_a02_b01.png" alt="图标" style="zoom:100%;" /></div></div><h2 id="打开扫链界面"><a class="markdownIt-Anchor" href="#打开扫链界面"></a> 打开扫链界面</h2><p>在工具界面，双击Boundary Scan识别。</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图标样式    </button><div class="hide-content"><img src="/assets/article/study-ic-fpga/notes-fpga/002_a03_b01.png" alt="界面操作截图" style="zoom:100%;" /></div></div><h2 id="开始扫链"><a class="markdownIt-Anchor" href="#开始扫链"></a> 开始扫链</h2><p>右击图中蓝色字体区域，在出现的选项中选择initial Chain。</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图标样式    </button><div class="hide-content"><img src="/assets/article/study-ic-fpga/notes-fpga/002_a04_b01.png" alt="界面操作截图" style="zoom:100%;" /></div></div><h2 id="选择目标器件并加载对应固化文件"><a class="markdownIt-Anchor" href="#选择目标器件并加载对应固化文件"></a> 选择目标器件并加载对应固化文件</h2><p>扫链完成后，会出现一些弹窗，单击No，在随后出现的界面中点击Cancel 。</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图标样式    </button><div class="hide-content"><img src="/assets/article/study-ic-fpga/notes-fpga/002_a05_b01.png" alt="界面操作截图" style="zoom:100%;" /></div></div><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图标样式    </button><div class="hide-content"><img src="/assets/article/study-ic-fpga/notes-fpga/002_a05_b02.png" alt="界面操作截图" style="zoom:100%;" /></div></div><p>右击芯片，选择Add SPI/BPI Flash，选择mcs文件。</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图标样式    </button><div class="hide-content"><img src="/assets/article/study-ic-fpga/notes-fpga/002_a05_b03.png" alt="界面操作截图" style="zoom:100%;" /></div></div><p>根据mcs文件输出的存放地址，选择mcs文件，选择Flash芯片，型号为（根据开发板型号自己选择），点击OK。</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图标样式    </button><div class="hide-content"><img src="/assets/article/study-ic-fpga/notes-fpga/002_a05_b04.png" alt="界面操作截图" style="zoom:100%;" /></div></div><h2 id="开始固化操作"><a class="markdownIt-Anchor" href="#开始固化操作"></a> 开始固化操作</h2><p>右击Flash，选择program。</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图标样式    </button><div class="hide-content"><img src="/assets/article/study-ic-fpga/notes-fpga/002_a06_b01.png" alt="界面操作截图" style="zoom:100%;" /></div></div><p>出现属性弹窗界面，单击OK</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图标样式    </button><div class="hide-content"><img src="/assets/article/study-ic-fpga/notes-fpga/002_a06_b02.png" alt="界面操作截图" style="zoom:100%;" /></div></div><p>出现如下界面，耐心等待，完成固化。</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看图标样式    </button><div class="hide-content"><img src="/assets/article/study-ic-fpga/notes-fpga/002_a06_b03.png" alt="界面操作截图" style="zoom:100%;" /></div></div>]]></content>
      
      
      <categories>
          
          <category> FPGA 开发环境应用笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Xilinx </tag>
            
            <tag> ISE 14.7 </tag>
            
            <tag> FPGA </tag>
            
            <tag> Xilinx开发环境应用笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ARM笔记(1) MCU访问外围设备SM2990数据异常</title>
      <link href="/posts/4263387656.html"/>
      <url>/posts/4263387656.html</url>
      
        <content type="html"><![CDATA[<p>本章节旨在记录“MCU访问外围设备SM2990数据异常”现象及排查（分析）故障器件SM2990的思路。</p><h2 id="异常现象"><a class="markdownIt-Anchor" href="#异常现象"></a> 异常现象</h2><p>相同驱动环境，芯片不同，现象表现有差别；<br />使用原工程驱动（同一位置对比）</p><p>SM2990：读取的数据不对；</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看细节    </button><div class="hide-content"><img src="/assets/article/study-ic-arm/notes-mcu/001_a01_b01.png" alt="现象" style="zoom:50%;" /></div></div><p>LTC2990：读取的数据正常；</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看细节    </button><div class="hide-content"><img src="/assets/article/study-ic-arm/notes-mcu/001_a01_b02.png" alt="现象" style="zoom:50%;" /></div></div><p>现象分析：相同位置相同驱动程序，同型号不同厂商器件的数据读取有差异，不正常。</p><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p>异常可能性：<br />1.可能是该外设器件问题；<br />2.可能器件技术差异，配置应有区别；</p><details class="toggle" ><summary class="toggle-button" style="">附-器件应用环境</summary><div class="toggle-content"><p>原理图：<br />位号U83器件：</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看细节    </button><div class="hide-content"><img src="/assets/article/study-ic-arm/notes-mcu/001_a02_b01.png" alt="电路" style="zoom:50%;" /></div></div><p>硬件实物：</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看细节    </button><div class="hide-content"><img src="/assets/article/study-ic-arm/notes-mcu/001_a02_b02.png" alt="电路" style="zoom:50%;" /></div></div><p>焊接实况及驱动状况简述：</p><table><thead><tr><th style="text-align:center">序号</th><th style="text-align:center">位号</th><th style="text-align:center">焊接器件</th><th style="text-align:center">数据读取状况</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:center">U79</td><td style="text-align:center">-</td><td style="text-align:center">-</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center">U80</td><td style="text-align:center">LTC2990</td><td style="text-align:center">数据正常</td></tr><tr><td style="text-align:center">3</td><td style="text-align:center">U82</td><td style="text-align:center">LTC2990</td><td style="text-align:center">数据正常</td></tr><tr><td style="text-align:center">4</td><td style="text-align:center">U83</td><td style="text-align:center">SM2990</td><td style="text-align:center">数据读取与实际测量（万用表测量引脚）差别大</td></tr></tbody></table><p>注：四片器件的I2C接口、供电等硬件均一致，固件驱动一致。</p></div></details><h2 id="分析验证"><a class="markdownIt-Anchor" href="#分析验证"></a> 分析验证</h2><h3 id="检查数据异常时的外部实际测量状态"><a class="markdownIt-Anchor" href="#检查数据异常时的外部实际测量状态"></a> 检查数据异常时的外部实际测量状态</h3><p>外部硬件测量正常；</p><h3 id="使用sm2990厂商建议流程驱动使用单次采集增加vcc数值读取"><a class="markdownIt-Anchor" href="#使用sm2990厂商建议流程驱动使用单次采集增加vcc数值读取"></a> 使用SM2990厂商建议流程驱动（使用单次采集，增加Vcc数值读取）</h3><blockquote><p>厂商建议顺序：<br />1.先读取数据寄存器，然后再读取状态寄存器，确认状态寄存器是否都清零了。<br />2.配置设置寄存器为5F<br />3.向02寄存器中写入数据启动转换<br />4.延时一段时间比如500ms，这个仅用来调试，可以时间长点。<br />5，读取状态寄存器，确认转换已经完成。<br />6.再读取数据寄存器</p></blockquote><p>SM2990读取的数据不对（同板卡上LTC2990器件使用相同驱动流程）</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看细节    </button><div class="hide-content"><img src="/assets/article/study-ic-arm/notes-mcu/001_a03_b01.png" alt="验证结果" style="zoom:50%;" /></div></div><p>加长建议顺序中的“500ms”延时无改善</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看细节    </button><div class="hide-content"><img src="/assets/article/study-ic-arm/notes-mcu/001_a03_b02.png" alt="验证结果" style="zoom:50%;" /></div></div><p>控制寄存器的读入读出对比，确认控制寄存器写入了（打断点查看的结果一致），数据依旧不对</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看细节    </button><div class="hide-content"><img src="/assets/article/study-ic-arm/notes-mcu/001_a03_b03.png" alt="验证结果" style="zoom:50%;" /></div></div><h3 id="使用其它项目的相关驱动框架访问只适配了器件地址等信息无关键改动"><a class="markdownIt-Anchor" href="#使用其它项目的相关驱动框架访问只适配了器件地址等信息无关键改动"></a> 使用其它项目的相关驱动框架访问（只适配了器件地址等信息，无关键改动）</h3><p>SM2990器件的数据访问结果依旧不对</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看细节    </button><div class="hide-content"><img src="/assets/article/study-ic-arm/notes-mcu/001_a03_b04.png" alt="验证结果" style="zoom:50%;" /></div></div><h2 id="有效解决方案"><a class="markdownIt-Anchor" href="#有效解决方案"></a> 有效解决方案</h2><p>更换新器件，原器件返厂分析原因。</p><h2 id="附件"><a class="markdownIt-Anchor" href="#附件"></a> 附件</h2><p>暂无</p>]]></content>
      
      
      <categories>
          
          <category> ARM 应用场景故障分析 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 国产 </tag>
            
            <tag> ARM </tag>
            
            <tag> 应用故障分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ARM笔记(2) 关于GD32的应用环境准备工作说明</title>
      <link href="/posts/3580214588.html"/>
      <url>/posts/3580214588.html</url>
      
        <content type="html"><![CDATA[<p>使用KEIL v5下载程序到GD32器件上时，需要根据器件型号进行相关pack安装包解压以及算法文件加载，本说明中以GD32F303VET6（即GD32F30x_HD闪存存储产品）为例。</p><h2 id="资料准备"><a class="markdownIt-Anchor" href="#资料准备"></a> 资料准备</h2><p>官网下载GD32F30x的应用软件并安装相关pack；</p><h2 id=""><a class="markdownIt-Anchor" href="#"></a> </h2><h2 id="附件"><a class="markdownIt-Anchor" href="#附件"></a> 附件</h2><p>暂无</p>]]></content>
      
      
      <categories>
          
          <category> ARM 应用场景故障分析 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 国产 </tag>
            
            <tag> ARM </tag>
            
            <tag> 应用故障分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FPGA笔记(1) FPGA固化S29GL256P异常</title>
      <link href="/posts/2863292947.html"/>
      <url>/posts/2863292947.html</url>
      
        <content type="html"><![CDATA[<p>本章节旨在记录“FPGA固化S29GL256P异常”现象及排查（分析）思路。</p><h2 id="异常现象"><a class="markdownIt-Anchor" href="#异常现象"></a> 异常现象</h2><p>使用Vivado开发环境固化FPFGA外挂BPI接口存储器件过程，即用mcs文件烧录S29GL256P Flash，Vivado界面无报错；</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看细节    </button><div class="hide-content"><img src="/assets/article/study-ic-fpga/notes-fpga/001_a01_b01.png" alt="现象" style="zoom:50%;" /></div></div><p>固化完成后重启设备，Vivado开发平台显示FPGA程序未自动加载完成；</p><div class="hide-block"><button type="button" class="hide-button" style="background-color: blue;">点我查看细节    </button><div class="hide-content"><img src="/assets/article/study-ic-fpga/notes-fpga/001_a01_b02.png" alt="现象" style="zoom:50%;" /></div></div><p>现象分析：正常情况下，FPGA程序固化在搭载的Flash芯片后再次加电后，FPGA会自动加载Flash中存储的程序；但目前现象是该程序无法自动加载成功。</p><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p>异常可能性：<br />1.可能是Flash芯片虚焊或者受损；<br />2.可能FPGA某些配置（软件或者硬件电路）不正常；</p><h2 id="有效解决方案"><a class="markdownIt-Anchor" href="#有效解决方案"></a> 有效解决方案</h2><p>暂无</p>]]></content>
      
      
      <categories>
          
          <category> FPGA 应用场景故障分析 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 应用故障分析 </tag>
            
            <tag> Xilinx </tag>
            
            <tag> FPGA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo 进阶使用教程</title>
      <link href="/posts/3724585709.html"/>
      <url>/posts/3724585709.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="xxx"><a class="markdownIt-Anchor" href="#xxx"></a> XXX</h2><h3 id="xxx1"><a class="markdownIt-Anchor" href="#xxx1"></a> xxx1</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo </span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="xxx2"><a class="markdownIt-Anchor" href="#xxx2"></a> xxx2</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo </span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="xxx3"><a class="markdownIt-Anchor" href="#xxx3"></a> xxx3</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo </span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h2 id="yyy"><a class="markdownIt-Anchor" href="#yyy"></a> YYY</h2><h3 id="yyy1"><a class="markdownIt-Anchor" href="#yyy1"></a> yyy1</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo </span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="yyy2"><a class="markdownIt-Anchor" href="#yyy2"></a> yyy2</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo </span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="yyy3"><a class="markdownIt-Anchor" href="#yyy3"></a> yyy3</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo </span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo主题LiveForCode介绍</title>
      <link href="/posts/1112885394.html"/>
      <url>/posts/1112885394.html</url>
      
        <content type="html"><![CDATA[<p><a href="https://hexo.io/zh-cn/">Hexo</a> 是高效的静态站点生成框架，他基于 <a href="https://nodejs.org/en/">Node.js</a>。通过 Hexo 你可以轻松地使用 <a href="https://daringfireball.net/projects/markdown/">Markdown</a> 编写文章，除了 Markdown 本身的语法之外，还可以使用 Hexo 提供的 <a href="https://hexo.io/zh-cn/docs/tag-plugins.html">标签插件</a> 来快速的插入特定形式的内容。在这篇文章中，假定你已经成功安装了 Hexo，并使用 Hexo 提供的命令创建了一个站点。</p><blockquote><p>你可以访问 <a href="https://hexo.io/zh-cn/docs/">Hexo 的文档</a> 了解如何安装 Hexo</p></blockquote><p>在 Hexo 中有两份主要的配置文件，其名称都是 <code>_config.yml</code>。其中，一份位于 Hexo 根目录下，主要包含 Hexo 本身的配置；另一份位于主题目录下，这份配置由主题作者提供，主要用于配置主题相关的选项。<br />为了描述方便，在以下说明中，将前者称为 <strong>站点配置文件</strong> ， 后者称为 <strong>主题配置文件</strong> 。</p><h2 id="主题预览"><a class="markdownIt-Anchor" href="#主题预览"></a> 主题预览</h2><p><a href="https://www.notes.worstone.cn">Hexo - Live For Code</a></p><h2 id="安装live-for-code"><a class="markdownIt-Anchor" href="#安装live-for-code"></a> 安装Live For Code</h2><p>Hexo 安装主题的方式非常简单，只需要将主题文件拷贝至 Hexo 根目录的 themes 目录下，然后修改下配置文件即可。具体到 LiveForCode 来说，安装步骤如下。</p><h3 id="下载主题"><a class="markdownIt-Anchor" href="#下载主题"></a> 下载主题</h3><p>如果你熟悉 Git，建议你使用 <code>克隆最新版本</code> 的方式，之后的更新可以通过 <code>git pull</code> 来快速更新，而不用再次下载压缩包替换。</p><ol><li>克隆最新版本<br />在终端窗口下，定位到 Hexo 站点目录下。使用 Git Checkout 代码：</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd your-hexo-site</span><br><span class="line">git clone https://github.com/first19326/hexo-liveforcode</span><br></pre></td></tr></table></figure><p>将克隆下来的文件夹中的 <code>LiveForCode</code> 文件夹移动至站点的 <code>themes</code> 目录下，并将 <code>source</code> 文件夹中的 <code>about</code>、<code>category</code>、<code>comment</code>、<code>donate</code>、<code>friend</code> 以及 <code>tag</code> 文件夹移动至 Hexo 站点目录下的 <code>source</code> 文件夹中。这些文件夹分别对应着 <strong>关于</strong> 、 <strong>标签</strong> 、 <strong>留言板</strong> 、 <strong>赞赏</strong> 、 <strong>友情链接</strong> 以及 <strong>分类</strong> 页面，其中的 <code>index.md</code> 中的内容为各个页面显示的内容，大家可以根据自己的情况进行修改。</p><ol start="2"><li>下载稳定版本<br />前往 LiveForCode 版本发布页面。<br />选择你所需要的版本，下载 Download 区域下的 Source Code (zip) 到本地。<br />解压所下载的压缩包，并将解压后的文件夹中的 <code>LiveForCode</code> 文件夹移动至站点的 <code>themes</code> 目录下，并将 <code>source</code> 文件夹中的 <code>about</code>、<code>category</code>、<code>comment</code>、<code>donate</code>、<code>friend</code> 以及 <code>tag</code> 文件夹移动至 Hexo 站点目录下的 <code>source</code> 文件夹中。这些文件夹分别对应着 <strong>关于</strong> 、 <strong>标签</strong> 、 <strong>留言板</strong> 、 <strong>赞赏</strong> 、 <strong>友情链接</strong> 以及 <strong>分类</strong> 页面，其中的 <code>index.md</code> 中的内容为各个页面显示的内容，大家可以根据自己的情况进行修改。</li></ol><h3 id="启用主题"><a class="markdownIt-Anchor" href="#启用主题"></a> 启用主题</h3><p>与所有 Hexo 主题启用的模式一样。当 克隆/下载 完成后，打开 <strong>站点配置文件</strong> ，找到 theme 字段，并将其值更改为 <code>LiveForCode</code>。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">LiveForCode</span></span><br></pre></td></tr></table></figure><p>到此，NexT 主题安装完成。下一步我们将验证主题是否正确启用。在切换主题之后、验证之前，我们最好使用 <code>hexo clean</code> 来清除 Hexo 的缓存。</p><h3 id="验证主题"><a class="markdownIt-Anchor" href="#验证主题"></a> 验证主题</h3><p>首先启动 Hexo 本地站点，并开启调试模式（即加上 --debug），整个命令是 <code>hexo s --debug</code>。 在服务启动的过程，注意观察命令行输出是否有任何异常信息，如果你碰到问题，这些信息将帮助他人更好的定位错误。<br />当命令行输出中提示出： <code>INFO  Hexo is running at http://0.0.0.0:4000/. Press Ctrl+C to stop.</code> 此时即可使用浏览器访问 <code>http://localhost:4000</code>，检查站点是否正确运行。</p><h2 id="站点设定"><a class="markdownIt-Anchor" href="#站点设定"></a> 站点设定</h2><p>在 <strong>站点配置文件</strong> 中，我修改了标签归档页面、分类归档页面以及文章归档页面的路径，如果大家使用默认的路径，则需要修改 <strong>主题配置文件</strong> 中的菜单设置。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">tag_dir:</span> <span class="string">tag</span></span><br><span class="line"><span class="attr">archive_dir:</span> <span class="string">archive</span></span><br><span class="line"><span class="attr">category_dir:</span> <span class="string">category</span></span><br></pre></td></tr></table></figure><h2 id="主题设定"><a class="markdownIt-Anchor" href="#主题设定"></a> 主题设定</h2><p>由于 <strong>主题配置文件</strong> 可能有所改动，就不在这里给大家详细说明，我会在 <strong>主题配置文件</strong> 中添加适当的注释，麻烦大家参考页面以及注释内容进行修改。</p><h2 id="404-页面设定"><a class="markdownIt-Anchor" href="#404-页面设定"></a> 404 页面设定</h2><p>主题中有相应的 <code>404</code> 错误页面，是单独的静态页面，没有添加到模板中。在使用主题的时候，需要大家将其中的 <strong>返回首页</strong> 的跳转链接 <code>https://notes.worstone.cn</code> 替换为自己网站的地址。<br />404 错误页面在主题文件夹 <code>LiveForCode</code> 中的 <code>source</code> 文件夹中。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;buttons&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;reload();&quot;</span>&gt;</span>刷新页面<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://notes.worstone.cn&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_self&quot;</span>&gt;</span>返回首页<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="第三方服务"><a class="markdownIt-Anchor" href="#第三方服务"></a> 第三方服务</h2><h3 id="abbrlink"><a class="markdownIt-Anchor" href="#abbrlink"></a> Abbrlink</h3><p>Hexo 默认的文章链接是以时间和文件名称命名的，如果文件名称是中文，那么文章链接会被转译，而转义后的链接很长，并且也不美观。<a href="https://github.com/rozbo/hexo-abbrlink">Hexo-Abbrlink</a> 插件基于文章的标题自动为文章生成固定的链接。</p><p>1.安装 Hexo-Abbrlink 插件。前往站点根目录，执行命令安装：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-abbrlink --save</span><br></pre></td></tr></table></figure><p>2.编辑 <strong>站点配置文件</strong>，修改以下配置：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">permalink:</span> <span class="string">posts/:abbrlink/</span> </span><br><span class="line"><span class="comment"># or</span></span><br><span class="line"><span class="attr">permalink:</span> <span class="string">posts/:abbrlink.html</span></span><br></pre></td></tr></table></figure><p>3.编辑 <strong>站点配置文件</strong>，新增以下配置：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># abbrlink config</span></span><br><span class="line"><span class="attr">abbrlink:</span></span><br><span class="line">  <span class="attr">alg:</span> <span class="string">crc32</span>      <span class="comment">#support crc16(default) and crc32</span></span><br><span class="line">  <span class="attr">rep:</span> <span class="string">dec</span>        <span class="comment">#support dec(default) and hex</span></span><br></pre></td></tr></table></figure><p>Hexo-Abbrlink 插件主要的设置选项：</p><ul><li><p>算法（alg）：目前支持 <code>crc16</code> 和 <code>crc32</code> 算法，默认值为 <code>crc16</code>。</p></li><li><p>形式（rep）：生成的链接可以是十进制（<code>dec</code>）格式，也可以是十六进制（<code>hex</code>）格式，默认值为十进制（<code>dec</code>）格式。</p></li></ul><p>生成的链接地址（参考）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">crc16 &amp; hex</span><br><span class="line">https://notes.worstone.cn/article/66c8.html</span><br><span class="line"></span><br><span class="line">crc16 &amp; dec</span><br><span class="line">https://notes.worstone.cn/article/65535.html</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">crc32 &amp; hex</span><br><span class="line">https://notes.worstone.cn/article/8ddf18fb.html</span><br><span class="line"></span><br><span class="line">crc32 &amp; dec</span><br><span class="line">https://notes.worstone.cn/article/1690090958.html</span><br></pre></td></tr></table></figure><h3 id="algolia-search"><a class="markdownIt-Anchor" href="#algolia-search"></a> Algolia Search</h3><p>1.前往 <a href="https://www.algolia.com/">Algolia</a> 注册页面，注册一个新账户。 可以使用 GitHub 或者 Google 账户直接登录，注册后的 14 天内拥有所有功能（包括收费类别的）。之后若未续费会自动降级为免费账户，免费账户总共有 10,000 条记录，每月有 100,000 的可以操作数。注册完成后，创建一个新的 Index，这个 Index 将在后面使用。<br />2.Index 创建完成后，此时这个 Index 里未包含任何数据。 接下来需要安装 <code>Hexo Algolia</code> 扩展，这个扩展的功能是搜集站点的内容并通过 API 发送给 Algolia。前往站点根目录，执行命令安装：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-algolia</span><br></pre></td></tr></table></figure><p>3.编辑 <strong>站点配置文件</strong> ，新增以下配置：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">algolia:</span></span><br><span class="line">  <span class="attr">applicationID:</span> <span class="string">&#x27;applicationID&#x27;</span></span><br><span class="line">  <span class="attr">apiKey:</span> <span class="string">&#x27;apiKey&#x27;</span></span><br><span class="line">  <span class="attr">indexName:</span> <span class="string">&#x27;...&#x27;</span></span><br></pre></td></tr></table></figure><p>注：这里的 <strong>apiKey</strong> 为 <code>Search-Only API Key</code><br />4.当配置完成，在站点根目录下执行一下命令更新 Index。请注意观察命令的输出。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export HEXO_ALGOLIA_INDEXING_KEY=Admin API Key</span><br><span class="line">hexo algolia</span><br></pre></td></tr></table></figure><p>5.Hexo Algolia 命令设置选项</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Options:</span><br><span class="line">  --dry-run       Does not push content to Algolia (default: false).</span><br><span class="line">  --flush         Resets the Algolia index before starting the indexation (default: false).</span><br><span class="line">  --indexing-key  An algolia API key with add/delete records permissions.</span><br><span class="line">              It should be different than the search-only API key configured in _config.yml.</span><br><span class="line">  --layouts       A comma-separated list of page layouts to index (default: &quot;page&quot;).</span><br></pre></td></tr></table></figure><p>说明：<br /><code>--flush</code> 如果是 <code>false</code> 则每一次都会直接添加内容到 Algolia 相关的 Index 中，如果不是第一次提交，则将其设置为 <code>true</code><br /><code>--layouts</code> 如果使用默认设置，提交的时候会将分类归档、标签归档、赞赏、留言板等页面内容提交到 Algolia， 在搜索的时候，将会搜索到分类归档、标签归档、赞赏、留言板等页面内容，建议使用时将其设置为 <code>post</code>。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo algolia --flush true --layouts post</span><br></pre></td></tr></table></figure><h3 id="vercel"><a class="markdownIt-Anchor" href="#vercel"></a> Vercel</h3><p><a href="https://vercel.com/">Vercel</a> 是一个开箱即用的网站托管平台，方便开发者快速部署自己的网站。它在全球都拥有 CDN 节点，因此比 Github 官方自带的 Github Pages 更加稳定，访问速度更快。</p><h4 id="vercel-部署方式"><a class="markdownIt-Anchor" href="#vercel-部署方式"></a> Vercel 部署方式</h4><p>进入到 Vercel 官网后，可以选择使用 Github 进行授权登录。Vercel 部署有两种方式（<strong>推荐第一种方式</strong>）：</p><p>1.利用 Vercel 的 Hexo 模板进行部署。</p><blockquote><p>特别说明 使用这种方式需要已经安装 Hexo。<font color="red">不需要</font> 进行 Hexo 初始化，即 <code>hexo init</code> 。</p></blockquote><p>选择 <strong>Clone Template</strong>，点击下方的 <strong>Browse All Templates</strong>，然后找到 <strong>Hexo</strong> 模版。</p><p><img src="/image/article/template.PNG" alt="template" /></p><p>选择模板后，进入到创建仓库界面，设置好仓库名称，然后点击 <strong>Create</strong> 即可。至于是否设置成私有仓库，根据个人意愿选择，目前 Github 的私有仓库是 <strong>免费</strong> 的。</p><p><img src="/image/article/repository.PNG" alt="repository" /></p><p>等待 Vercel 部署完成，跳转到部署成功的页面。点击 <strong>Go to Dashboard</strong> 即可查看刚刚的项目。</p><p><img src="/image/article/congratulations.PNG" alt="congratulations" /></p><p>部署好的模板项目是 Hexo 默认的主题，需要将 Github 对应的项目下载到本地进行修改。项目想要在本地进行运行，需要<strong>安装相关依赖</strong>，通过<code>npm install</code> 或 <code>cnpm install</code> 或<code>yarn install</code>皆可进行安装。依赖安装完成后，即可进行主题安装等相关操作。</p><p>2.通过 GitHub 托管 <code>hexo deploy</code> 生成的网页文件进行部署。</p><p>创建新的项目，选择 <strong>Import Git Repository</strong>，然后选择 Hexo 网站对应的仓库，点击 <strong>Import</strong>。</p><p><img src="/image/article/import.PNG" alt="import" /></p><p>跳转到 <strong>Configure Project</strong> 页面，项目名称可以自行修改，其他的自定义选项，<strong>建议不要修改</strong>，除非有什么特殊需求。</p><p><img src="/image/article/configure.PNG" alt="configure" /></p><p>点击 <strong>Deploy</strong>，然后等待部署完成即可。部署完成后，Vercel 会提供几个默认的域名，可以在对应项目中查看。</p><h4 id="vercel-自定义域名"><a class="markdownIt-Anchor" href="#vercel-自定义域名"></a> Vercel 自定义域名</h4><p>进入到 Vercel 的 <strong>Dashboard</strong>，然后点击对应项目，然后点击 <strong>View Domains</strong>，进入到项目的 <strong>Domains</strong> 界面，在这里可以进行域名管理。如果想要使用 Vercel 提供的二级域名，可以直接添加 <code>xxx.vercel.app</code>；如果想要绑定自己的域名，在添加域名后，会提示 <strong>Invalid Config</strong>，需要添加 DNS 解析。</p><h4 id="vercel-dns-解析"><a class="markdownIt-Anchor" href="#vercel-dns-解析"></a> Vercel DNS 解析</h4><p>1.如果是根域名，请在你的 DNS 解析处添加 <strong>A 记录</strong>，指向 <code>76.76.21.21</code>。</p><p>2.如果是子域名，请在你的 DNS 解析处添加 <strong>CNAME 记录</strong>，指向 <code>cname.vercel-dns.com</code>。</p><p>添加 DNS 解析记录之后，在 <strong>Vercel Domains</strong> 界面对应域名下方显示对号即表明验证成功。</p><p><img src="/image/article/invalid.PNG" alt="invalid" /></p><blockquote><p>特别说明 Github 仓库的分支尽量选择 <strong>master</strong>，否则 Github 推送之后，还需到 Vercel 手动部署项目。</p></blockquote><h3 id="设置-rss"><a class="markdownIt-Anchor" href="#设置-rss"></a> 设置 RSS</h3><p>1.安装 <code>Hexo-Feed</code> 插件。前往站点根目录，执行命令安装：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-generator-feed</span><br></pre></td></tr></table></figure><p>2.根据个人需求，编辑 <strong>站点配置文件</strong> ：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">feed:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">atom</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">atom.xml</span></span><br><span class="line">  <span class="attr">limit:</span> <span class="number">10</span></span><br></pre></td></tr></table></figure><h3 id="文章数据统计"><a class="markdownIt-Anchor" href="#文章数据统计"></a> 文章数据统计</h3><p>文章数据统计基于 <code>Valine.js</code> 插件实现。<br />实现方式：在文章列表页面加载 <code>Valine.js</code>， 只要 Valine 配置项中的 <code>el</code> 元素不存在即不会加载评论框相关内容。</p><p>1.文章评论数统计<br />Valine 会自动查找页面中 class 值为 <code>valine-comment-count</code> 的元素，获取其 <code>data-xid</code> 为查询条件。并将得到的值填充到其 class 的值为 <code>valine-comment-count</code> 的元素里：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- data-xid 将作为查询条件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;valine-comment-count&quot;</span> <span class="attr">data-xid</span>=<span class="string">&quot;&lt;Your/Path/Name&gt;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2.文章阅读量统计<br />Valine 从 <code>v1.2.0</code> 开始支持文章阅读量统计。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> <span class="title class_">Valine</span>(&#123;</span><br><span class="line">    <span class="attr">el</span>: <span class="string">&#x27;#vcomments&#x27;</span>,</span><br><span class="line">    ...</span><br><span class="line">    <span class="attr">visitor</span>: <span class="literal">true</span> <span class="comment">// 阅读量统计</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>如果开启了阅读量统计，Valine 会自动检测 LeanCloud 应用中是否存在 <code>Counter</code> 类，如果不存在会自动创建，无需手动创建。<br />Valine 会自动查找页面中 class 值为 <code>leancloud_visitors</code> 的元素，获取其 <code>id</code> 为查询条件。并将得到的值填充到其 class 的值为 <code>leancloud-visitors-count</code> 的子元素里：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- id 将作为查询条件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;&lt;Your/Path/Name&gt;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;leancloud_visitors&quot;</span> <span class="attr">data-flag-title</span>=<span class="string">&quot;Your Article Title&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;leancloud-visitors-count&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>特别说明 使用 <strong>国际版的 LeanCloud</strong> 的时候，需要配置 <strong>主题配置文件</strong> 中 Valine 的 <code>serverURLs</code>，内容为 LeanCloud 的 <code>Request Domain</code>，国内版则无需配置。</p></blockquote><h3 id="评论列表"><a class="markdownIt-Anchor" href="#评论列表"></a> 评论列表</h3><p>评论功能使用的是 <code>Valine.js</code> 插件，配置详情请参见 <a href="https://valine.js.org/">Valine</a>。</p><blockquote><p>特别说明 <strong>主题配置文件</strong> 中 Valine 的 <code>appId</code> 与 <code>appKey</code> 请大家自行配置自己的参数。如果评论数据提交到我的 LeanCloud 工作空间，我并不能保证数据的完整性。</p></blockquote><h3 id="赞赏页面"><a class="markdownIt-Anchor" href="#赞赏页面"></a> 赞赏页面</h3><p>赞赏页面使用了 <a href="https://github.com/Kaiyuan/sponsor-page">Sponsor Page</a>，并做了相关修改使其适应博客样式。感兴趣的小伙伴自行去了解吧。</p><h3 id="音乐播放器"><a class="markdownIt-Anchor" href="#音乐播放器"></a> 音乐播放器</h3><p>音乐播放器功能是使用 <code>APlayer.js</code> 以及 <code>Meting.js</code> 实现，配置详情参见 <a href="https://aplayer.js.org/#/home">APlayer</a>、<a href="https://github.com/metowolf/MetingJS">Meting</a>。<br />主题中有两种实现方式，一种是 <code>APlayer.js</code> 结合 <code>Meting.js</code> 的实现方式，另外一种是 <code>APlayer.js</code> 单独的实现方式，两种实现方式各有优缺点：<br />第一种实现方式配置简单，并且可以从各个音乐平台解析音乐。由于是从各个平台解析，故而不是特别稳定，并且在 <code>IE</code> 浏览器中需要特殊设置。<br />第二种实现方式配置相对复杂，需要单独提供音乐相关信息，但是十分稳定，且对于 <code>IE</code> 浏览器也可兼容，无需特殊配置。<br />主题中默认以 <strong>第一种实现方式</strong> 实现，第二种实现方式为备选方案，在第一种实现方式出现问题的时候，可以切换到第二种实现方式，保证网站的稳定运行。<br />针对第二种实现方式需要 <strong>注意</strong> 的地方：<br /><code>APlayer.js</code> 是基于 <code>HTML 5 Audio</code> 实现的一款音乐播放器插件，故而支持的音频格式有限，包括：<code>MP3</code>、<code>Wav</code> 以及 <code>Ogg</code> 格式，并且不同浏览器对这三种音频格式的支持也各有不同，详细信息大家参考 <a href="https://www.runoob.com/html/html5-audio.html">HTML5 Audio(音频)</a>。如果音频格式不支持，可以通过音频转换工具进行格式转换。<br /><code>APlayer.js</code> 是通过 <code>XMLHttpRequest</code> 获取歌词文件，所以存在 <strong>跨域</strong> 问题。可以考虑将歌词文件放在主题文件夹 <code>LiveForCode</code> 的 <code>source</code> 文件夹下（ <strong>注意</strong> ：这里的 <code>source</code> 文件夹不是 <code>Hexo</code> 站点目录下的 <code>source</code> 文件夹），解决跨域的问题。由于 <code>jsDelivr</code> 在响应请求的时候，会添加 <code>access-control-allow-origin: *</code> 的响应标头信息，故而不存在跨域问题，也可以使用这种方式。不过需要注意的是，<code>jsDelivr</code> 对资源的大小有所限制，不可以超过 <strong>50M</strong> 。<br /><code>APlayer.js</code> 获取到歌词后会将歌词中的空白行去掉，由于是单行显示歌词，所以有译文的双行歌词，只会显示下面一行歌词，可以将译文歌词拼接在歌词原文的后面解决这个问题。</p><h2 id="常见问题"><a class="markdownIt-Anchor" href="#常见问题"></a> 常见问题</h2><h3 id="关于-jquery-版本"><a class="markdownIt-Anchor" href="#关于-jquery-版本"></a> 关于 jQuery 版本</h3><p>mCustomScroll 目前暂不支持 <code>jQuery3.5</code> 以及以上版本，否则会导致代码块中的滚动条失效。</p><h3 id="position-fixed-定位问题"><a class="markdownIt-Anchor" href="#position-fixed-定位问题"></a> Position: fixed 定位问题</h3><p>由于背景动画的 <code>z-index</code> 为 <code>-1</code>，导致在IE浏览器中，菜单等多处 <code>position: fixed</code> 样式的部件出现闪烁抖动的问题，所以默认在IE浏览器中关闭了背景动画。如果是高版本IE，例如IE11则可在设置 -&gt; Internet选项 -&gt; 高级，将浏览中的’使用平滑滚动’选项勾掉，也可以解决这个问题。</p><h3 id="关于-github-page-的使用"><a class="markdownIt-Anchor" href="#关于-github-page-的使用"></a> 关于 Github Page 的使用</h3><p>详情请参见 <a href="https://hexo.io/zh-cn/docs/github-pages">将 Hexo 部署到 GitHub Pages</a>。<br />Github Page 支持设置自己的域名，建议在 Hexo 主题的 source 文件夹下新增一个 CNAME 的文件，将自己的域名配置进去，否则每次提交的时候会覆盖掉相关域名设置。<br />在域名的解析设置中，可以使用 CNAME 解析方式，也可以使用 A 记录 的方式。如果是 A 记录 的方式，则需要检索当前 Github Page 对应的服务器 IP 地址。</p><h3 id="关于-cdn"><a class="markdownIt-Anchor" href="#关于-cdn"></a> 关于 CDN</h3><p>CDN 可以在阿里云购买相关的 CDN 服务器，效果肯定是更好，这里使用的是 <a href="https://www.jsdelivr.com/">jsDelivr</a> 免费的 CDN 加速服务。但是有一个弊端，如果修改代码的时候没有 Github 的相关版本信息，则很容易读取到 jsDelivr 的缓存数据，而不是修改后的最新代码。至于这个缓存时间，我也拿捏不准。不过免费而且效果不错的东西，大家就不要要求太多了。</p><h3 id="关于-valine"><a class="markdownIt-Anchor" href="#关于-valine"></a> 关于 Valine</h3><p>由于很多小伙伴直接使用主题中 Valine 的 <code>appId</code> 以及 <code>appKey</code>，而且 Valine 默认设置的 <code>path</code> 为 <code>window.location.pathname</code>，会导致大家的留言板数据出现异常。所以这里还是建议大家设置自己的 LeanCloud，<strong>推荐使用国际版</strong> ，后续如果想要添加邮件提醒，这样会方便很多。</p><h3 id="关于-vercel"><a class="markdownIt-Anchor" href="#关于-vercel"></a> 关于 Vercel</h3><p>Github Pages 内容部署的服务器在美国，可能会导致国内部分地区加载速度较慢，大家可以将项目部署到 <strong>Vercel</strong> ，来提高网站的访问速度，同时也 <strong>方便百度对站点内容进行收录</strong> 。如果 <strong>网站域名已经备案</strong> ，则可以考虑 <strong>国内的阿里云或腾讯云的相关产品</strong> ，效果会更好。</p><h3 id="cannot-read-property-longcang-of-undefined"><a class="markdownIt-Anchor" href="#cannot-read-property-longcang-of-undefined"></a> Cannot read property ‘LongCang’ of undefined</h3><p>这个问题比较常见，是主题文件路径不正确导致的。因为很多小伙伴都询问这个问题，所以在这里进行一个说明。</p><p><img src="/image/article/structure.png" alt="Hexo-LiveForCode" /></p><p>直接从 Github 下载 <code>Zip</code> 格式的文件解压后或 Github <code>Clone</code> 后的文件结构应该如上图所示。这里需要注意，是将解压后文件夹中的 <code>LiveForCode</code> 文件夹复制到 <code>Hexo</code> 的 <code>themes</code> 文件夹下，而不是将解压后的 <code>Hexo-LiveForCode</code> 复制到 <code>themes</code> 文件夹下。</p><h3 id="标签-分类-归档等页面-404-或-cannot-get"><a class="markdownIt-Anchor" href="#标签-分类-归档等页面-404-或-cannot-get"></a> 标签、分类、归档等页面 <code>404</code> 或 <code>Cannot GET</code></h3><p>由于 <code>Hexo</code> 的标签、分类、归档等页面的目录修改为了 <code>tag</code>、<code>category</code>、<code>archive</code>，故使用默认的 <strong>站点配置文件</strong> 会出现这个问题。需要将 <strong>站点配置文件</strong> 中的 <code>Directory</code> 相关配置修改为：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">tag_dir:</span> <span class="string">tag</span></span><br><span class="line"><span class="attr">archive_dir:</span> <span class="string">archive</span></span><br><span class="line"><span class="attr">category_dir:</span> <span class="string">category</span></span><br></pre></td></tr></table></figure><h2 id="阶段计划"><a class="markdownIt-Anchor" href="#阶段计划"></a> 阶段计划</h2><p>1.使用 Vue.js 重构项目<br />2.整理模板的样式文件<br />3.加入 Pjax，优化页面加载速度<br />4.补充国际化支持语言<br />5.考虑是否加入黑夜模式</p><h2 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h2><p>由于我还是一名小白，可能还有很多问题无法解决，这个主题也可能存在很多不尽如人意的地方，在细节方面我也会尽力地去修改，也欢迎大家提出自己的问题，以及主题的相关建议，也欢迎大家提交代码。如果觉得这个主题不错，欢迎大家去使用。当然了，如果能赞赏我一下，我也是不介意的。(●ˇ∀ˇ●)</p><p>这个主题可定制的地方目前可能比较少，欢迎大家修改，也希望这个主题能够越来越好看，也希望越来越多的人能够喜欢。</p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo 简单使用教程</title>
      <link href="/posts/2904855878.html"/>
      <url>/posts/2904855878.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="quick-start"><a class="markdownIt-Anchor" href="#quick-start"></a> Quick Start</h2><h3 id="create-a-new-post"><a class="markdownIt-Anchor" href="#create-a-new-post"></a> Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="run-server"><a class="markdownIt-Anchor" href="#run-server"></a> Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="generate-static-files"><a class="markdownIt-Anchor" href="#generate-static-files"></a> Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="deploy-to-remote-sites"><a class="markdownIt-Anchor" href="#deploy-to-remote-sites"></a> Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo 准备环境搭建</title>
      <link href="/posts/3327631696.html"/>
      <url>/posts/3327631696.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="安装-git"><a class="markdownIt-Anchor" href="#安装-git"></a> 安装 Git</h2><p>官网下载<a href="https://www.git-scm.com/download/">Git</a>,根据系统支持选择对应版本，并安装。<br />安装步骤结束后，打开windows命令行，输入以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git version</span><br></pre></td></tr></table></figure><p>界面出现相应版本信息即表示安装成功。</p><h2 id="安装-nodejs"><a class="markdownIt-Anchor" href="#安装-nodejs"></a> 安装 Nodejs</h2><p>官网下载<a href="https://nodejs.org/en/download/">Nodejs</a>,根据系统支持选择对应版本，并安装。<br />安装步骤结束后，打开windows命令行，输入以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ node -v</span><br><span class="line">$ npm -v</span><br></pre></td></tr></table></figure><p>界面出现相应版本信息即表示安装成功。</p><h2 id="安装-hexo"><a class="markdownIt-Anchor" href="#安装-hexo"></a> 安装 Hexo</h2><p>打开windows命令行，输入以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br><span class="line">$ npm install hexo-server --save</span><br></pre></td></tr></table></figure><p>根据提示进行配置操作，安装步骤结束后，输入以下指令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo -v</span><br></pre></td></tr></table></figure><p>界面出现相应版本信息基本表示配置成功。</p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo 搭建站点的基础流程</title>
      <link href="/posts/1243066710.html"/>
      <url>/posts/1243066710.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="搭建本地环境"><a class="markdownIt-Anchor" href="#搭建本地环境"></a> 搭建本地环境</h2><p>安装 Git、Nodejs、Hexo 工具。</p><p>详见: <a href="/posts/3327631696.html">Hexo 准备环境搭建</a>。</p><h2 id="获取-hexo-基础站点文件"><a class="markdownIt-Anchor" href="#获取-hexo-基础站点文件"></a> 获取 Hexo 基础站点文件</h2><p>根据需要选择站点本地存放路径，并在该位置打开&quot;Git bash here&quot;，在该命令窗执行以下指令进行 Hexo 初始化：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init</span><br></pre></td></tr></table></figure><p>该指令主要是从官方服务器下载站点基本文件，包含一个初始的hexo主题landscape。<br />执行上述指令时，会出现下载失败的情况，需要网络状况良好的空间环境，一般出现多行中显示进度100%，即表示文件下载完成。</p><h2 id="选择-hexo-主题"><a class="markdownIt-Anchor" href="#选择-hexo-主题"></a> 选择 Hexo 主题</h2><p>使用 Hexo 官网发布主题，或者自定义主题，此处以Hexo主题LiveForCode为例。</p><p>详见: <a href="/posts/1112885394.html">Hexo 主题 LiveForCode 介绍</a>。</p><h2 id="新建文章及本地预览效果"><a class="markdownIt-Anchor" href="#新建文章及本地预览效果"></a> 新建文章及本地预览效果</h2><p>详见: <a href="/posts/2904855878.html">Hexo 简单使用教程</a>。</p><h2 id="修改及添加功能"><a class="markdownIt-Anchor" href="#修改及添加功能"></a> 修改及添加功能</h2><p>详见: <a href="/posts/3724585709.html">Hexo 进阶使用教程</a>。</p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
